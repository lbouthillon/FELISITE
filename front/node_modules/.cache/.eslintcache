[{"C:\\Users\\louis\\killer\\front\\src\\index.js":"1","C:\\Users\\louis\\killer\\front\\src\\serviceWorker.js":"2","C:\\Users\\louis\\killer\\front\\src\\App.jsx":"3","C:\\Users\\louis\\killer\\front\\src\\utils\\isLogged.js":"4","C:\\Users\\louis\\killer\\front\\src\\utils\\isValidated.js":"5","C:\\Users\\louis\\killer\\front\\src\\pages\\rules.jsx":"6","C:\\Users\\louis\\killer\\front\\src\\pages\\accueil.jsx":"7","C:\\Users\\louis\\killer\\front\\src\\pages\\Story.jsx":"8","C:\\Users\\louis\\killer\\front\\src\\pages\\enigma.jsx":"9","C:\\Users\\louis\\killer\\front\\src\\pages\\teams.jsx":"10","C:\\Users\\louis\\killer\\front\\src\\pages\\team.jsx":"11","C:\\Users\\louis\\killer\\front\\src\\pages\\createTeam.jsx":"12","C:\\Users\\louis\\killer\\front\\src\\pages\\users.jsx":"13","C:\\Users\\louis\\killer\\front\\src\\pages\\user.jsx":"14","C:\\Users\\louis\\killer\\front\\src\\pages\\message.jsx":"15","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\users.jsx":"16","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\gestion.jsx":"17","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\teams.jsx":"18","C:\\Users\\louis\\killer\\front\\src\\pages\\killFeed.jsx":"19","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\team.jsx":"20","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\message.jsx":"21","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\user.jsx":"22","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\afk.jsx":"23","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\stats.jsx":"24","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\kill.jsx":"25","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\killFeed.jsx":"26","C:\\Users\\louis\\killer\\front\\src\\components\\auth\\logout.component.jsx":"27","C:\\Users\\louis\\killer\\front\\src\\components\\auth\\login.component.jsx":"28","C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarD.jsx":"29","C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarDLogged.jsx":"30","C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarDAdmin.jsx":"31","C:\\Users\\louis\\killer\\front\\src\\components\\user\\createuser.jsx":"32","C:\\Users\\louis\\killer\\front\\src\\components\\user\\SearchUser.jsx":"33","C:\\Users\\louis\\killer\\front\\src\\utils\\nameParser.jsx":"34","C:\\Users\\louis\\killer\\front\\src\\components\\user\\CardUser.jsx":"35","C:\\Users\\louis\\killer\\front\\src\\components\\user\\UserGestion.jsx":"36","C:\\Users\\louis\\killer\\front\\src\\components\\team\\TeamGestion.jsx":"37","C:\\Users\\louis\\killer\\front\\src\\components\\team\\CardTeam.jsx":"38","C:\\Users\\louis\\killer\\front\\src\\components\\message\\message.jsx":"39","C:\\Users\\louis\\killer\\front\\src\\components\\Chart\\histo.jsx":"40","C:\\Users\\louis\\killer\\front\\src\\components\\message\\messageForm.jsx":"41","C:\\Users\\louis\\killer\\front\\src\\components\\enigma\\NewEditEnigma.jsx":"42","C:\\Users\\louis\\killer\\front\\src\\components\\utils\\ImageUploader.jsx":"43","C:\\Users\\louis\\killer\\front\\src\\components\\utils\\cropper.jsx":"44","C:\\Users\\louis\\killer\\front\\src\\pages\\pageSecrete.jsx":"45","C:\\Users\\louis\\killer\\front\\src\\pages\\Reliques.jsx":"46","C:\\Users\\louis\\killer\\front\\src\\pages\\covelba.jsx":"47","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\index.js":"48","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\serviceWorker.js":"49","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\App.jsx":"50","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\isLogged.js":"51","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\isValidated.js":"52","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\Story.jsx":"53","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\rules.jsx":"54","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\team.jsx":"55","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\users.jsx":"56","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\accueil.jsx":"57","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\teams.jsx":"58","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\message.jsx":"59","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\user.jsx":"60","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\pageSecrete.jsx":"61","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\createTeam.jsx":"62","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\enigma.jsx":"63","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\covelba.jsx":"64","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\killFeed.jsx":"65","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\teams.jsx":"66","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\users.jsx":"67","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\message.jsx":"68","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\Reliques.jsx":"69","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\gestion.jsx":"70","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\team.jsx":"71","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\user.jsx":"72","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\killFeed.jsx":"73","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\stats.jsx":"74","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\kill.jsx":"75","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\afk.jsx":"76","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarD.jsx":"77","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\auth\\logout.component.jsx":"78","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\auth\\login.component.jsx":"79","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\createuser.jsx":"80","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarDLogged.jsx":"81","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarDAdmin.jsx":"82","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\nameParser.jsx":"83","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\CardUser.jsx":"84","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\SearchUser.jsx":"85","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\UserGestion.jsx":"86","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\team\\TeamGestion.jsx":"87","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\team\\CardTeam.jsx":"88","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\message\\message.jsx":"89","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\message\\messageForm.jsx":"90","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\Chart\\histo.jsx":"91","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\enigma\\NewEditEnigma.jsx":"92","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\utils\\ImageUploader.jsx":"93","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\utils\\cropper.jsx":"94","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\activities.jsx":"95","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\activity\\CardActivity.jsx":"96","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\index.js":"97","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\serviceWorker.js":"98","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\App.jsx":"99","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\utils\\isLogged.js":"100","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\utils\\isValidated.js":"101","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\accueil.jsx":"102","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\activities.jsx":"103","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\bar\\navbarDLogged.jsx":"104","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\activity\\CardActivity.jsx":"105","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\bar\\navbarD.jsx":"106","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\signUp.jsx":"107","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\register.component.js":"108","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\services\\auth.services.js":"109","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\signIn.jsx":"110","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\login.component.js":"111","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\profile.jsx":"112","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\profile.component.js":"113","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\logout.component.js":"114"},{"size":464,"mtime":1631188916065,"results":"115","hashOfConfig":"116"},{"size":5086,"mtime":1631188916073,"results":"117","hashOfConfig":"116"},{"size":7283,"mtime":1633025196023,"results":"118","hashOfConfig":"116"},{"size":98,"mtime":1631688135280,"results":"119","hashOfConfig":"116"},{"size":527,"mtime":1631688135281,"results":"120","hashOfConfig":"116"},{"size":2984,"mtime":1632297893599,"results":"121","hashOfConfig":"116"},{"size":450,"mtime":1631688135267,"results":"122","hashOfConfig":"116"},{"size":5040,"mtime":1632247227954,"results":"123","hashOfConfig":"116"},{"size":2236,"mtime":1631188916073,"results":"124","hashOfConfig":"116"},{"size":5446,"mtime":1631688135278,"results":"125","hashOfConfig":"116"},{"size":18760,"mtime":1632724674505,"results":"126","hashOfConfig":"116"},{"size":3708,"mtime":1632041652691,"results":"127","hashOfConfig":"116"},{"size":4314,"mtime":1632502089498,"results":"128","hashOfConfig":"116"},{"size":18195,"mtime":1632758573580,"results":"129","hashOfConfig":"116"},{"size":1933,"mtime":1631188916073,"results":"130","hashOfConfig":"116"},{"size":3377,"mtime":1631688135273,"results":"131","hashOfConfig":"116"},{"size":18328,"mtime":1632502089491,"results":"132","hashOfConfig":"116"},{"size":4734,"mtime":1632588158650,"results":"133","hashOfConfig":"116"},{"size":7225,"mtime":1633025196049,"results":"134","hashOfConfig":"116"},{"size":20225,"mtime":1632502089494,"results":"135","hashOfConfig":"116"},{"size":2461,"mtime":1631188916065,"results":"136","hashOfConfig":"116"},{"size":19582,"mtime":1632723335594,"results":"137","hashOfConfig":"116"},{"size":6726,"mtime":1632502089490,"results":"138","hashOfConfig":"116"},{"size":11821,"mtime":1632502089493,"results":"139","hashOfConfig":"116"},{"size":17227,"mtime":1633025196049,"results":"140","hashOfConfig":"116"},{"size":9769,"mtime":1632399001945,"results":"141","hashOfConfig":"116"},{"size":360,"mtime":1631188916041,"results":"142","hashOfConfig":"116"},{"size":2216,"mtime":1631188916041,"results":"143","hashOfConfig":"116"},{"size":3738,"mtime":1632658422523,"results":"144","hashOfConfig":"116"},{"size":7113,"mtime":1633026679361,"results":"145","hashOfConfig":"116"},{"size":6836,"mtime":1633027077214,"results":"146","hashOfConfig":"116"},{"size":5533,"mtime":1632318994418,"results":"147","hashOfConfig":"116"},{"size":2371,"mtime":1632502089489,"results":"148","hashOfConfig":"116"},{"size":262,"mtime":1631688135281,"results":"149","hashOfConfig":"116"},{"size":4497,"mtime":1632502089488,"results":"150","hashOfConfig":"116"},{"size":28025,"mtime":1633025196023,"results":"151","hashOfConfig":"116"},{"size":31467,"mtime":1633025196023,"results":"152","hashOfConfig":"116"},{"size":1221,"mtime":1632725020918,"results":"153","hashOfConfig":"116"},{"size":1869,"mtime":1632758573573,"results":"154","hashOfConfig":"116"},{"size":4125,"mtime":1632253594382,"results":"155","hashOfConfig":"116"},{"size":3667,"mtime":1631688135252,"results":"156","hashOfConfig":"116"},{"size":7726,"mtime":1631688135251,"results":"157","hashOfConfig":"116"},{"size":3432,"mtime":1632297893593,"results":"158","hashOfConfig":"116"},{"size":2652,"mtime":1632041652685,"results":"159","hashOfConfig":"116"},{"size":2523,"mtime":1632738341587,"results":"160","hashOfConfig":"116"},{"size":27786,"mtime":1633025196049,"results":"161","hashOfConfig":"116"},{"size":1046,"mtime":1633025196049,"results":"162","hashOfConfig":"116"},{"size":464,"mtime":1631188916065,"results":"163","hashOfConfig":"164"},{"size":5086,"mtime":1631188916073,"results":"165","hashOfConfig":"164"},{"size":7752,"mtime":1646745400813,"results":"166","hashOfConfig":"164"},{"size":98,"mtime":1631688135280,"results":"167","hashOfConfig":"164"},{"size":527,"mtime":1631688135281,"results":"168","hashOfConfig":"164"},{"size":5040,"mtime":1632247227954,"results":"169","hashOfConfig":"164"},{"size":2984,"mtime":1632297893599,"results":"170","hashOfConfig":"164"},{"size":18760,"mtime":1632724674505,"results":"171","hashOfConfig":"164"},{"size":4314,"mtime":1632502089498,"results":"172","hashOfConfig":"164"},{"size":5557,"mtime":1645365721825,"results":"173","hashOfConfig":"164"},{"size":5446,"mtime":1631688135278,"results":"174","hashOfConfig":"164"},{"size":1933,"mtime":1631188916073,"results":"175","hashOfConfig":"164"},{"size":18195,"mtime":1632758573580,"results":"176","hashOfConfig":"164"},{"size":2523,"mtime":1632738341587,"results":"177","hashOfConfig":"164"},{"size":3708,"mtime":1632041652691,"results":"178","hashOfConfig":"164"},{"size":2236,"mtime":1631188916073,"results":"179","hashOfConfig":"164"},{"size":1046,"mtime":1633025196049,"results":"180","hashOfConfig":"164"},{"size":7225,"mtime":1633025196049,"results":"181","hashOfConfig":"164"},{"size":4734,"mtime":1632588158650,"results":"182","hashOfConfig":"164"},{"size":3377,"mtime":1631688135273,"results":"183","hashOfConfig":"164"},{"size":2461,"mtime":1631188916065,"results":"184","hashOfConfig":"164"},{"size":27786,"mtime":1633025196049,"results":"185","hashOfConfig":"164"},{"size":18328,"mtime":1632502089491,"results":"186","hashOfConfig":"164"},{"size":20225,"mtime":1632502089494,"results":"187","hashOfConfig":"164"},{"size":19582,"mtime":1632723335594,"results":"188","hashOfConfig":"164"},{"size":9769,"mtime":1632399001945,"results":"189","hashOfConfig":"164"},{"size":11821,"mtime":1632502089493,"results":"190","hashOfConfig":"164"},{"size":17227,"mtime":1633025196049,"results":"191","hashOfConfig":"164"},{"size":6726,"mtime":1632502089490,"results":"192","hashOfConfig":"164"},{"size":3654,"mtime":1645363606486,"results":"193","hashOfConfig":"164"},{"size":360,"mtime":1631188916041,"results":"194","hashOfConfig":"164"},{"size":2216,"mtime":1631188916041,"results":"195","hashOfConfig":"164"},{"size":5533,"mtime":1632318994418,"results":"196","hashOfConfig":"164"},{"size":7663,"mtime":1646747475284,"results":"197","hashOfConfig":"164"},{"size":6799,"mtime":1645363337354,"results":"198","hashOfConfig":"164"},{"size":262,"mtime":1631688135281,"results":"199","hashOfConfig":"164"},{"size":4497,"mtime":1632502089488,"results":"200","hashOfConfig":"164"},{"size":2371,"mtime":1632502089489,"results":"201","hashOfConfig":"164"},{"size":28025,"mtime":1633025196023,"results":"202","hashOfConfig":"164"},{"size":31467,"mtime":1633025196023,"results":"203","hashOfConfig":"164"},{"size":1221,"mtime":1632725020918,"results":"204","hashOfConfig":"164"},{"size":1869,"mtime":1632758573573,"results":"205","hashOfConfig":"164"},{"size":3667,"mtime":1631688135252,"results":"206","hashOfConfig":"164"},{"size":4125,"mtime":1632253594382,"results":"207","hashOfConfig":"164"},{"size":7726,"mtime":1631688135251,"results":"208","hashOfConfig":"164"},{"size":3432,"mtime":1632297893593,"results":"209","hashOfConfig":"164"},{"size":2652,"mtime":1632041652685,"results":"210","hashOfConfig":"164"},{"size":4784,"mtime":1646746985521,"results":"211","hashOfConfig":"164"},{"size":1120,"mtime":1646761257439,"results":"212","hashOfConfig":"164"},{"size":530,"mtime":1647351337610,"results":"213","hashOfConfig":"214"},{"size":5086,"mtime":1631188916073,"results":"215","hashOfConfig":"214"},{"size":6795,"mtime":1647504610116,"results":"216","hashOfConfig":"214"},{"size":91,"mtime":1647503168220,"results":"217","hashOfConfig":"214"},{"size":527,"mtime":1631688135281,"results":"218","hashOfConfig":"214"},{"size":5557,"mtime":1646819524567,"results":"219","hashOfConfig":"214"},{"size":4784,"mtime":1646819524568,"results":"220","hashOfConfig":"214"},{"size":7663,"mtime":1647451565834,"results":"221","hashOfConfig":"214"},{"size":1120,"mtime":1646819524540,"results":"222","hashOfConfig":"214"},{"size":3383,"mtime":1647505005129,"results":"223","hashOfConfig":"214"},{"size":2158,"mtime":1647375965203,"results":"224","hashOfConfig":"214"},{"size":5558,"mtime":1647377115701,"results":"225","hashOfConfig":"214"},{"size":754,"mtime":1647377066357,"results":"226","hashOfConfig":"214"},{"size":508,"mtime":1647436094857,"results":"227","hashOfConfig":"214"},{"size":3991,"mtime":1647504164184,"results":"228","hashOfConfig":"214"},{"size":514,"mtime":1647441913631,"results":"229","hashOfConfig":"214"},{"size":1148,"mtime":1647442077638,"results":"230","hashOfConfig":"214"},{"size":424,"mtime":1647451928816,"results":"231","hashOfConfig":"214"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"1o5ujtr",{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"234"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"234"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"234"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},"gy9cy",{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"337"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"337"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"337"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"409"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"337"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ul3jqs",{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"443"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"443"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"443"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"443"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\louis\\killer\\front\\src\\index.js",[],["477","478"],"C:\\Users\\louis\\killer\\front\\src\\serviceWorker.js",[],"C:\\Users\\louis\\killer\\front\\src\\App.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\utils\\isLogged.js",[],"C:\\Users\\louis\\killer\\front\\src\\utils\\isValidated.js",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\rules.jsx",["479"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Segment,\r\n} from 'semantic-ui-react';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\nimport killerRules from \"../img/Règles du Killer 2021 VpresqueF.pdf\"\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nexport default function Rules() {\r\n    const [width, setWidth] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"bodyDesktop\">\r\n            <Segment style={{marginTop: '20px'}}>\r\n                <Responsive\r\n                    as=\"div\"\r\n                    minWidth={1200}\r\n                >\r\n                    <Document\r\n                        file={killerRules}\r\n                    >\r\n                            <Page pageNumber={1} width={0.6 * width - 35}/>\r\n                            <Page pageNumber={2} width={0.6*width - 35}/>\r\n                            <Page pageNumber={3} width={0.6*width - 35}/>\r\n                            <Page pageNumber={4} width={0.6*width - 35}/>\r\n                            <Page pageNumber={5} width={0.6*width - 35}/>\r\n                            <Page pageNumber={6} width={0.6*width - 35}/>\r\n                            <Page pageNumber={7} width={0.6*width - 35}/>\r\n                            <Page pageNumber={8} width={0.6*width - 35}/>\r\n                            <Page pageNumber={9} width={0.6*width - 35}/>\r\n                            <Page pageNumber={10} width={0.6*width - 35}/>\r\n                            <Page pageNumber={11} width={0.6*width - 35}/>\r\n                            <Page pageNumber={12} width={0.6*width - 35}/>\r\n                    </Document>\r\n                </Responsive>\r\n                <Responsive as=\"div\" maxWidth={1200}>\r\n                    <Document\r\n                        file={killerRules}\r\n                    >\r\n                        <Page pageNumber={1} width={width - 35}/>\r\n                        <Page pageNumber={2} width={width - 35}/>\r\n                        <Page pageNumber={3} width={width - 35}/>\r\n                        <Page pageNumber={4} width={width - 35}/>\r\n                        <Page pageNumber={5} width={width - 35}/>\r\n                        <Page pageNumber={6} width={width - 35}/>\r\n                        <Page pageNumber={7} width={width - 35}/>\r\n                        <Page pageNumber={8} width={width - 35}/>\r\n                        <Page pageNumber={9} width={width - 35}/>\r\n                        <Page pageNumber={10} width={width - 35}/>\r\n                        <Page pageNumber={11} width={width - 35}/>\r\n                        <Page pageNumber={12} width={width - 35}/>\r\n                    </Document>\r\n                </Responsive>\r\n            </Segment>\r\n            <div className=\"spacer\"/>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\louis\\killer\\front\\src\\pages\\accueil.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\Story.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\enigma.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\teams.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\team.jsx",["480"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Segment, Loader, Divider, Card, Image, Grid, List, Icon, Table, Button,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport nameParser from '../utils/nameParser';\r\nimport CardUser from '../components/user/CardUser';\r\nimport TeamGestion from '../components/team/TeamGestion';\r\nimport config from '../config.json';\r\nimport SearchUser from '../components/user/SearchUser';\r\nimport noTeamUrl from '../img/noteam.png';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nclass Team extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            team: null,\r\n            users: [],\r\n            open: false,\r\n            targets: [],\r\n            kills: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({\r\n                    team: data.data.object,\r\n                });\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data2) => {\r\n                    if (data2.data.status === 200) {\r\n                        this.setState({\r\n                            users: data2.data.object,\r\n                        });\r\n                        if (parseInt(localStorage.getItem('teamId')) === parseInt(this.props.match.params.id)) {\r\n                            axios({\r\n                                method: 'get',\r\n                                url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                                headers: {Token: localStorage.getItem('killerToken')},\r\n                            }).then((data3) => {\r\n                                if (data3.data.status === 200) {\r\n                                    this.setState({\r\n                                        targets: data3.data.object,\r\n                                    });\r\n                                    underscore.map(this.state.users, (user) => {\r\n                                        axios({\r\n                                            method: 'get',\r\n                                            url: `${config.back_Url}/kills/user/${user.id}`,\r\n                                            headers: {Token: localStorage.getItem('killerToken')},\r\n                                        }).then((data4) => {\r\n                                            if (data4.data.status === 200) {\r\n                                                this.setState((ps) => ({\r\n                                                    kills: [...ps.kills, ...data4.data.object.kills],\r\n                                                }));\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePic = (url) => {\r\n        const {team} = this.state;\r\n        team.picture = url;\r\n        this.setState({team});\r\n    }\r\n\r\n    handleDeleteUser = (username) => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username,\r\n            },\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                if (data.data.object === true) {\r\n                    const list = [];\r\n                    this.state.users.forEach((user) => {\r\n                        if (user.username !== username) {\r\n                            list.push(user);\r\n                        }\r\n                    });\r\n                    this.setState({users: list});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAddUser = (data) => {\r\n        if (data === null) {\r\n            this.setState({\r\n                open: false,\r\n            });\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username: data.username,\r\n            },\r\n        }).then((data2) => {\r\n            if (data2.data.status === 201) {\r\n                if ('id' in data2.data.object) {\r\n                    this.setState((ps) => ({\r\n                        users: [\r\n                            ...ps.users,\r\n                            data2.data.object,\r\n                        ],\r\n                        open: false,\r\n                    }));\r\n                } else {\r\n                    this.setState({\r\n                        open: false,\r\n                    });\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    open: false,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    Users = () => {\r\n        const {team} = this.state;\r\n        const admin = team.leader === localStorage.getItem('username');\r\n        return underscore.map(this.state.users, (user) => (\r\n            <CardUser\r\n                user={user}\r\n                key={user.id + \"teamUser\"}\r\n                TeamLeader={admin}\r\n                handleDelete={(username) => this.handleDeleteUser(username)}\r\n            />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.team === null) {\r\n            return (\r\n                <Segment className=\"Loading\">\r\n                    <Loader active className=\"test\">Loading</Loader>\r\n                </Segment>\r\n            );\r\n        }\r\n\r\n        const {team, targets} = this.state;\r\n        const admin = team.leader === localStorage.getItem('username');\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <div className=\"spacer\"/>\r\n                <Segment>\r\n                    <div className=\"spacer\"/>\r\n                    <Responsive as=\"div\" minWidth={701}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={6}>\r\n                                    <Image size=\"medium\" src={team.picture === null ? noTeamUrl : team.picture}/>\r\n                                </Grid.Column>\r\n                                <Grid.Column width={10}>\r\n                                    <h1>{team.name}</h1>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"king chess\"/>\r\n                                            <List.Content>{team.leader}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"tag\"/>\r\n                                            <List.Content>{nameParser(team.faction)}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{team.score}</List.Content>\r\n                                        </List.Item>\r\n                                        {team.money !== undefined ? (\r\n                                            <List.Item>\r\n                                                <List.Icon name=\"money\"/>\r\n                                                <List.Content>{team.money}</List.Content>\r\n                                            </List.Item>\r\n                                        ) : null}\r\n\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    <Responsive as=\"div\" maxWidth={700}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={16}>\r\n                                    <h1>{team.name}</h1>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"king chess\"/>\r\n                                            <List.Content>{team.leader}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"tag\"/>\r\n                                            <List.Content>{team.faction}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{team.score}</List.Content>\r\n                                        </List.Item>\r\n                                        {team.money !== undefined ? (\r\n                                            <List.Item>\r\n                                                <List.Icon name=\"money\"/>\r\n                                                <List.Content>{team.money}</List.Content>\r\n                                            </List.Item>\r\n                                        ) : null}\r\n\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                            <Grid.Row centered>\r\n                                <Grid.Column width={14}>\r\n                                    <Image size=\"large\" src={team.picture === null ? noTeamUrl : team.picture}/>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    <Divider/>\r\n                    <h2>Membres</h2>\r\n                    <>\r\n                        <Responsive as=\"div\" minWidth={1001}>\r\n                            <Card.Group centered itemsPerRow={6} className=\"centered\">\r\n                                {this.Users()}\r\n                                {admin ? <Card onClick={() => this.setState({open: true})}><Card.Content\r\n                                    textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted\r\n                                                             name=\"add user\"/></Card.Content></Card> : null}\r\n                                <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser}/>\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                        <Responsive as=\"div\" minWidth={501} maxWidth={701}>\r\n                            <Card.Group centered itemsPerRow={3} className=\"centered\">\r\n                                {this.Users()}\r\n                                {admin ? <Card onClick={() => this.setState({open: true})}><Card.Content\r\n                                    textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted\r\n                                                             name=\"add user\"/></Card.Content></Card> : null}\r\n                                <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser}/>\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                        <Responsive as=\"div\" minWidth={701} maxWidth={1001}>\r\n                            <Card.Group centered itemsPerRow={4} className=\"centered\">\r\n                                {this.Users()}\r\n                                {admin ? <Card onClick={() => this.setState({open: true})}><Card.Content\r\n                                    textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted\r\n                                                             name=\"add user\"/></Card.Content></Card> : null}\r\n                                <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser}/>\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                        <Responsive as=\"div\" maxWidth={501}>\r\n                            <Card.Group centered itemsPerRow={2} className=\"centered\">\r\n                                {this.Users()}\r\n                                {admin ? <Card onClick={() => this.setState({open: true})}><Card.Content\r\n                                    textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted\r\n                                                             name=\"add user\"/></Card.Content></Card> : null}\r\n                                <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser}/>\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                    </>\r\n\r\n                    {targets.length > 0\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Cibles</h2>\r\n                                <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                                    {underscore.map(targets, (target) => {\r\n                                        const {user} = target;\r\n                                        return (<CardUser user={user} key={user.id} wanted={target.prime}/>);\r\n                                    })}\r\n                                </Card.Group>\r\n                            </div>\r\n                        ) : null}\r\n                    <Divider/>\r\n                    <h2>Compétences</h2>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {team.linkTeamSkills.map((skill, key) => (\r\n                                <Table.Row key={key}>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5>{skill.name}</h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{skill.description}</Table.Cell>\r\n                                </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n\r\n                    <Divider/>\r\n                    <h2>Objets de l'équipe</h2>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Prix</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {team.teamItems.map((item, key) => (\r\n                                <Table.Row key={key}>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5>{item.name}</h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{item.description}</Table.Cell>\r\n                                    <Table.Cell>25</Table.Cell>\r\n                                    \r\n\r\n                                </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n\r\n                    {admin ? <TeamGestion team={team} updatePic={this.updatePic}/> : null}\r\n                    {this.state.kills !== []\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Meurtres</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.kills.map((kill) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5><a\r\n                                                        href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a>\r\n                                                    </h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{kill.description}</Table.Cell>\r\n                                                <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                <Table.Cell>{kill.heure}</Table.Cell>\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTeam.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            id: PropTypes.number,\r\n        }).isRequired,\r\n\r\n    }).isRequired,\r\n};\r\n\r\nexport default Team;\r\n","C:\\Users\\louis\\killer\\front\\src\\pages\\createTeam.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\users.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\user.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\message.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\users.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\gestion.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\teams.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\killFeed.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\team.jsx",["481"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Segment, Loader, Divider, Card, Image, Grid, List, Icon, Button, Table,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport nameParser from '../../utils/nameParser';\r\nimport CardUser from '../../components/user/CardUser';\r\nimport TeamGestion from '../../components/team/TeamGestion';\r\nimport config from '../../config.json';\r\nimport SearchUser from '../../components/user/SearchUser';\r\nimport noTeamUrl from '../../img/noteam.png';\r\n\r\nclass Teams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            team: null,\r\n            users: [],\r\n            modalOpened: false,\r\n            targets: [],\r\n            kills: [],\r\n            enigmas: [],\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({\r\n                    team: data.data.object,\r\n                });\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data2) => {\r\n                    if (data2.data.status === 200) {\r\n                        this.setState({\r\n                            users: data2.data.object,\r\n                        });\r\n                        axios({\r\n                            method: 'get',\r\n                            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                            headers: {Token: localStorage.getItem('killerToken')},\r\n                        }).then((data3) => {\r\n                            if (data3.data.status === 200) {\r\n                                this.setState({\r\n                                    targets: data3.data.object,\r\n                                });\r\n                                underscore.map(this.state.users, (user) => {\r\n                                    axios({\r\n                                        method: 'get',\r\n                                        url: `${config.back_Url}/kills/user/${user.id}`,\r\n                                        headers: {Token: localStorage.getItem('killerToken')},\r\n                                    }).then((data4) => {\r\n                                        if (data4.data.status === 200) {\r\n                                            this.setState((ps) => ({\r\n                                                kills: [...ps.kills, ...data4.data.object.kills],\r\n                                            }));\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/enigmas/admin/team/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data5) => {\r\n                    if (data5.data.status === 200) {\r\n                        this.setState({enigmas: data5.data.object});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: '',\r\n                variant: 'positive',\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    updatePic = (url) => {\r\n        const {team} = this.state;\r\n        team.picture = url;\r\n        this.setState({team});\r\n    }\r\n\r\n    updateState = (state) => {\r\n        const {team} = this.state;\r\n\r\n        if (state !== undefined) for (const [key, value] of Object.entries(state)) {\r\n            team[key] = value\r\n        }\r\n\r\n        this.setState({\r\n            team: team\r\n        });\r\n    }\r\n\r\n    handleDeleteUser = (username) => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username,\r\n            },\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                if (data.data.object === true) {\r\n                    const list = [];\r\n                    this.state.users.map((user) => {\r\n                        if (user.username !== username) {\r\n                            list.push(user);\r\n                        }\r\n                        return null;\r\n                    });\r\n                    this.setState({users: list});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAddUser = (data) => {\r\n        if (data === null) {\r\n            this.setState({\r\n                modalOpened: false,\r\n            });\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username: data.username,\r\n            },\r\n        }).then((data2) => {\r\n            if (data2.data.status === 201) {\r\n                if ('id' in data2.data.object) {\r\n                    this.setState((ps) => ({\r\n                        users: [\r\n                            ...ps.users,\r\n                            data2.data.object,\r\n                        ],\r\n                        modalOpened: false,\r\n                    }));\r\n                } else {\r\n                    this.setState({\r\n                        modalOpened: false,\r\n                    });\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    modalOpened: false,\r\n                });\r\n                this.makeFeedback(\"negative\", data2.data.message)\r\n            }\r\n        });\r\n    }\r\n\r\n    addTargets = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 201) {\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((dataTarget) => {\r\n                    if (dataTarget.data.status === 200) {\r\n                        this.setState({\r\n                            targets: dataTarget.data.object,\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                window.alert(\"C'est la merde. Préviens un admin\");\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDeleteTarget = (username) => {\r\n        const {targets} = this.state;\r\n\r\n        let id = 0;\r\n        let i = 0;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n            if (targets[i].user.username === username) {\r\n                id = targets[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (id !== 0) {\r\n            axios({\r\n                method: 'delete',\r\n                url: `${config.back_Url}/targets/${id}`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((data) => {\r\n                if (data.data.status === 200) {\r\n                    targets.splice(i, 1);\r\n                    this.setState({targets});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteTargets = () => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({targets: []});\r\n            }\r\n        });\r\n    }\r\n\r\n    handleHint = (hint) => {\r\n        axios({\r\n            method: 'PUT',\r\n            url: `${config.back_Url}/hints/hintTeam/${hint.hintTeams[0].id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                bought: !hint.hintTeams[0].bought,\r\n            },\r\n        }).then((response) => {\r\n            if (response.data === null) {\r\n                // do erro thingy thing\r\n            } else if (response.data.status === 400) {\r\n                // do other error thing\r\n            } else {\r\n                const {team} = this.state;\r\n                const enigmas = [];\r\n                this.state.enigmas.forEach((eni) => {\r\n                    const enigma = eni;\r\n                    enigma.hints = enigma.hints.map((hi) => {\r\n                        const hin = hi;\r\n                        if (hin.id === hint.id) {\r\n                            hin.hintTeams[0].bought = !hin.hintTeams[0].bought;\r\n                        }\r\n                        return hin;\r\n                    });\r\n\r\n                    enigmas.push(enigma);\r\n                });\r\n                team.money += response.data.object;\r\n                this.setState({\r\n                    team,\r\n                    enigmas,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEnigma(enigma) {\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/enigmas/enigmaTeam/${enigma.enigmaTeams[0].id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                resolved: !enigma.enigmaTeams[0].resolved,\r\n            },\r\n        }).then((response) => {\r\n            if (response.data === null) {\r\n                // do erro thingy thing\r\n            } else if (response.data.status === 400) {\r\n                // do other error thing\r\n            } else {\r\n                const {team} = this.state;\r\n                const enigmas = [];\r\n                this.state.enigmas.forEach((eni) => {\r\n                    const enig = eni;\r\n                    if (enig.id === enigma.id) {\r\n                        enig.enigmaTeams[0].resolved = !enig.enigmaTeams[0].resolved;\r\n                    }\r\n                    enigmas.push(enig);\r\n                });\r\n                team.money += response.data.object;\r\n                this.setState({\r\n                    team,\r\n                    enigmas,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {enigmas} = this.state;\r\n        if (this.state.team === null) {\r\n            return (\r\n                <Segment className=\"Loading\">\r\n                    <Loader active className=\"test\">Loading</Loader>\r\n                </Segment>\r\n            );\r\n        }\r\n\r\n        const {team, targets, users} = this.state;\r\n        const admin = true;\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <div className=\"spacer\"/>\r\n                <Segment>\r\n                    <div className=\"spacer\"/>\r\n                    <Grid divided columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={4}>\r\n                                <Image size=\"medium\" src={team.picture === null ? noTeamUrl : team.picture}/>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={8}>\r\n                                <h1>{team.name}</h1>\r\n                                <List size=\"big\">\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"king chess\"/>\r\n                                        <List.Content>{team.leader}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"tag\"/>\r\n                                        <List.Content>{nameParser(team.faction)}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"trophy\"/>\r\n                                        <List.Content>{team.score}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"money\"/>\r\n                                        <List.Content>{team.money}</List.Content>\r\n                                    </List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <h2>Membres</h2>\r\n                    <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                        {underscore.map(users, (user) => (\r\n                            <CardUser\r\n                                user={user}\r\n                                key={user.id + \"teamUsers\"}\r\n                                admin={admin}\r\n                                handleDelete={(username) => this.handleDeleteUser(username)}\r\n                            />\r\n                        ))}\r\n                        {admin && users.length < 8 ?\r\n                            <Card onClick={() => this.setState({modalOpened: true})}><Card.Content\r\n                                textAlign=\"center\"><Icon\r\n                                size=\"big\" color=\"black\" fitted name=\"add user\"/></Card.Content></Card> : null}\r\n                    </Card.Group>\r\n                    <SearchUser\r\n                        search=\"team\"\r\n                        open={this.state.modalOpened}\r\n                        handleSubmit={this.handleAddUser}\r\n                    />\r\n                    {admin ? (\r\n                        <TeamGestion\r\n                            team={team}\r\n                            updatePic={this.updatePic}\r\n                            updateState={this.updateState}\r\n                            users={users}\r\n                            admin\r\n                        />\r\n                    ) : null}\r\n\r\n                    <Divider/>\r\n                    <h2>Cibles</h2>\r\n                    <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                        {underscore.map(targets, (target) => {\r\n                            const {user} = target;\r\n                            return (\r\n                                <CardUser\r\n                                    user={user}\r\n                                    key={user.id + \"targets\"}\r\n                                    admin={admin}\r\n                                    handleDelete={(username) => this.handleDeleteTarget(username)}\r\n                                    wanted={target.prime}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Card.Group>\r\n                    <div className=\"spacing\"/>\r\n                    <Button\r\n                        onClick={this.addTargets}\r\n                        disabled={targets.length >= 5}\r\n                    >\r\n                        Ajouter les cibles\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.deleteTargets}\r\n                        negative\r\n                        disabled={targets.length <= 0}\r\n                    >\r\n                        Retirer les cibles\r\n                    </Button>\r\n                    {this.state.kills !== []\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Meurtres</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.kills.map((kill) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5><a\r\n                                                        href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a>\r\n                                                    </h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{kill.description}</Table.Cell>\r\n                                                <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                <Table.Cell>{kill.heure}</Table.Cell>\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    <Divider/>\r\n                    <h2>Énigme</h2>\r\n                    <Card.Group doubling centered itemsPerRow={2} className=\"centered\">\r\n                        {enigmas.map((enigma) => (\r\n                            <Card>\r\n                                <Card.Content header={enigma.name}/>\r\n                                <Card.Content>\r\n                                    <div>{enigma.description}</div>\r\n                                    <div className=\"spacing\">\r\n                                        {enigma.enigmaTeams[0].resolved\r\n                                            ? <div><Button color=\"red\"\r\n                                                           onClick={() => this.handleEnigma(enigma)}>Refuser</Button>\r\n                                            </div>\r\n                                            : <div><Button color=\"green\"\r\n                                                           onClick={() => this.handleEnigma(enigma)}>Accepter</Button>\r\n                                            </div>}\r\n                                    </div>\r\n                                </Card.Content>\r\n                                {enigma.hints.length > 0 ? (\r\n                                    <Card.Content>\r\n                                        <Card.Content header=\"Indices\"/>\r\n                                        {enigma.hints.map((hint) => (\r\n                                            <div>\r\n                                                <Button onClick={() => this.handleHint(hint)}\r\n                                                        color={hint.hintTeams[0].bought ? 'red' : 'green'}>{hint.price}</Button>\r\n                                                {hint.value}\r\n                                            </div>\r\n                                        ))}\r\n                                    </Card.Content>\r\n                                ) : null}\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teams;\r\n","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\message.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\user.jsx",["482"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Segment, Loader, Card, Image, Divider, List, Grid, Table, Portal, Message,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport CardTeam from '../../components/team/CardTeam';\r\nimport UserGestion from '../../components/user/UserGestion';\r\nimport nouser from '../../img/nouser.png';\r\nimport dead from '../../img/dead.png';\r\nimport afk from '../../img/afk.png';\r\nimport config from '../../config.json';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\nimport CardUser from \"../../components/user/CardUser\";\r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile: null,\r\n            team: null,\r\n            kill: 0,\r\n            death: 0,\r\n            score: 0,\r\n            kills: [],\r\n            deaths: [],\r\n            targets: null,\r\n            hunters: [],\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n            personnalTarget: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/users/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                console.log(data.data.object)\r\n                this.state.profile = data.data.object;\r\n                if (data.data.object.userSkills.map(skill => skill.name).includes(\"Persécution\")) {\r\n                    axios({\r\n                        method: 'get',\r\n                        url: `${config.back_Url}/targets/user/unique/${this.props.match.params.id}`,\r\n                        headers: {Token: localStorage.getItem('killerToken')},\r\n                    }).then((target) => {\r\n                        this.setState({personnalTarget: target.data.object})\r\n                    })\r\n                }\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/kills/user/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data2) => {\r\n                    if (data2.data.status === 200) {\r\n                        this.setState({\r\n                            kills: data2.data.object.kills,\r\n                            kill: data2.data.object.kills.length,\r\n                            deaths: data2.data.object.deaths,\r\n                            death: data2.data.object.deaths.length,\r\n                            score: data2.data.object.score,\r\n                        });\r\n                        if (this.state.profile.teamId != null) {\r\n                            axios({\r\n                                method: 'get',\r\n                                url: `${config.back_Url}/teams/${this.state.profile.teamId}`,\r\n                                headers: {Token: localStorage.getItem('killerToken')},\r\n                            }).then((data3) => {\r\n                                if (data3.data.status === 200) {\r\n                                    this.setState({team: data3.data.object});\r\n                                    axios({\r\n                                        method: 'get',\r\n                                        url: `${config.back_Url}/targets/user/${this.props.match.params.id}`,\r\n                                        headers: {Token: localStorage.getItem('killerToken')},\r\n                                    }).then((data4) => {\r\n                                        if (data4.data.status === 200) {\r\n                                            this.setState({targets: data4.data.object});\r\n                                            underscore.map(this.state.targets, (target) => {\r\n                                                axios({\r\n                                                    method: 'get',\r\n                                                    url: `${config.back_Url}/teams/${target.teamId}`,\r\n                                                    headers: {Token: localStorage.getItem('killerToken')},\r\n                                                }).then((data5) => {\r\n                                                    if (data5.data.status === 200) {\r\n                                                        this.setState((ps) => ({\r\n                                                            hunters: [...ps.hunters, data5.data.object],\r\n                                                        }));\r\n                                                    }\r\n                                                });\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePic = (url) => {\r\n        const {profile} = this.state;\r\n        profile.picture = url;\r\n        this.setState({profile});\r\n        this.makeFeedback(\r\n            'positive',\r\n            'Image mise a jour',\r\n        );\r\n    }\r\n\r\n    updateState = (state) => {\r\n        const {profile} = this.state;\r\n\r\n        for (const [key, value] of Object.entries(state)) {\r\n            profile[key] = value\r\n        }\r\n\r\n        this.setState({\r\n            profile: profile\r\n        });\r\n    }\r\n\r\n    handleDeleteTarget = () => {\r\n        const {personnalTarget} = this.state;\r\n\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/targets/${personnalTarget.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({personnalTarget: null});\r\n            }\r\n        });\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: null,\r\n                variant: null,\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            profile, message, variant, open,\r\n        } = this.state;\r\n\r\n        if (profile == null) {\r\n            return (\r\n                <Segment className=\"Loading\">\r\n                    <Loader active className=\"test\">Loading</Loader>\r\n                </Segment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <div className=\"spacer\"/>\r\n                <Segment>\r\n                    <Portal open={open}>\r\n                        <Message\r\n                            style={{\r\n                                left: '20px',\r\n                                position: 'fixed',\r\n                                bottom: '20px',\r\n                                zIndex: 1000,\r\n                            }}\r\n                            negative={variant === 'negative'}\r\n                            positive={variant === 'positive'}\r\n                        >\r\n                            <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n                            {message}\r\n                        </Message>\r\n                    </Portal>\r\n                    <Responsive as=\"div\" minWidth={700}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={6}>\r\n                                    <div style={{width: 240, height: 300, objectFit: \"cover\"}}>\r\n                                        <Image src={profile.picture === null ? nouser : profile.picture}\r\n                                               style={{position: 'absolute', width: '240px'}}/>\r\n                                        <Image src={profile.alive ? null : dead} style={{position: 'absolute'}}/>\r\n                                        <Image src={profile.afk ? afk : null} style={{position: 'absolute'}}/>\r\n                                    </div>\r\n                                </Grid.Column>\r\n                                <Grid.Column width={10}>\r\n                                    <h1>{profile.pseudo}</h1>\r\n                                    <h2>\r\n                                        {profile.firstName}\r\n                                        {' '}\r\n                                        {profile.lastName}\r\n                                    </h2>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"home\"/>\r\n                                            <List.Content>{profile.room}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{this.state.score}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"crosshairs\"/>\r\n                                            <List.Content>{this.state.kill}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"times\"/>\r\n                                            <List.Content>{this.state.death}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <i className=\"certificate icon\"/>\r\n                                            <List.Content>{profile.experience}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <i className=\"building icon\"/>\r\n                                            <List.Content>{profile.school}</List.Content>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    <Responsive as=\"div\" maxWidth={700}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={16}>\r\n                                    <h1>{profile.pseudo}</h1>\r\n                                    <div style={{width: 240, height: 300, objectFit: \"cover\"}}>\r\n                                        <Image src={profile.picture === null ? nouser : profile.picture}/>\r\n                                        <Image src={profile.alive ? null : dead}/>\r\n                                        <Image src={profile.afk ? afk : null}/>\r\n                                    </div>\r\n                                    <h2>\r\n                                        {profile.firstName}\r\n                                        {' '}\r\n                                        {profile.lastName}\r\n                                    </h2>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"home\"/>\r\n                                            <List.Content>{profile.room}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{this.state.score}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"crosshairs\"/>\r\n                                            <List.Content>{this.state.kill}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"times\"/>\r\n                                            <List.Content>{this.state.death}</List.Content>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    {this.state.team !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Équipe</h2>\r\n                                <Card.Group doubling itemsPerRow={6} centered className=\"centered\">\r\n                                    <CardTeam team={this.state.team} admin key={this.state.profile.teamId + \"team\"}/>\r\n                                </Card.Group>\r\n                            </div>\r\n                        ) : null}\r\n                    {this.state.personnalTarget !== null\r\n                        ?\r\n                        <div>\r\n                            <Divider/>\r\n                            <h2>Cible Personnelle</h2>\r\n                            <Card.Group doubling itemsPerRow={6} centered className=\"centered\">\r\n                                <CardUser user={this.state.personnalTarget.user} admin handleDelete={this.handleDeleteTarget}/>\r\n                            </Card.Group>\r\n                        </div> : null}\r\n                    {this.state.kills !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Meurtres</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.kills.map((kill) => {\r\n                                            if (kill.deathUser === null) {\r\n                                                return null;\r\n                                            }\r\n                                            return (\r\n                                                <Table.Row>\r\n                                                    <Table.Cell textAlign=\"center\">\r\n                                                        <h5><a\r\n                                                            href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a>\r\n                                                        </h5>\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell>{kill.description}</Table.Cell>\r\n                                                    <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                    <Table.Cell>{kill.heure}</Table.Cell>\r\n                                                </Table.Row>\r\n                                            );\r\n                                        })}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n                    {this.state.deaths !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Décès</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Meurtrier</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.deaths.map((kill) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5><a\r\n                                                        href={`/users/${kill.killerUser.id}`}>{kill.killerUser.pseudo}</a>\r\n                                                    </h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{kill.description}</Table.Cell>\r\n                                                <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                <Table.Cell>{kill.heure}</Table.Cell>\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n                    <Divider/>\r\n                    <UserGestion\r\n                        profile={profile}\r\n                        updateState={this.updateState}\r\n                        updatePic={this.updatePic}\r\n                    />\r\n                    {this.state.hunters !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Chasseurs</h2>\r\n                                <Card.Group\r\n                                    doubling\r\n                                    itemsPerRow={6}\r\n                                    centered\r\n                                    className=\"centered\"\r\n                                >\r\n                                    {underscore.map(this.state.hunters, (hunter, key) => (\r\n                                        <CardTeam team={hunter} key={key + \"hunter\"}/>))}\r\n                                </Card.Group>\r\n                            </div>\r\n                        ) : null}\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            id: PropTypes.string,\r\n        }).isRequired,\r\n\r\n    }).isRequired,\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\afk.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\stats.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\kill.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\admin\\killFeed.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\auth\\logout.component.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\auth\\login.component.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarD.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarDLogged.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\bar\\navbarDAdmin.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\user\\createuser.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\user\\SearchUser.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\utils\\nameParser.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\user\\CardUser.jsx",["483"],"import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Card, Image, Icon} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport nouser from '../../img/nouser.png';\r\nimport dead from '../../img/dead.png';\r\nimport afk from '../../img/afk.png';\r\nimport prime from '../../img/wanted.png';\r\n\r\nconst defaultF = () => {\r\n};\r\n\r\nclass CardUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: null, del: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    setRedirect = (uri) => {\r\n        this.setState({\r\n            redirect: uri,\r\n        });\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect != null && !this.state.del) {\r\n            window.location.assign(this.state.redirect)\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props;\r\n        const wanted = this.props.wanted;\r\n        const actionFct = this.props.action === defaultF ? undefined : this.props.action;\r\n        const clickable = actionFct !== undefined;\r\n        const uri = this.props.admin ? '/admin/users/' : '/users/';\r\n        return (\r\n            <Card onClick={clickable ? () => actionFct(user) : () => this.setRedirect(uri + user.id)}>\r\n                {this.renderRedirect()}\r\n                <Image src={user.picture === null ? nouser : user.picture}\r\n                       style={{height: \"170px\", objectFit: \"cover\"}}/>\r\n                <Image src={user.alive ? null : dead} style={{position: 'absolute', height: \"170px\", width: \"100%\"}}/>\r\n                <Image src={user.afk ? afk : null} style={{position: 'absolute', height: \"170px\", width: \"100%\"}}/>\r\n                <Image src={wanted === true ? prime : null} style={{position: 'absolute', height: \"170px\", width: \"100%\"}}/>\r\n                {(this.props.admin || this.props.TeamLeader) && this.props.handleDelete !== undefined ? <div style={{position: \"absolute\", width: \"100px\", height: \"100px\"}} onClick={() => {\r\n                    this.setState({del: true});\r\n                    this.props.handleDelete(user.username);\r\n                }}>\r\n                    <div style={{\r\n                        width: 0,\r\n                        height: 0,\r\n                        borderTop: \"30px solid white\",\r\n                        borderBottom: \"30px solid transparent\",\r\n                        borderLeft: \"30px solid white\",\r\n                        borderRight: \"30px solid transparent\",\r\n                        position: \"absolute\"\r\n                    }}/>\r\n                    <i className=\"trash icon\"\r\n                       style={{position: \"absolute\", top: \"10px\", left: \"10px\", color: 'black'}}/></div> : <></>}\r\n\r\n                <Card.Content>\r\n                    <Card.Header>{user.pseudo}</Card.Header>\r\n                    <Card.Meta>{`${user.lastName} ${user.firstName}`}</Card.Meta>\r\n                    <Card.Description>\r\n                        <Icon name=\"trophy\"/>\r\n                        {' '}\r\n                        {user.score}\r\n                    </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Card.Description>\r\n                        <Icon name=\"crosshairs\"/>\r\n                        {user.nbKill}\r\n                        {' '}\r\n                        /\r\n                        <Icon name=\"times\"/>\r\n                        {user.nbDeath}\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nCardUser.propTypes = {\r\n    user: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        pseudo: PropTypes.string,\r\n        room: PropTypes.string,\r\n        admin: PropTypes.oneOf(['JOUEUR', 'ADMIN', 'SUPERADMIN']),\r\n        alive: PropTypes.bool,\r\n        afk: PropTypes.bool,\r\n        afkScore: PropTypes.number,\r\n        teamId: PropTypes.number,\r\n        phone: PropTypes.string,\r\n        picture: PropTypes.string,\r\n        username: PropTypes.string,\r\n        lastName: PropTypes.string,\r\n        firstName: PropTypes.string,\r\n        nbKill: PropTypes.number,\r\n        nbDeath: PropTypes.number,\r\n        score: PropTypes.number,\r\n    }).isRequired,\r\n    action: PropTypes.func,\r\n    admin: PropTypes.bool,\r\n    handleDelete: PropTypes.func,\r\n    TeamLeader: PropTypes.bool,\r\n};\r\n\r\nCardUser.defaultProps = {\r\n    admin: false,\r\n    action: defaultF,\r\n};\r\n\r\nexport default CardUser;\r\n","C:\\Users\\louis\\killer\\front\\src\\components\\user\\UserGestion.jsx",["484","485","486","487","488","489","490"],"import React, {Component} from 'react';\r\nimport {Button, Divider, Form, Header, Icon, List, Message, Portal, Table,} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport config from '../../config.json';\r\nimport ImageUploader from '../utils/ImageUploader';\r\n\r\nclass UserGestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pseudo: '',\r\n            room: '',\r\n            admin: null,\r\n            alive: false,\r\n            afk: false,\r\n            afkScore: 'null',\r\n            roomError: false,\r\n            showModal: false,\r\n            teamId: null,\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n            phone: '',\r\n            userSkills: [],\r\n            allSkills: [],\r\n            showSkills: false,\r\n            experience: 0,\r\n            school: \"\",\r\n            allAchievements: [],\r\n            userAchievements: [],\r\n            showAchievements: false,\r\n        };\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: '',\r\n                variant: 'positive',\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    handleSubmitPicture = (data) => {\r\n        if (data.object && 'picture' in data.object) {\r\n            this.props.updatePic(data.picture);\r\n        }\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {\r\n            room, pseudo, admin, alive, afk, afkScore, phone, experience, school\r\n        } = this.state;\r\n        if (/(^1([A-D]([1-4]0[1-9]|[2-4](1[0-9]|2[0-4]))|[ABD]11[0-7]|C11[0-5])$)|(^2([A-C][GD]|D|DD)([0-3]|[GD])([12]|[GD])(0[0-6]|[1-4][12]|)$)|(^3E?(([GD][0-3]|C[1-3])(0[1-9]|10)|C00[1-8])(A|B)?$)|(^4([AB]|C[A-E]|[D-H])[0-9]{3}$)|(^5A[0-9]{3}(-[0-9])?$)|(^6([AD][AB]|BA|CA)[1-5]0[1-6]$)|(PAS SUR LE CAMPUS)/.test(room) === false) {\r\n            this.setState({roomError: true});\r\n        }\r\n\r\n        if (this.state.roomError === false) {\r\n            axios({\r\n                method: 'put',\r\n                url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n                data: {\r\n                    pseudo,\r\n                    room,\r\n                    admin,\r\n                    alive,\r\n                    afk,\r\n                    phone,\r\n                    afkScore,\r\n                    experience,\r\n                    school\r\n                },\r\n            }).then((data) => {\r\n                if (data.status === 200) {\r\n                    this.makeFeedback(\r\n                        'positive',\r\n                        'ok',\r\n                    );\r\n                    this.setState({roomError: false});\r\n                    const up = data.data;\r\n                    this.props.updateState(up);\r\n                } else {\r\n                    this.makeFeedback(\r\n                        'negative',\r\n                        'erreur du cul',\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleDelete = () => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                window.location.assign('/');\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    'erreur du cul',\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCheckbox = (prop) => {\r\n        this.setState((prevState) => ({\r\n            [prop]: !prevState[prop],\r\n        }));\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {target} = event;\r\n        const {value} = target;\r\n        const {name} = target;\r\n\r\n        this.setState({roomError: false})\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleChangeDrop = (e, {name, value}) => {\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            pseudo: this.props.profile.pseudo,\r\n            room: this.props.profile.room,\r\n            admin: this.props.profile.admin,\r\n            alive: this.props.profile.alive,\r\n            afk: this.props.profile.afk,\r\n            afkScore: this.props.profile.afkScore,\r\n            teamId: this.props.profile.teamId,\r\n            phone: this.props.profile.phone,\r\n            userSkills: this.props.profile.userSkills,\r\n            userAchievements: this.props.profile.userAchievements,\r\n            experience: this.props.profile.experience,\r\n            school: this.props.profile.school\r\n        });\r\n        this.getAllSkills();\r\n        this.getAllAchievements();\r\n\r\n    }\r\n\r\n    handleRezUser = () => {\r\n        const {alive} = this.state;\r\n\r\n        if (!alive) {\r\n            axios({\r\n                method: 'post',\r\n                url: `${config.back_Url}/users/${this.props.profile.id}/rez`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((response) => {\r\n                if (response.data.status === 200) {\r\n                    this.props.updateState(response.data.object);\r\n                    this.makeFeedback(\r\n                        'positive',\r\n                        'ok',\r\n                    );\r\n                } else {\r\n                    this.makeFeedback(\r\n                        'negative',\r\n                        'erreur du cul',\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFreeRezUser = () => {\r\n        const {alive} = this.state;\r\n\r\n        if (!alive) {\r\n            axios({\r\n                method: 'post',\r\n                url: `${config.back_Url}/users/${this.props.profile.id}/freerez`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((response) => {\r\n                if (response.data.status === 200) {\r\n                    this.props.updateState(response.data.object);\r\n                    this.makeFeedback(\r\n                        'positive',\r\n                        'ok',\r\n                    );\r\n                } else {\r\n                    this.makeFeedback(\r\n                        'negative',\r\n                        'erreur du cul',\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeRadio = (e, {value}) => this.setState({admin: value})\r\n\r\n    giveTime = () => {\r\n        const message = ((new Date()).getUTCHours() + 2).toString() + ' ' + ((new Date()).getUTCMinutes()).toString() + ' ' + ((new Date()).getUTCSeconds()).toString();\r\n        this.makeFeedback('positive', message)\r\n    }\r\n\r\n    getAllSkills = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/skills/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((result) => {\r\n\r\n            axios({\r\n                method: 'get',\r\n                url: `${config.back_Url}/teams/${this.state.teamId}`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then(\r\n                (team) => {\r\n                    const teamSkills = team.data.object.linkTeamSkills.map(teamSkill => teamSkill.name)\r\n                    axios({\r\n                        method: 'get',\r\n                        url: `${config.back_Url}/teams/${this.state.teamId}/users/`,\r\n                        headers: {Token: localStorage.getItem('killerToken')},\r\n                    }).then(teamUsers => {\r\n                        const teamUsersSkills = teamUsers.data.object.map(data => data.userSkills.map(userSkill => userSkill.name))\r\n                        result.data.object.map((s) => {\r\n                            console.log(teamUsersSkills.filter((array) => array.includes(s.name)).length === 0)\r\n                            s.price = s.baseCost - 5 * this.state.userSkills.filter((skill) => skill.type.includes(s.type[0]) && skill.level < s.level).length\r\n                            if (s.type.length === 2) s.price = s.price - 5 * this.state.userSkills.filter((skill) => skill.type.includes(s.type[1]) && skill.level < s.level).length\r\n                            if (teamSkills.includes(\"Spécialisation\") && teamUsersSkills.filter((array) => array.includes(s.name)).length >= Math.floor(teamUsersSkills.length * 2 / 3)) s.price = s.price - 5\r\n                            if (teamSkills.includes(\"Diversification\") && teamUsersSkills.filter((array) => array.includes(s.name)).length === 0) s.price = s.price - 5\r\n                            if (s.price < 0) s.price = 0\r\n                            s.skillId = s.id\r\n                        })\r\n                        this.setState({allSkills: result.data.object})\r\n                    })\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    getAllAchievements = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/achievements/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((result) => {\r\n            result.data.object.map((a) => {\r\n                a.achievementId = a.id\r\n            })\r\n            this.setState({allAchievements: result.data.object});\r\n\r\n        });\r\n    }\r\n\r\n    isGivable = (achievement) => {\r\n        const isGivable = this.state.userAchievements.map((a) => {\r\n                if (a.achievementId === achievement.id) {\r\n                    return false\r\n                }\r\n            }\r\n        )\r\n        return !(isGivable.includes(false))\r\n    }\r\n\r\n    isBuyable = (skill) => {\r\n        const isBuyable = this.state.userSkills.map((s) => {\r\n                if (s.skillId === skill.id) {\r\n                    return false\r\n                }\r\n            }\r\n        )\r\n        return !(isBuyable.includes(false) || (skill.level > 1 && this.state.userSkills.filter((s) => s.level === skill.level - 1).length < 2));\r\n    }\r\n\r\n    buySkill = (skill) => {\r\n        axios.post(`${config.back_Url}/skills/${this.props.profile.id}`,\r\n            {\r\n                skillId: skill.skillId,\r\n                price: skill.price,\r\n                experience: this.state.experience,\r\n                isWeapon: skill.isWeapon\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            if (r.data.status !== 200) this.makeFeedback(\r\n                'negative',\r\n                r.data.message,\r\n            );\r\n            else {\r\n                const skillBought = {\r\n                    description: skill.description,\r\n                    isWeapon: skill.isWeapon,\r\n                    level: skill.level,\r\n                    name: skill.name,\r\n                    skillId: skill.skillId,\r\n                    type: skill.type,\r\n                    price: skill.price\r\n                }\r\n\r\n                this.props.updateState({experience: this.state.experience - skill.price})\r\n\r\n                this.setState({\r\n                    experience: this.state.experience - skill.price\r\n                })\r\n\r\n                this.state.userSkills.push(skillBought)\r\n\r\n                await this.getAllSkills()\r\n\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    \"compétence mise a jour avec succés\",\r\n                );\r\n            }\r\n        }).catch(e => {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    sellSkill = (skill) => {\r\n        axios.post(`${config.back_Url}/skills/delete/${this.props.profile.id}`,\r\n            {\r\n                skillId: skill.skillId,\r\n                price: skill.price,\r\n                experience: this.state.experience\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            this.props.updateState({experience: this.state.experience + skill.price})\r\n\r\n            const skillToRemove = this.state.userSkills.find((s) => s.skillId === skill.skillId)\r\n\r\n            this.setState({\r\n                userSkills: this.state.userSkills.filter((s) => s !== skillToRemove),\r\n                experience: this.state.experience + skill.price\r\n            })\r\n\r\n            await this.getAllSkills()\r\n\r\n            this.makeFeedback(\r\n                'positive',\r\n                r.data.message,\r\n            );\r\n        }).catch(e => {\r\n\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    giveAchievement = (achievement) => {\r\n        axios.post(`${config.back_Url}/achievements/${this.props.profile.id}`,\r\n            {\r\n                achievementId: achievement.achievementId,\r\n                name: achievement.name,\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            if (r.data.status !== 200) this.makeFeedback(\r\n                'negative',\r\n                r.data.message,\r\n            );\r\n            else {\r\n                const achievementGived = {\r\n                    description: achievement.description,\r\n                    name: achievement.name,\r\n                    achievementId: achievement.achievementId,\r\n\r\n                }\r\n\r\n\r\n                this.state.userAchievements.push(achievementGived);\r\n\r\n                await this.getAllAchievements()\r\n\r\n\r\n            }\r\n        }).catch(e => {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    deleteAchievement = (achievement) => {\r\n        axios.post(`${config.back_Url}/achievements/delete/${this.props.profile.id}`,\r\n            {\r\n                achievementId: achievement.achievementId,\r\n                name: achievement.name,\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n\r\n            const achievementToRemove = this.state.userAchievements.find((a) => a.achievementId === achievement.achievementId)\r\n\r\n            this.setState({\r\n                userAchievements: this.state.userAchievements.filter((a) => a !== achievementToRemove),\r\n            })\r\n\r\n            await this.getAllAchievements()\r\n\r\n            this.makeFeedback(\r\n                'positive',\r\n                r.data.message,\r\n            );\r\n        }).catch(e => {\r\n\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            pseudo,\r\n            room,\r\n            alive,\r\n            admin,\r\n            afk,\r\n            afkScore,\r\n            roomError,\r\n            teamId,\r\n            message,\r\n            variant,\r\n            open,\r\n            phone,\r\n            experience,\r\n            allSkills,\r\n            school,\r\n            userAchievements,\r\n            allAchievements,\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <Portal open={open}>\r\n                    <Message\r\n                        style={{\r\n                            left: '20px',\r\n                            position: 'fixed',\r\n                            bottom: '20px',\r\n                            zIndex: 1000,\r\n                        }}\r\n                        negative={variant === 'negative'}\r\n                        positive={variant === 'positive'}\r\n                    >\r\n                        <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n                        {message}\r\n                    </Message>\r\n                </Portal>\r\n                <div>\r\n                    <Divider/>\r\n                    <h2>Compétences</h2>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Level</Table.HeaderCell>\r\n                                <Table.HeaderCell>Types</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Prix</Table.HeaderCell>\r\n                                <Table.HeaderCell>Vendre</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {this.state.userSkills.map((skill, key) => (\r\n                                <Table.Row key={key}>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5>{skill.name}</h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{skill.level}</Table.Cell>\r\n                                    <Table.Cell>{skill.type.join(', ')}</Table.Cell>\r\n                                    <Table.Cell>{skill.description}</Table.Cell>\r\n                                    <Table.Cell>{skill.price}</Table.Cell>\r\n                                    <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                        onClick={() => this.sellSkill(skill)} negative>\r\n                                        Vendre\r\n                                    </Button>{(skill.isWeapon && this.state.userSkills.filter(s => s.skillId === skill.skillId).length < 2) ?\r\n                                        <Button style={{marginLeft: '2em'}}\r\n                                                onClick={() => this.buySkill(skill)} positive>\r\n                                            Acheter\r\n                                        </Button> : <div/>}</Table.Cell>\r\n\r\n                                </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n                <Header as=\"h2\">Acheter une compétence</Header>\r\n                {this.state.showSkills ? <Button onClick={() => {\r\n                    this.setState({showSkills: false});\r\n                }}>masquer les compétences restantes</Button> : <Button onClick={() => {\r\n                    this.setState({showSkills: true});\r\n                }}>voir les compétences restantes</Button>}\r\n                {this.state.showSkills ? <div>\r\n                    <Divider/>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Level</Table.HeaderCell>\r\n                                <Table.HeaderCell>Types</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Prix</Table.HeaderCell>\r\n                                <Table.HeaderCell>Acheter</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {allSkills.map((skill, key) => {\r\n                                    if (this.isBuyable(skill) !== false) {\r\n                                        return (<Table.Row key={key}>\r\n                                            <Table.Cell textAlign=\"center\">\r\n                                                <h5>{skill.name}</h5>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>{skill.level}</Table.Cell>\r\n                                            <Table.Cell>{skill.type.join(', ')}</Table.Cell>\r\n                                            <Table.Cell>{skill.description}</Table.Cell>\r\n                                            <Table.Cell>{skill.price}</Table.Cell>\r\n                                            <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                onClick={() => this.buySkill(skill)} positive>\r\n                                                Acheter\r\n                                            </Button></Table.Cell>\r\n                                        </Table.Row>)\r\n                                    }\r\n                                }\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div> : <div/>}\r\n\r\n                <Header as=\"h2\">Mes Achievements</Header>\r\n                <div>\r\n                    <Divider/>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Donner</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {userAchievements.map((achievement, key) => {\r\n\r\n                                    return (<Table.Row key={key}>\r\n                                        <Table.Cell textAlign=\"center\">\r\n                                            <h5>{achievement.name}</h5>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>{achievement.description}</Table.Cell>\r\n                                        <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                            onClick={() => this.deleteAchievement(achievement)} negative>\r\n                                            Enlever\r\n                                        </Button></Table.Cell>\r\n                                    </Table.Row>)\r\n                                }\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n\r\n                <Header as=\"h2\">Donner un Achievement</Header>\r\n                {this.state.showAchievements ? <Button onClick={() => {\r\n                    this.setState({showAchievements: false});\r\n                }}>masquer les achievements restants</Button> : <Button onClick={() => {\r\n                    this.setState({showAchievements: true});\r\n                }}>voir les achievements restants</Button>}\r\n                {this.state.showAchievements ? <div>\r\n                    <Divider/>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Donner</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {allAchievements.map((achievement, key) => {\r\n                                    if (!userAchievements.map(ua => ua.name).includes(achievement.name))\r\n                                        return (<Table.Row key={key}>\r\n                                            <Table.Cell textAlign=\"center\">\r\n                                                <h5>{achievement.name}</h5>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>{achievement.description}</Table.Cell>\r\n                                            <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                onClick={() => this.giveAchievement(achievement)} positive>\r\n                                                Donner\r\n                                            </Button></Table.Cell>\r\n                                        </Table.Row>)\r\n                                }\r\n                            )}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div> : <div/>}\r\n\r\n                <Header as=\"h2\">Gestion</Header>\r\n                <Button type=\"button\" onClick={() => this.setState({showModal: true})}>\r\n                    <Icon name=\"photo\"/>\r\n                    Uploader une photo\r\n                </Button>\r\n                <Button onClick={this.handleDelete} negative>Supprimer le joueur</Button>\r\n                <Button positive type=\"button\" onClick={this.handleRezUser} disabled={alive || teamId === null}>\r\n                    <Icon name=\"ambulance\"/>\r\n                    Résurrectionner le joueur\r\n                </Button>\r\n                <Button positive type=\"button\" onClick={this.handleFreeRezUser} disabled={alive || teamId === null}>\r\n                    <Icon name=\"ambulance\"/>\r\n                    Résurrectionner le joueur gratuitement\r\n                </Button>\r\n                <ImageUploader uploadUrl={`/users/${this.props.profile.id}`} type=\"user\" open={this.state.showModal}\r\n                               handleSubmit={this.handleSubmitPicture}/>\r\n                <div className=\"spacing\"/>\r\n\r\n                <Form>\r\n                    <Form.Input label=\"Pseudo\" name=\"pseudo\" value={pseudo} onChange={this.handleChange}/>\r\n                    <Form.Input label=\"Room\" name=\"room\" value={room} onChange={this.handleChange}\r\n                                error={roomError ? {content: \"Les règles s'appliquent aussi à toi petit con\"} : false}/>\r\n                    <Form.Input label=\"phone\" name=\"phone\" value={phone} onChange={this.handleChange}/>\r\n                    <Form.Input label=\"Electif/ST/mention/Césure\" name=\"school\" value={school}\r\n                                onChange={this.handleChange}/>\r\n                    <Form.Checkbox label=\"Alive\" name=\"alive\" checked={alive}\r\n                                   onChange={() => this.handleCheckbox('alive')}/>\r\n                    <label>status</label>\r\n                    <Form.Radio\r\n                        label=\"Joueur\"\r\n                        value=\"JOUEUR\"\r\n                        checked={admin === 'JOUEUR'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Radio\r\n                        label=\"Admin\"\r\n                        value=\"ADMIN\"\r\n                        checked={admin === 'ADMIN'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Radio\r\n                        label=\"Super Admin\"\r\n                        value=\"SUPERADMIN\"\r\n                        checked={admin === 'SUPERADMIN'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Checkbox label=\"Afk\" name=\"afk\" checked={afk} onChange={() => this.handleCheckbox('afk')}/>\r\n                    <Form.Input label=\"Afk score\" name=\"afkScore\" type=\"number\" value={afkScore}\r\n                                onChange={this.handleChange}/>\r\n                    <Form.Input label=\"experience\" name=\"experience\" type=\"number\" value={experience}\r\n                                onChange={this.handleChange}/>\r\n                    <Button type=\"submit\" onClick={this.handleSubmit}>Valider</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserGestion;\r\n","C:\\Users\\louis\\killer\\front\\src\\components\\team\\TeamGestion.jsx",["491","492","493","494","495"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button, Icon, Divider, Form, Portal, Message, Table, Header,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport ImageUploader from '../utils/ImageUploader';\r\nimport config from '../../config.json';\r\nimport nameParser from '../../utils/nameParser';\r\n\r\nclass TeamGestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            faction: '',\r\n            name: '',\r\n            money: 0,\r\n            score: 0,\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n            allItems: [],\r\n            teamItems: [],\r\n            allTeamSkills: [],\r\n            showTeamSkills: false,\r\n            teamSkills: [],\r\n            users: [],\r\n            showAchievements: false,\r\n            teamAchievements: []\r\n        };\r\n    }\r\n\r\n    handleSubmit = (data) => {\r\n        if ('picture' in data.object) {\r\n            this.props.updatePic(data.object.picture);\r\n            this.makeFeedback(\"positive\", \"Image mise a jour\")\r\n        }\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    handleSubmitForm = () => {\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                name: this.state.name,\r\n                faction: this.state.faction,\r\n                score: this.state.score,\r\n                money: this.state.money,\r\n            },\r\n        }).then((data) => {\r\n            if (data.status === 200) {\r\n                const up = data.data;\r\n                this.props.updateState(up.name, up.faction, up.money, up.score);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                localStorage.setItem('teamId', null);\r\n                window.location.assign('/');\r\n            } else {\r\n                // erreur\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            faction: this.props.team.faction,\r\n            name: this.props.team.name,\r\n            score: this.props.team.score,\r\n            money: this.props.team.money,\r\n            teamItems: this.props.team.teamItems,\r\n            users: this.props.users,\r\n            teamSkills: this.props.team.linkTeamSkills,\r\n            teamAchievements: this.props.team.teamAchievements\r\n        });\r\n        this.getAllItems();\r\n        this.getAllTeamSkills();\r\n        this.getAllAchievements()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {target} = event;\r\n        const {value} = target;\r\n        const {name} = target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: '',\r\n                variant: 'positive',\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    isAllowedToChangeFaction = () => {\r\n        // tous les horraires sont UTC donc 18h UTC correspond à 20h en France\r\n        const debutPeriode = 18;\r\n        return (((new Date()).getUTCHours() >= debutPeriode) || (this.props.admin));\r\n    }\r\n\r\n    handleSubmitChangeTeam = () => {\r\n        const {\r\n            name, faction, money, score,\r\n        } = this.state;\r\n        this.makeFeedback('positive', name.toString() + ' ' + faction.toString(),)\r\n\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                name: name,\r\n                faction: faction,\r\n                money: money,\r\n                score: score,\r\n            },\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                const up = data.data.object;\r\n                console.log(up)\r\n                this.props.updateState(up);\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    'erreur du cul',\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChangeRadio = (value) => {\r\n        if (this.isAllowedToChangeFaction()) {\r\n            this.setState({faction: value});\r\n        } else {\r\n            this.makeFeedback('negative', 'attends 20h pour pouvoir toucher a ça petit con');\r\n        }\r\n    }\r\n\r\n    getAllItems = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/items/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((result) => {\r\n\r\n            this.setState({allItems: result.data.object})\r\n        });\r\n    }\r\n\r\n    buyItem = (item, price) => {\r\n        axios.post(`${config.back_Url}/items/${this.props.team.id}`,\r\n            {\r\n                itemId: item.id,\r\n                money: this.state.money,\r\n                price: price,\r\n\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }\r\n        ).then(async r => {\r\n            if (r.data.status !== 200) this.makeFeedback(\r\n                'negative',\r\n                r.data.message,\r\n            );\r\n            else {\r\n                const itemBought = {\r\n                    description: item.description,\r\n                    name: item.name,\r\n                    itemId: item.id,\r\n                }\r\n                this.setState({\r\n                    money: this.state.money - price\r\n                })\r\n\r\n                this.props.updateState({\r\n                    money: this.state.money - price\r\n                })\r\n\r\n                this.state.teamItems.push(itemBought);\r\n\r\n                await this.getAllItems()\r\n\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    \"objets mis a jour avec succés\",\r\n                );\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    deleteItem = (item) => {\r\n        console.log(item);\r\n        axios.post(`${config.back_Url}/items/delete/${this.props.team.id}`,\r\n            {\r\n                itemId: item.itemId,\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n\r\n            const itemToRemove = this.state.teamItems.find((i) => i.itemId === item.itemId)\r\n\r\n            this.setState({\r\n                teamItems: this.state.teamItems.filter((i) => i !== itemToRemove),\r\n            })\r\n\r\n            await this.getAllItems()\r\n\r\n            this.makeFeedback(\r\n                'positive',\r\n                r.data.message,\r\n            );\r\n        })\r\n            .catch(e => {\r\n\r\n                    this.makeFeedback(\r\n                        'negative',\r\n                        e.message,\r\n                    );\r\n                }\r\n            )\r\n    }\r\n\r\n    getAllTeamSkills = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/skills/team`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((result) => {\r\n            axios({\r\n                method: 'get',\r\n                url: `${config.back_Url}/teams/${this.props.team.id}/users/`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((data) => {\r\n                result.data.object.map((s) => {\r\n                    if (s.priceUserDepending === true) {\r\n                        s.price = data.data.object.length * s.price\r\n                    }\r\n                    s.teamSkillId = s.id\r\n                })\r\n                this.setState({allTeamSkills: result.data.object})\r\n            })\r\n        });\r\n    }\r\n\r\n    isBuyable = (skill) => {\r\n        const isBuyable = this.state.teamSkills.map((s) => {\r\n                if (s.teamSkillId === skill.id) {\r\n                    return false\r\n                }\r\n            }\r\n        )\r\n        return !isBuyable.includes(false);\r\n    }\r\n\r\n    buySkill = (skill) => {\r\n        axios.post(`${config.back_Url}/skills/team/${this.props.team.id}`,\r\n            {\r\n                teamSkillId: skill.teamSkillId,\r\n                price: skill.price,\r\n                money: this.state.money\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            if (r.data.status !== 200) this.makeFeedback(\r\n                'negative',\r\n                r.data.message,\r\n            );\r\n            else {\r\n                const teamSkillBought = {\r\n                    description: skill.description,\r\n                    name: skill.name,\r\n                    teamSkillId: skill.teamSkillId,\r\n                    price: skill.price\r\n                }\r\n\r\n                this.props.updateState({money: this.state.money - skill.price})\r\n\r\n                this.setState({\r\n                    money: this.state.money - skill.price\r\n                })\r\n\r\n                this.state.teamSkills.push(teamSkillBought)\r\n\r\n                await this.getAllTeamSkills()\r\n\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    \"compétence mise a jour avec succés\",\r\n                );\r\n            }\r\n        }).catch(e => {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    sellSkill = (skill) => {\r\n        axios.post(`${config.back_Url}/skills/team/delete/${this.props.team.id}`,\r\n            {\r\n                teamSkillId: skill.teamSkillId,\r\n                price: skill.price,\r\n                money: this.state.money\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            this.props.updateState({money: this.state.money + skill.price})\r\n\r\n            const skillToRemove = this.state.teamSkills.find((s) => s.teamSkillId === skill.teamSkillId)\r\n\r\n            this.setState({\r\n                teamSkills: this.state.teamSkills.filter((s) => s !== skillToRemove),\r\n                money: this.state.money + skill.price\r\n            })\r\n\r\n            await this.getAllTeamSkills()\r\n\r\n            this.makeFeedback(\r\n                'positive',\r\n                r.data.message,\r\n            );\r\n        }).catch(e => {\r\n\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    giveAchievement = (achievement) => {\r\n        axios.post(`${config.back_Url}/achievements/team/${this.props.team.id}`,\r\n            {\r\n                achievementId: achievement.achievementId,\r\n                name: achievement.name,\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n            if (r.data.status !== 200) this.makeFeedback(\r\n                'negative',\r\n                r.data.message,\r\n            );\r\n            else {\r\n                const achievementGived = {\r\n                    description: achievement.description,\r\n                    name: achievement.name,\r\n                    achievementId: achievement.achievementId,\r\n                }\r\n\r\n\r\n                this.state.teamAchievements.push(achievementGived);\r\n\r\n                await this.getAllAchievements()\r\n\r\n\r\n            }\r\n        }).catch(e => {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    getAllAchievements = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/achievements/team`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((result) => {\r\n            result.data.object.map((a) => {\r\n                a.achievementId = a.id\r\n            })\r\n            this.setState({allAchievements: result.data.object});\r\n\r\n        });\r\n    }\r\n\r\n    deleteAchievement = (achievement) => {\r\n        axios.post(`${config.back_Url}/achievements/team/delete/${this.props.profile.id}`,\r\n            {\r\n                achievementId: achievement.achievementId,\r\n                name: achievement.name,\r\n            }, {\r\n                headers: {Token: localStorage.getItem('killerToken')}\r\n            }\r\n        ).then(async r => {\r\n\r\n            const achievementToRemove = this.state.userAchievements.find((a) => a.achievementId === achievement.achievementId)\r\n\r\n            this.setState({\r\n                userAchievements: this.state.userAchievements.filter((a) => a !== achievementToRemove),\r\n            })\r\n\r\n            await this.getAllAchievements()\r\n\r\n            this.makeFeedback(\r\n                'positive',\r\n                r.data.message,\r\n            );\r\n        }).catch(e => {\r\n\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    e.message,\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        const {team} = this.props;\r\n        const {\r\n            faction,\r\n            score,\r\n            name,\r\n            money,\r\n            message,\r\n            variant,\r\n            open,\r\n            allItems,\r\n            teamItems,\r\n            allAchievements,\r\n            teamSkills,\r\n            teamAchievements\r\n        } = this.state;\r\n\r\n        return (\r\n\r\n            <div className=\"TeamGestion\">\r\n                <Portal open={open}>\r\n                    <Message\r\n                        style={{\r\n                            left: '20px',\r\n                            position: 'fixed',\r\n                            bottom: '20px',\r\n                            zIndex: 1000,\r\n                        }}\r\n                        negative={variant === 'negative'}\r\n                        positive={variant === 'positive'}\r\n                    >\r\n                        <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n                        {message}\r\n                    </Message>\r\n                </Portal>\r\n                {this.props.admin ? <><Divider/>\r\n                    <h2>Compétences</h2>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Prix</Table.HeaderCell>\r\n                                <Table.HeaderCell>Vendre</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {teamSkills.map((skill, key) => (\r\n                                <Table.Row key={key}>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5>{skill.name}</h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{skill.description}</Table.Cell>\r\n                                    <Table.Cell>{skill.price}</Table.Cell>\r\n                                    <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                        onClick={() => this.sellSkill(skill)} negative>\r\n                                        Vendre\r\n                                    </Button></Table.Cell>\r\n\r\n                                </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                    <Header as=\"h2\">Acheter une compétence</Header>\r\n                    {this.state.showTeamSkills ? <Button onClick={() => {\r\n                        this.setState({showTeamSkills: false});\r\n                    }}>masquer les compétences restantes</Button> : <Button onClick={() => {\r\n                        this.setState({showTeamSkills: true});\r\n                    }}>voir les compétences restantes</Button>}\r\n                    {this.state.showTeamSkills ? <div>\r\n                        <Divider/>\r\n                        <Table celled padded sortable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Prix</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Acheter</Table.HeaderCell>\r\n\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {this.state.allTeamSkills.map((skill, key) => {\r\n                                        if (this.isBuyable(skill) !== false) {\r\n                                            return (<Table.Row key={key}>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5>{skill.name}</h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{skill.description}</Table.Cell>\r\n                                                <Table.Cell>{skill.price}</Table.Cell>\r\n                                                <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                    onClick={() => this.buySkill(skill)} positive>\r\n                                                    Acheter\r\n                                                </Button></Table.Cell>\r\n                                            </Table.Row>)\r\n                                        }\r\n                                    }\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </div> : <div/>}\r\n                    <Header as=\"h2\">Team Achievements</Header>\r\n                    <div>\r\n                        <Divider/>\r\n                        <Table celled padded sortable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Donner</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {teamAchievements.map((achievement, key) => {\r\n\r\n                                        return (<Table.Row key={key}>\r\n                                            <Table.Cell textAlign=\"center\">\r\n                                                <h5>{achievement.name}</h5>\r\n                                            </Table.Cell>\r\n                                            <Table.Cell>{achievement.description}</Table.Cell>\r\n                                            <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                onClick={() => this.deleteAchievement(achievement)}\r\n                                                                negative>\r\n                                                Enlever\r\n                                            </Button></Table.Cell>\r\n                                        </Table.Row>)\r\n                                    }\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </div>\r\n\r\n                    <Header as=\"h2\">Donner un Achievement</Header>\r\n                    {this.state.showAchievements ? <Button onClick={() => {\r\n                        this.setState({showAchievements: false});\r\n                    }}>masquer les achievements restants</Button> : <Button onClick={() => {\r\n                        this.setState({showAchievements: true});\r\n                    }}>voir les achievements restants</Button>}\r\n                    {this.state.showAchievements ? <div>\r\n                        <Divider/>\r\n                        <Table celled padded sortable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Donner</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {allAchievements.map((achievement, key) => {\r\n                                        if (!teamAchievements.map(ua => ua.name).includes(achievement.name))\r\n                                            return (<Table.Row key={key}>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5>{achievement.name}</h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{achievement.description}</Table.Cell>\r\n                                                <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                    onClick={() => this.giveAchievement(achievement)}\r\n                                                                    positive>\r\n                                                    Donner\r\n                                                </Button></Table.Cell>\r\n                                            </Table.Row>)\r\n                                    }\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </div> : <div/>}\r\n\r\n                </> : <div/>}\r\n                <Divider/>\r\n                <h2>Gestion</h2>\r\n                <Button size=\"small\" type=\"button\" onClick={() => this.setState({showModal: true})}>\r\n                    <Icon name=\"photo\"/>\r\n                    Uploader une photo\r\n                </Button>\r\n                <Button size=\"small\" color=\"red\" type=\"button\" onClick={this.handleDelete}>\r\n                    <Icon name=\"trash\"/>\r\n                    Supprimer l&apos;équipe\r\n                </Button>\r\n                <ImageUploader uploadUrl={`/teams/${team.id}`} type=\"team\" open={this.state.showModal}\r\n                               handleSubmit={this.handleSubmit}/>\r\n                {this.props.admin ? (\r\n\r\n                    <div>\r\n\r\n                        <Divider/>\r\n                        <h2>Objets de l'équipe</h2>\r\n                        <Table celled padded sortable>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Utiliser</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n                            <Table.Body>\r\n                                {teamItems.map((item, key) => (\r\n                                    <Table.Row key={key}>\r\n                                        <Table.Cell textAlign=\"center\">\r\n                                            <h5>{item.name}</h5>\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>{item.description}</Table.Cell>\r\n                                        <Table.Cell>\r\n                                            <Button style={{marginLeft: '2em'}}\r\n                                                    onClick={() => this.deleteItem(item)} negative>\r\n                                                Utiliser\r\n                                            </Button>\r\n                                        </Table.Cell>\r\n\r\n                                    </Table.Row>\r\n                                ))}\r\n                            </Table.Body>\r\n                        </Table>\r\n\r\n\r\n                        <Header as=\"h2\">Acheter un objet</Header>\r\n                        <div>\r\n                            <Divider/>\r\n                            <Table celled padded sortable>\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                                        <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                        <Table.HeaderCell>Acheter</Table.HeaderCell>\r\n                                        <Table.HeaderCell>Offrir</Table.HeaderCell>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    {allItems.map((item, key) => {\r\n                                            return (<Table.Row key={key}>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5>{item.name}</h5>\r\n                                                </Table.Cell>\r\n\r\n                                                <Table.Cell>{item.description}</Table.Cell>\r\n                                                <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                    onClick={() => this.buyItem(item, 25)} positive>\r\n                                                    Acheter\r\n                                                </Button></Table.Cell>\r\n                                                <Table.Cell><Button style={{marginLeft: '2em'}}\r\n                                                                    onClick={() => this.buyItem(item, 0)} positive>\r\n                                                    Offrir\r\n                                                </Button></Table.Cell>\r\n                                            </Table.Row>)\r\n\r\n                                        }\r\n                                    )}\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </div>\r\n\r\n\r\n                        <Form onSubmit={this.handleSubmitForm} className=\"spacing\">\r\n                            <Form.Field>\r\n                                <label>Nom</label>\r\n                                <input value={name} name=\"name\" onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Argent</label>\r\n                                <input value={money} name=\"money\" onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Score</label>\r\n                                <input value={score} name=\"score\" onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Group inline>\r\n                                <label>Faction</label>\r\n                                <Form.Radio\r\n                                    label={nameParser('OUVRIER')}\r\n                                    value=\"OUVRIER\"\r\n                                    checked={faction === 'OUVRIER'}\r\n                                    onClick={() => this.handleChangeRadio('OUVRIER')}\r\n                                />\r\n                                <Form.Radio\r\n                                    label={nameParser('NOBLE')}\r\n                                    value=\"NOBLE\"\r\n                                    checked={faction === 'NOBLE'}\r\n                                    onClick={() => this.handleChangeRadio('NOBLE')}\r\n                                />\r\n                                <Form.Radio\r\n                                    label={nameParser('AMET')}\r\n                                    value=\"AMET\"\r\n                                    checked={faction === 'AMET'}\r\n                                    onClick={() => this.handleChangeRadio('AMET')}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button onClick={() => this.handleSubmitChangeTeam()}>Modifier l&apos;équipe</Button>\r\n                        </Form>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Form>\r\n                            <Form.Group inline>\r\n                                <label>Faction</label>\r\n                                <Form.Radio\r\n                                    label={nameParser('OUVRIER')}\r\n                                    value=\"OUVRIER\"\r\n                                    checked={faction === 'OUVRIER'}\r\n                                    onClick={() => this.handleChangeRadio('OUVRIER')}\r\n                                />\r\n                                <Form.Radio\r\n                                    label={nameParser('NOBLE')}\r\n                                    value=\"NOBLE\"\r\n                                    checked={faction === 'NOBLE'}\r\n                                    onClick={() => this.handleChangeRadio('NOBLE')}\r\n                                />\r\n                                <Form.Radio\r\n                                    label={nameParser('AMET')}\r\n                                    value=\"AMET\"\r\n                                    checked={faction === 'AMET'}\r\n                                    onClick={() => this.handleChangeRadio('AMET')}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button onClick={() => this.handleSubmitChangeTeam()}>Modifier l&apos;équipe</Button>\r\n                        </Form>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nTeamGestion.propTypes = {\r\n    admin: PropTypes.bool.isRequired,\r\n    team: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        picture: PropTypes.string,\r\n        name: PropTypes.string,\r\n        faction: PropTypes.oneOf(['NOBLE', 'OUVRIER', 'AMET']),\r\n        score: PropTypes.number,\r\n        money: PropTypes.number,\r\n    }).isRequired,\r\n    updatePic: PropTypes.func.isRequired,\r\n    updateState: PropTypes.func.isRequired,\r\n};\r\n\r\nTeamGestion.defaultProp = {\r\n    admin: false,\r\n\r\n};\r\n\r\nexport default TeamGestion;\r\n","C:\\Users\\louis\\killer\\front\\src\\components\\team\\CardTeam.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\message\\message.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\Chart\\histo.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\message\\messageForm.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\enigma\\NewEditEnigma.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\utils\\ImageUploader.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\components\\utils\\cropper.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\pageSecrete.jsx",["496","497"],"import React, {useEffect,useState,Component} from 'react';\r\nimport {Form} from 'semantic-ui-react';\r\nclass PageSecrete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code:\"2453\",\r\n            entree:\"code\"\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { target } = event;\r\n        const { value } = target;\r\n        this.setState({entree:value})\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <Form>\r\n            <Form.Input value={this.state.entree} onChange={this.handleChange}/>\r\n            </Form>\r\n            {this.state.entree===this.state.code ?\r\n            \r\n            <div>\r\n            <br>\r\n            </br>\r\n            <p>\r\n            Le secret de la salle des machines s'est effacé, mais il reste peut être encore des traces...\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Ode au bitely\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Un 12 février, je m’amusais sur ton banc,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 3 janvier, je voguais sur le vent.\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 29 juin, je crapahutais en montagne,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Mais le 2 juillet, c’était près d’un lac.\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 7 novembre, je fus renvoyé au bagne,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Et le 25 décembre, on m’donna du cognac.\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 12 mars, je profitais des giboulées,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Jusqu’au 16 avril, à nos grands regrets.\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 1er mars, je festoyais mes amitiés,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Au 31 octobre, ceux qui nous ont quitté.\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 17 août, je me protégeais du soleil,\r\n            </p>\r\n            <p style={{color:'#f7f7f7'}}>\r\n            Le 19 décembre, j’pleurais son sommeil.\r\n            </p>\r\n            </div>\r\n            : <div/>\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n}\r\n\r\nexport default PageSecrete","C:\\Users\\louis\\killer\\front\\src\\pages\\Reliques.jsx",[],"C:\\Users\\louis\\killer\\front\\src\\pages\\covelba.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\index.js",[],["498","499"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\serviceWorker.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\App.jsx",["500"],"import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport './Desktop.css';\r\n\r\nimport isLogged from './utils/isLogged';\r\nimport isValidated from './utils/isValidated';\r\n\r\nimport LoginComponent from './components/auth/login.component';\r\nimport LogoutComponent from './components/auth/logout.component';\r\n\r\nimport Accueil from './pages/accueil';\r\n// import Rules from './pages/rules';\r\nimport Story from './pages/Story';\r\n\r\nimport Menu from './components/bar/navbarD';\r\nimport MenuLogged from './components/bar/navbarDLogged';\r\n// import MenuAdmin from './components/bar/navbarDAdmin';\r\nimport Activities from './pages/activities';\r\nimport background from './img/background.png';\r\n// import Users from './pages/users';\r\n// import User from './pages/user';\r\n// import Teams from './pages/teams';\r\n// import Team from './pages/team';\r\n// import Messages from './pages/message';\r\n// import CreateTeam from './pages/createTeam';\r\n// import KillFeed from './pages/killFeed';\r\n// import Enigma from './pages/enigma';\r\n\r\n// import Gestion from './pages/admin/gestion';\r\n// import TeamsAdmin from './pages/admin/teams';\r\n// import TeamAdmin from './pages/admin/team';\r\n// import UserAdmin from './pages/admin/user';\r\n// import UsersAdmin from './pages/admin/users';\r\n// import MessagesAdmin from './pages/admin/message';\r\n// import Kill from './pages/admin/kill';\r\n// import KillFeedAdmin from './pages/admin/killFeed';\r\n// import Afk from './pages/admin/afk';\r\n// import Stats from './pages/admin/stats';\r\n\r\n// import CreateUser from './components/user/createuser';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n// import PageSecrete from './pages/pageSecrete';\r\n// import Reliques from './pages/Reliques';\r\n// import Covelba from './pages/covelba';\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        isValidated();\r\n    }, []);\r\n    if (isLogged()) {\r\n        // if (localStorage.getItem('admin') !== 'JOUEUR') {\r\n        //     const Content = () => (\r\n        //         <>\r\n        //             <Route exact path=\"/\" component={Accueil}/>\r\n        //             {/* <Route exact path=\"/admin/teams/:id\" component={TeamAdmin}/>\r\n        //             <Route exact path=\"/admin/teams\" component={TeamsAdmin}/>\r\n        //             <Route exact path=\"/admin/users/:id\" component={UserAdmin}/>\r\n        //             <Route exact path=\"/admin/users\" component={UsersAdmin}/>\r\n        //             <Route exact path=\"/admin/messages\" component={MessagesAdmin}/>\r\n        //             <Route exact path=\"/admin/afk\" component={Afk}/>\r\n        //             <Route exact path=\"/admin/stats\" component={Stats}/>\r\n        //             <Route path=\"/admin/kills\" component={Kill}/>\r\n        //             <Route path=\"/admin/gestion\" component={Gestion}/>\r\n        //             <Route path=\"/admin/killFeed\" component={KillFeedAdmin}/>\r\n        //             <Route exact path=\"/users/:id\" component={User}/>\r\n        //             <Route exact path=\"/users\" component={Users}/>\r\n        //             <Route exact path=\"/messages\" component={Messages}/>\r\n        //             <Route exact path=\"/createteam/\" component={CreateTeam}/>\r\n        //             <Route exact path=\"/teams/:id\" component={Team}/>\r\n        //             <Route exact path=\"/teams\" component={Teams}/>\r\n        //             <Route exact path=\"/killFeed\" component={KillFeed}/>\r\n        //             <Route exact path=\"/enigmas\" component={Enigma}/> */}\r\n        //             <Route path=\"/logout\" component={LogoutComponent}/>\r\n        //             <Route path=\"/login/:token\" component={LoginComponent}/>\r\n        //             {/* <Route exact path=\"/rules\" component={Rules}/>\r\n                    // <Route exact path=\"/story\" component={Story}/>\r\n        //             <Route exact path=\"/salleDesMachines\" component={PageSecrete}/>\r\n        //             <Route exact path=\"/relique\" component={Reliques}/>\r\n        //             <Route exact path=\"/covelba\" component={Covelba}/> */}\r\n        //         </>\r\n        //     );\r\n\r\n        //     return (\r\n        //         <Router>\r\n        //             <MenuAdmin/>\r\n        //             <Responsive\r\n        //                 as=\"div\"\r\n        //                 minWidth={1201}\r\n        //                 style={{\r\n        //                     width: '60%',\r\n        //                     marginLeft: '20%',\r\n        //                     minHeight: '250px',\r\n        //                 }}\r\n        //             >\r\n        //                 <Content/>\r\n        //             </Responsive>\r\n        //             <Responsive as=\"div\" maxWidth={1200}>\r\n        //                 <Content/>\r\n        //             </Responsive>\r\n        //         </Router>\r\n\r\n        //     );\r\n        // }\r\n\r\n        const Content = () => (\r\n            <>\r\n                <Route exact path=\"/\" component={Accueil}/>\r\n                <Route path=\"/logout\" component={LogoutComponent}/>\r\n                <Route path=\"/login/:token\" component={LoginComponent}/>\r\n                <Route exact path=\"/activity\" component={Activities}/>\r\n                {/* <Route exact path=\"/users/:id\" component={User}/>\r\n                <Route exact path=\"/users\" component={Users}/>\r\n                <Route exact path=\"/createteam/\" component={CreateTeam}/>\r\n                <Route exact path=\"/teams/:id\" component={Team}/>\r\n                <Route exact path=\"/teams\" component={Teams}/>\r\n                <Route exact path=\"/killFeed\" component={KillFeed}/>\r\n                <Route exact path=\"/enigmas\" component={Enigma}/>\r\n                <Route exact path=\"/messages\" component={Messages}/>\r\n        <Route exact path=\"/rules\" component={Rules}/> */}\r\n                <Route exact path=\"/story\" component={Story}/>\r\n                {/*<Route exact path=\"/salleDesMachines\" component={PageSecrete}/>\r\n                <Route exact path=\"/relique\" component={Reliques}/>\r\n                <Route exact path=\"/covelba\" component={Covelba}/> */}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <Router>\r\n                <MenuLogged/>\r\n                <Responsive\r\n                    as=\"div\"\r\n                    minWidth={1201}\r\n                    style={{\r\n                        width: '60%',\r\n                        marginLeft: '20%',\r\n                        minHeight: '250px',\r\n                    }}\r\n                >\r\n                    <Content/>\r\n                </Responsive>\r\n                <Responsive as=\"div\" maxWidth={1200}>\r\n                    <Content/>\r\n                </Responsive>\r\n            </Router>\r\n        );\r\n    }\r\n    const Content = () => (\r\n        <>\r\n            <Route exact path=\"/\" component={Accueil}/>\r\n            {/* <Route exact path=\"/rules\" component={Rules}/>*/}\r\n            <Route exact path=\"/story\" component={Story}/> \r\n            <Route path=\"/logout\" component={LogoutComponent}/>\r\n            <Route path=\"/login/:token\" component={LoginComponent}/>\r\n            {/* <Route path=\"/createUser/:token\" component={CreateUser}/> */}\r\n        </>\r\n    );\r\n    return (\r\n        <div>\r\n        <Router>\r\n            <Menu/>\r\n            <Responsive\r\n                as=\"div\"\r\n                minWidth={1201}\r\n                style={{\r\n                    width: '60%',\r\n                    marginLeft: '20%',\r\n                    minHeight: '250px',\r\n                }}\r\n            >\r\n                <Content/>\r\n            </Responsive>\r\n            <Responsive as=\"div\" maxWidth={1200}>\r\n                <Content/>\r\n            </Responsive>\r\n        </Router>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\isLogged.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\isValidated.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\Story.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\rules.jsx",["501"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\team.jsx",["502"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\users.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\accueil.jsx",["503","504","505","506","507","508","509","510","511","512","513"],"import React, {Component} from 'react';\r\nimport {\r\n    Segment,\r\n} from 'semantic-ui-react';\r\nimport killer_lore from '../img/background.png'\r\n\r\nexport default class Rules extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <Segment style={{marginTop: '20px', backgroundColor: '#111111'}}>\r\n                    <h2 style = {{color: 'white'}}>Histoire</h2>\r\n                    <p><img src={killer_lore} alt={\"killer_lore\"} width={\"100%\"}/></p>\r\n                    <p style={{textIndent: \"30px\"}} style = {{color: 'white'}}>{`Le tonnerre gronde sur Victoria. Sous les bruits incessants de la ville et des machines, de\r\n                        terribles complots se préparent. Personne n’ose le dire, mais il ne fait aucun doute : ce n’est\r\n                        qu’une question de jours avant que la Cité Mécanique sombre dans le chaos de la guerre.`}</p>\r\n                    <p style = {{color: 'white'}}>{`Dans cette société viciée, chacun est ennemi de tous les autres ; mais lorsque les intérêts se\r\n                        rejoignent, de puissants groupes se forment. Sont ainsi apparues trois grandes factions,\r\n                        influentes et dangereuses :`}</p>\r\n                    <p style = {{color: 'white'}}>\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>- Les Ouvriers</text>\r\n                        {` de la Grande Horlogerie, qui composent la majorité prolétaire de la ville, en ont\r\n                        assez d’être écrasés sous la botte de la noblesse et des entreprises. Rangés derrière\r\n                        l’ingénieur révolutionnaire `}\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>Oswald Hudson</text>\r\n                        {` ils comptent bien renverser le pouvoir en place, par\r\n                        la force s'il le faut : que représentent quelques sacrifices, face à l'intérêt du plus grand\r\n                        nombre ?`}</p>\r\n                    <p style = {{color: 'white'}}>\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>- Les Nobles</text>\r\n                        {` dirigent Victoria d’une main de fer, ce depuis des générations. Il ne fait nul doute\r\n                    qu’eux seuls sont capables de donner une cohésion à cette ville corrompue : prolétaires et étrangers\r\n                    guideraient cette cité dans l’abîme. Seul le Noble Jeu peut désigner un vainqueur, et en première\r\n                    place se trouve `}\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>Henri Crolles</text>\r\n                        {`, qui a su unifier les familles face à la menace`}</p>\r\n                    <p style = {{color: 'white'}}>\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>- Les Amets</text>\r\n                        {`, lointains voyageurs, tout juste arrivent à Victoria à bord de leurs dirigeables,\r\n                    profitant de la crise pour s’emparer d’une place. D’où viennent-ils, et pourquoi sont-ils là ? Nul\r\n                    ne le sait encore, mais une chose ne fait aucun doute : lorsque les riches et les pauvres se seront\r\n                    massacrés, l’ambassadeur `}\r\n                        <text style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>Akilon Sofos</text>\r\n                        {` n’aura qu’à tendre la main pour s'emparer de la ville.`}</p>\r\n                    <br/>\r\n                    <p style={{textIndent: \"30px\"}} style = {{color: 'white'}}>Ces trois groupes useront des stratégies les plus fourbes, des\r\n                        manœuvres les plus viles pour\r\n                        s’emparer de la Cité Mécanique. Enfin, comme pour attiser des braises déjà ardentes, un élément\r\n                        inattendu est apparu :</p>\r\n                    <p style={{fontWeight: 'bold'}} style = {{color: 'white'}}>Le Shuffle.</p>\r\n                    <p style = {{color: 'white'}}>Il s’agit d’une nouvelle source d’énergie nébuleuse, dite miraculeuse, tout juste découverte par\r\n                        Oswald et son associée, Erika Mason. Cette substance aurait des capacités extraordinaires, et\r\n                        tout le monde le sait : celui qui le maîtrisera gagnera la guerre.</p>\r\n                    <br/>\r\n                    <p style={{textIndent: \"30px\"}} style = {{color: 'white'}}> Cocasse, ne trouvez-vous pas ? Un tel objet de convoitise,\r\n                        tombé du ciel, comme s’il existait,\r\n                        quelque part, un Dieu se délectant du chaos. Les factions s’étriperont, pour son contrôle ;\r\n                        mais\r\n                        les fragiles chaînes liant ses membres sauront-elles résister à un tel trésor ?</p>\r\n\r\n                    <p style = {{color: 'white'}}> Mesdames, messieurs, prenez place, et contemplez les tréfonds de la nature humaine : c’est\r\n                        l’heure de la guerre.\r\n                        C’est l’heure du Killer.</p>\r\n                    <br/>\r\n                    <p style={{fontWeight: \"bold\"}} style = {{color: 'white'}}>- Mark Atwood-Monroe Jr.</p>\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\teams.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\message.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\user.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\pageSecrete.jsx",["514","515"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\createTeam.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\enigma.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\covelba.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\killFeed.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\teams.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\users.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\message.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\Reliques.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\gestion.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\team.jsx",["516"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\user.jsx",["517"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\killFeed.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\stats.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\kill.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\admin\\afk.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarD.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\auth\\logout.component.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\auth\\login.component.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\createuser.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarDLogged.jsx",["518"],"import React, { Component } from 'react';\r\nimport {\r\n  Grid, Sidebar, Menu, Icon,\r\n} from 'semantic-ui-react';\r\nimport config from '../../config.json';\r\nimport logo from '../../img/jdr.png';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nconst urlAccueil = `${config.front_Url}`;\r\n// const urlUsers = `${config.front_Url}/users/`;\r\n// const urlTeams = `${config.front_Url}/teams/`;\r\n// const urlTeamCreation = `${config.front_Url}/createTeam`;\r\n// const urlMessage = `${config.front_Url}/messages`;\r\nconst urlLogout = `${config.front_Url}/logout`;\r\n// const urlKillFeed = `${config.front_Url}/killFeed`;\r\n// const urlEnigmas = `${config.front_Url}/enigmas`;\r\nconst urlStory = `${config.front_Url}/story`;\r\n// const urlRules = `${config.front_Url}/rules`;\r\n// const urlSdM = `${config.front_Url}/salleDesMachines`;\r\n// const urlRelique = `${config.front_Url}/relique`;\r\nconst urlActivities = `${config.front_Url}/activity`;\r\n\r\nexport default class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  handleHideClick = () => this.setState({ visible: false })\r\n\r\n  handleShowClick = () => this.setState({ visible: true })\r\n\r\n  handleSidebarHide = () => this.setState({ visible: false })\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    return (\r\n      <div>\r\n        <Responsive as=\"div\" {...Responsive.onlyComputer} >\r\n          <Grid className=\"menu\" verticalAlign=\"middle\" style={{ height: '60px', background: '#111111', borderBlockColor: 'white'}}> \r\n            <Grid.Column width={2} style={{ padding: 0, height: '60px' }}>\r\n              <a id=\"logolien\" href={urlAccueil}><img src={logo} alt=\"logo\" id=\"logo\" /></a>\r\n            </Grid.Column>\r\n            <Grid.Column width={12} textAlign=\"center\" style={{ padding: 0, height: '60px' }}>\r\n              <Grid textAlign=\"center\" style={{ padding: 0, margin: 0, height: '60px' }}>\r\n                <div style={{ display: 'flex' }}>\r\n                <a className=\"linkNavbar\" href={urlActivities}><div className=\"elem\">Activités</div></a>\r\n                {/* <a className=\"linkNavbar\" href={urlStory}><div className=\"elem\">Description</div></a> */}\r\n                  {/* <a className=\"linkNavbar\" href={urlUsers + localStorage.getItem('userId')}><div className=\"elem\"> Mon profil</div></a>\r\n                  {localStorage.getItem('teamId') === 'null'\r\n                    ? <a className=\"linkNavbar\" href={urlTeamCreation}><div className=\"elem\">Créer une Team</div></a>\r\n                    : <a className=\"linkNavbar\" href={urlTeams + localStorage.getItem('teamId')}><div className=\"elem\"> Ma Team</div></a>}\r\n                  <a className=\"linkNavbar\" href={urlUsers}><div className=\"elem\">Joueurs</div></a>\r\n                  <a className=\"linkNavbar\" href={urlTeams}><div className=\"elem\">Teams</div></a>\r\n                  <a className=\"linkNavbar\" href={urlMessage}><div className=\"elem\">Messages</div></a>\r\n                  <a className=\"linkNavbar\" href={urlKillFeed}><div className=\"elem\">Meurtres</div></a>\r\n                  {localStorage.getItem('teamId') === 'null' ? null\r\n                    : <a className=\"linkNavbar\" href={urlEnigmas}><div className=\"elem\">Énigmes</div></a>}\r\n                  <a className=\"linkNavbar\" href={urlStory}><div className=\"elem\">Histoire</div></a>\r\n                  <a className=\"linkNavbar\" href={urlRules}><div className=\"elem\">Règles</div></a>\r\n                  <a className=\"linkNavbar\" href={urlSdM}><div className=\"elem\">Salle des Machines</div></a>\r\n                  <a className=\"linkNavbar\" href={urlRelique}><div className=\"elem\">Relique</div></a> */}\r\n                </div>\r\n              </Grid>\r\n            </Grid.Column>\r\n            <Grid.Column width={2} style={{ padding: 0, height: '60px' }}>\r\n              <a href={urlLogout} className=\"linkNavbarLogin\"><div>Logout</div></a>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive as=\"div\" maxWidth={Responsive.onlyTablet.maxWidth}>\r\n          <Grid className=\"menu\" verticalAlign=\"middle\" style={{ height: '60px', backgroundColor: '#111111', borderBlockColor: 'white' }}>\r\n            <Grid.Column width={3} style={{ padding: 0, height: '60px' }}>\r\n              <a id=\"logolien\" href={urlAccueil}><img src={logo} alt=\"logo\" id=\"logo\" /></a>\r\n            </Grid.Column>\r\n            <Grid.Column width={10} />\r\n            <Grid.Column width={3} style={{ padding: 0, height: '60px' }}>\r\n              <div className=\"linkNavbarLogin\" onClick={this.handleShowClick} role=\"button\" tabIndex={0}>\r\n                <Icon name=\"align justify\"/>\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation=\"overlay\"\r\n            icon=\"labeled\"\r\n            inverted\r\n            onHide={this.handleSidebarHide}   \r\n            vertical\r\n            visible={visible}\r\n            direction=\"right\"\r\n            width=\"thin\"\r\n          >\r\n            <Menu.Item as=\"a\" href={urlAccueil}>\r\n              <Icon name=\"home\" />\r\n              Accueil\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlActivities}>\r\n              <Icon name=\"trophy\" />\r\n              Activités\r\n            </Menu.Item>\r\n            {/* <Menu.Item as=\"a\" href={urlStory}>\r\n              <Icon name=\"book\" />\r\n              Histoire\r\n            </Menu.Item> */}\r\n            {/* <Menu.Item as=\"a\" href={urlUsers + localStorage.getItem('userId')}>\r\n              <Icon name=\"user circle\" />\r\n              Mon profil\r\n            </Menu.Item>\r\n            {localStorage.getItem('teamId') === 'null' ? (\r\n              <Menu.Item as=\"a\" href={urlTeamCreation}>\r\n                <Icon name=\"user plus\" />\r\n                Créer une équipe\r\n              </Menu.Item>\r\n            ) : (\r\n              <Menu.Item as=\"a\" href={urlTeams + localStorage.getItem('teamId')}>\r\n                <Icon name=\"user md\" />\r\n                Mon équipe\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item as=\"a\" href={urlUsers}>\r\n              <Icon name=\"user\" />\r\n              Joueurs\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlTeams}>\r\n              <Icon name=\"users\" />\r\n              Équipes\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlMessage}>\r\n              <Icon name=\"mail\" />\r\n              Message\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlKillFeed}>\r\n              <Icon name=\"ambulance\" />\r\n              Meurtres\r\n            </Menu.Item>\r\n            {localStorage.getItem('teamId') === 'null' ? null\r\n              : (\r\n                <Menu.Item as=\"a\" href={urlEnigmas}>\r\n                  <Icon name=\"question\" />\r\n                  Énigmes\r\n                </Menu.Item>\r\n              )}\r\n              <Menu.Item as=\"a\" href={urlStory}>\r\n              <Icon name=\"book\" />\r\n              Histoire\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlRules}>\r\n              <Icon name=\"legal\" />\r\n              Règles\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlSdM}>\r\n              <Icon name=\"cogs\" />\r\n              Salle des Machines\r\n            </Menu.Item>\r\n            <Menu.Item as=\"a\" href={urlRelique}>\r\n              <Icon name=\"chess\" />\r\n              Relique\r\n            </Menu.Item> */}\r\n            <Menu.Item as=\"a\" href={urlLogout}>\r\n              <Icon name=\"log out\" />\r\n              Se déconnecter\r\n            </Menu.Item>\r\n          </Sidebar>\r\n        </Responsive>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\bar\\navbarDAdmin.jsx",[],["519","520"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\utils\\nameParser.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\CardUser.jsx",["521"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\SearchUser.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\user\\UserGestion.jsx",["522","523","524","525","526","527","528"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\team\\TeamGestion.jsx",["529","530","531","532","533"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\team\\CardTeam.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\message\\message.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\message\\messageForm.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\Chart\\histo.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\enigma\\NewEditEnigma.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\utils\\ImageUploader.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\utils\\cropper.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\pages\\activities.jsx",["534","535","536","537","538"],"import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport logo from '../img/jdr.png';\r\nimport background from '../img/background.png';\r\nimport CardActivity from '../components/activity/CardActivity';\r\nimport {\r\n  Segment, Loader, Card, Icon, Input,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport config from '../config.json';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nexport default class Activities extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activities: [],\r\n      loading: true,\r\n      search: [],\r\n      val: '',\r\n      sort: 'name',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData(0);\r\n  }\r\n\r\n  fetchData = (offset) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `${config.back_Url}/activity`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n      params: {\r\n        offset,\r\n      },\r\n    }).then((data) => {\r\n      if (data.data.status === 200) {\r\n        const value = this.state.val.toLowerCase();\r\n        const search = [];\r\n        const arr = [\r\n          ...this.state.activities,\r\n          ...data.data.object,\r\n        ];\r\n\r\n        arr.forEach((activity) => {\r\n          if (activity.name.toLowerCase().indexOf(value) > -1) {\r\n            search.push(activity);\r\n          }\r\n        });\r\n\r\n        if (data.data.object.length === 10) {\r\n          this.setState({\r\n            loading: true,\r\n            activities: arr,\r\n            search,\r\n          });\r\n          this.fetchData(offset + 10);\r\n        } else {\r\n          this.setState({\r\n            activities: arr,\r\n            search,\r\n            loading: false,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // handleChange = (event, data) => {\r\n  //   const value = data.value.toLowerCase();\r\n  //   const search = [];\r\n  //   this.state.activities.forEach((activity) => {\r\n  //     if (activity.name.toLowerCase().indexOf(value) > -1) {\r\n  //       search.push(activity);\r\n  //     }\r\n  //   });\r\n  //   this.setState({\r\n  //     search,\r\n  //     val: data.value,\r\n  //   });\r\n  // }\r\n\r\n  // handleChangeSort = (event) => {\r\n  //   this.setState({\r\n  //     sort: event.target.value,\r\n  //   });\r\n  // }\r\n\r\n\r\n  render() {\r\n    if (this.state.activities == null) {\r\n      return (\r\n        <Segment className=\"Loading\">\r\n          <Loader active className=\"test\">Loading</Loader>\r\n        </Segment>\r\n      );\r\n    }\r\n\r\n\r\n    const { sort, search } = this.state;\r\n\r\n    let ActivitiesToPrint = [];\r\n\r\n    \r\n\r\n    \r\n    ActivitiesToPrint = search.sort((a, b) => a.name < b.name);\r\n  \r\n\r\n    const Activities = () => underscore.map(ActivitiesToPrint, (activity) => (\r\n      <CardActivity activity={activity} key={activity.id} />));\r\n\r\n    return (\r\n      <div className=\"bodyDesktop\" >\r\n        <Segment style={{backgroundColor: '#222222'}}>\r\n          <h2 style = {{color: 'white'}}>Activités</h2>\r\n          {/* <Input focus placeholder=\"Search...\" onChange={this.handleChange} className=\"InputDesktop\" size=\"large\" />\r\n          <select className=\"InputDesktop SelectDesktop ui selection dropdown\" onChange={this.handleChangeSort}>\r\n            <option selected value=\"name\">Nom</option>\r\n            <option value=\"score\">Nombre de points</option>\r\n            <option value=\"nobles\">Nobles</option>\r\n            <option value=\"ouvriers\">Ouvriers</option>\r\n            <option value=\"amets\">Amets</option>\r\n          </select> */}\r\n          <>\r\n            <Responsive  as=\"div\" minWidth={1001}>\r\n              <Card.Group centered itemsPerRow={2} className=\"centered\">\r\n                {Activities()}\r\n              </Card.Group>\r\n            </Responsive>\r\n            {/* <Responsive as=\"div\" minWidth={501} maxWidth={701}>\r\n              <Card.Group centered itemsPerRow={3} className=\"centered\">\r\n                {Activities()}\r\n              </Card.Group>\r\n            </Responsive>\r\n            <Responsive as=\"div\" minWidth={701} maxWidth={1001}>\r\n              <Card.Group centered itemsPerRow={4} className=\"centered\">\r\n                {Activities()}\r\n              </Card.Group>\r\n            </Responsive> */}\r\n            <Responsive as=\"div\" maxWidth={1001}>\r\n              <Card.Group centered itemsPerRow={1} className=\"centered\">\r\n                {Activities()}\r\n              </Card.Group>\r\n            </Responsive>\r\n          </>\r\n          {this.state.loading\r\n            ? (\r\n              <div className=\"SmallLoading\">\r\n                <Icon size=\"large\" loading name=\"redo\" />\r\n                <p>Loading...</p>\r\n              </div>\r\n            )\r\n            : null}\r\n        </Segment>\r\n        <div className=\"spacer\" />\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site\\front\\src\\components\\activity\\CardActivity.jsx",["539","540"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\index.js",["541"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\serviceWorker.js",[],["542","543"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\App.jsx",["544","545"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\utils\\isLogged.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\utils\\isValidated.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\accueil.jsx",["546","547","548","549","550","551","552","553","554","555","556"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\activities.jsx",["557","558","559","560","561"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\bar\\navbarDLogged.jsx",["562"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\activity\\CardActivity.jsx",["563","564"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Image, Icon } from 'semantic-ui-react';\r\n\r\nclass CardActivity extends Component {\r\n    render() {\r\n      const { activity } = this.props;\r\n      const uri = '/activity/';\r\n      const cutDescription = activity.description.substr(0,1024) + '...';\r\n      return (\r\n        <Card href={uri + activity.id} style={{backgroundColor: '#111111'}}>\r\n          <Card.Content>\r\n            <Card.Header style = {{color: 'white'}}>{activity.name}</Card.Header>\r\n            <Card.Description style = {{color: 'white'}}>\r\n                {cutDescription}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n  \r\n  CardActivity.propTypes = {\r\n    activity: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n    }).isRequired,\r\n  };\r\n\r\n  CardActivity.defaultProps = {\r\n    activity: {\r\n        id: 0,\r\n        name: \"defaultActivity\",\r\n        description: \"activité de test\",\r\n    }\r\n  };\r\n  \r\n  export default CardActivity;","C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\bar\\navbarD.jsx",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\signUp.jsx",["565","566","567","568","569"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\register.component.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\services\\auth.services.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\signIn.jsx",["570","571","572","573","574"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\login.component.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\pages\\profile.jsx",["575","576","577","578","579"],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\profile.component.js",[],"C:\\Users\\louis\\Documents\\doc\\loisirs\\interplateau ludique\\site FELICITES\\front\\src\\components\\auth\\logout.component.js",["580"],{"ruleId":"581","replacedBy":"582"},{"ruleId":"583","replacedBy":"584"},{"ruleId":"585","severity":1,"message":"586","line":1,"column":27,"nodeType":"587","messageId":"588","endLine":1,"endColumn":33},{"ruleId":"585","severity":1,"message":"589","line":4,"column":69,"nodeType":"587","messageId":"588","endLine":4,"endColumn":75},{"ruleId":"585","severity":1,"message":"590","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":17},{"ruleId":"591","severity":1,"message":"592","line":45,"column":17,"nodeType":"593","messageId":"594","endLine":45,"endColumn":27},{"ruleId":"585","severity":1,"message":"595","line":2,"column":9,"nodeType":"587","messageId":"588","endLine":2,"endColumn":17},{"ruleId":"585","severity":1,"message":"596","line":2,"column":46,"nodeType":"587","messageId":"588","endLine":2,"endColumn":50},{"ruleId":"597","severity":1,"message":"598","line":237,"column":52,"nodeType":"599","messageId":"600","endLine":237,"endColumn":54},{"ruleId":"597","severity":1,"message":"598","line":259,"column":40,"nodeType":"599","messageId":"600","endLine":259,"endColumn":42},{"ruleId":"597","severity":1,"message":"601","line":268,"column":63,"nodeType":"599","messageId":"602","endLine":268,"endColumn":65},{"ruleId":"597","severity":1,"message":"601","line":278,"column":57,"nodeType":"599","messageId":"602","endLine":278,"endColumn":59},{"ruleId":"597","severity":1,"message":"601","line":538,"column":57,"nodeType":"599","messageId":"602","endLine":538,"endColumn":59},{"ruleId":"597","severity":1,"message":"601","line":607,"column":69,"nodeType":"599","messageId":"602","endLine":607,"endColumn":71},{"ruleId":"597","severity":1,"message":"598","line":258,"column":44,"nodeType":"599","messageId":"600","endLine":258,"endColumn":46},{"ruleId":"597","severity":1,"message":"601","line":270,"column":57,"nodeType":"599","messageId":"602","endLine":270,"endColumn":59},{"ruleId":"597","severity":1,"message":"598","line":405,"column":40,"nodeType":"599","messageId":"600","endLine":405,"endColumn":42},{"ruleId":"597","severity":1,"message":"601","line":528,"column":76,"nodeType":"599","messageId":"602","endLine":528,"endColumn":78},{"ruleId":"597","severity":1,"message":"601","line":595,"column":73,"nodeType":"599","messageId":"602","endLine":595,"endColumn":75},{"ruleId":"585","severity":1,"message":"603","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":25},{"ruleId":"585","severity":1,"message":"604","line":1,"column":26,"nodeType":"587","messageId":"588","endLine":1,"endColumn":34},{"ruleId":"581","replacedBy":"605"},{"ruleId":"583","replacedBy":"606"},{"ruleId":"585","severity":1,"message":"607","line":20,"column":8,"nodeType":"587","messageId":"588","endLine":20,"endColumn":18},{"ruleId":"585","severity":1,"message":"586","line":1,"column":27,"nodeType":"587","messageId":"588","endLine":1,"endColumn":33},{"ruleId":"585","severity":1,"message":"589","line":4,"column":69,"nodeType":"587","messageId":"588","endLine":4,"endColumn":75},{"ruleId":"608","severity":1,"message":"609","line":20,"column":53,"nodeType":"610","messageId":"611","endLine":20,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":27,"column":60,"nodeType":"610","messageId":"611","endLine":27,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":31,"column":60,"nodeType":"610","messageId":"611","endLine":31,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":36,"column":60,"nodeType":"610","messageId":"611","endLine":36,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":41,"column":60,"nodeType":"610","messageId":"611","endLine":41,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":44,"column":60,"nodeType":"610","messageId":"611","endLine":44,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":49,"column":60,"nodeType":"610","messageId":"611","endLine":49,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":52,"column":53,"nodeType":"610","messageId":"611","endLine":52,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":56,"column":53,"nodeType":"610","messageId":"611","endLine":56,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":61,"column":53,"nodeType":"610","messageId":"611","endLine":61,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":71,"column":53,"nodeType":"610","messageId":"611","endLine":71,"endColumn":79},{"ruleId":"585","severity":1,"message":"603","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":25},{"ruleId":"585","severity":1,"message":"604","line":1,"column":26,"nodeType":"587","messageId":"588","endLine":1,"endColumn":34},{"ruleId":"585","severity":1,"message":"590","line":2,"column":8,"nodeType":"587","messageId":"588","endLine":2,"endColumn":17},{"ruleId":"591","severity":1,"message":"592","line":45,"column":17,"nodeType":"593","messageId":"594","endLine":45,"endColumn":27},{"ruleId":"585","severity":1,"message":"612","line":17,"column":7,"nodeType":"587","messageId":"588","endLine":17,"endColumn":15},{"ruleId":"581","replacedBy":"613"},{"ruleId":"583","replacedBy":"614"},{"ruleId":"585","severity":1,"message":"595","line":2,"column":9,"nodeType":"587","messageId":"588","endLine":2,"endColumn":17},{"ruleId":"585","severity":1,"message":"596","line":2,"column":46,"nodeType":"587","messageId":"588","endLine":2,"endColumn":50},{"ruleId":"597","severity":1,"message":"598","line":237,"column":52,"nodeType":"599","messageId":"600","endLine":237,"endColumn":54},{"ruleId":"597","severity":1,"message":"598","line":259,"column":40,"nodeType":"599","messageId":"600","endLine":259,"endColumn":42},{"ruleId":"597","severity":1,"message":"601","line":268,"column":63,"nodeType":"599","messageId":"602","endLine":268,"endColumn":65},{"ruleId":"597","severity":1,"message":"601","line":278,"column":57,"nodeType":"599","messageId":"602","endLine":278,"endColumn":59},{"ruleId":"597","severity":1,"message":"601","line":538,"column":57,"nodeType":"599","messageId":"602","endLine":538,"endColumn":59},{"ruleId":"597","severity":1,"message":"601","line":607,"column":69,"nodeType":"599","messageId":"602","endLine":607,"endColumn":71},{"ruleId":"597","severity":1,"message":"598","line":258,"column":44,"nodeType":"599","messageId":"600","endLine":258,"endColumn":46},{"ruleId":"597","severity":1,"message":"601","line":270,"column":57,"nodeType":"599","messageId":"602","endLine":270,"endColumn":59},{"ruleId":"597","severity":1,"message":"598","line":405,"column":40,"nodeType":"599","messageId":"600","endLine":405,"endColumn":42},{"ruleId":"597","severity":1,"message":"601","line":528,"column":76,"nodeType":"599","messageId":"602","endLine":528,"endColumn":78},{"ruleId":"597","severity":1,"message":"601","line":595,"column":73,"nodeType":"599","messageId":"602","endLine":595,"endColumn":75},{"ruleId":"585","severity":1,"message":"615","line":2,"column":10,"nodeType":"587","messageId":"588","endLine":2,"endColumn":14},{"ruleId":"585","severity":1,"message":"616","line":3,"column":8,"nodeType":"587","messageId":"588","endLine":3,"endColumn":12},{"ruleId":"585","severity":1,"message":"607","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":18},{"ruleId":"585","severity":1,"message":"617","line":7,"column":32,"nodeType":"587","messageId":"588","endLine":7,"endColumn":37},{"ruleId":"585","severity":1,"message":"618","line":103,"column":13,"nodeType":"587","messageId":"588","endLine":103,"endColumn":17},{"ruleId":"585","severity":1,"message":"619","line":3,"column":16,"nodeType":"587","messageId":"588","endLine":3,"endColumn":21},{"ruleId":"585","severity":1,"message":"620","line":3,"column":23,"nodeType":"587","messageId":"588","endLine":3,"endColumn":27},{"ruleId":"585","severity":1,"message":"621","line":3,"column":10,"nodeType":"587","messageId":"588","endLine":3,"endColumn":23},{"ruleId":"581","replacedBy":"622"},{"ruleId":"583","replacedBy":"623"},{"ruleId":"585","severity":1,"message":"603","line":1,"column":16,"nodeType":"587","messageId":"588","endLine":1,"endColumn":25},{"ruleId":"585","severity":1,"message":"607","line":25,"column":8,"nodeType":"587","messageId":"588","endLine":25,"endColumn":18},{"ruleId":"608","severity":1,"message":"609","line":20,"column":53,"nodeType":"610","messageId":"611","endLine":20,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":27,"column":60,"nodeType":"610","messageId":"611","endLine":27,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":31,"column":60,"nodeType":"610","messageId":"611","endLine":31,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":36,"column":60,"nodeType":"610","messageId":"611","endLine":36,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":41,"column":60,"nodeType":"610","messageId":"611","endLine":41,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":44,"column":60,"nodeType":"610","messageId":"611","endLine":44,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":49,"column":60,"nodeType":"610","messageId":"611","endLine":49,"endColumn":86},{"ruleId":"608","severity":1,"message":"609","line":52,"column":53,"nodeType":"610","messageId":"611","endLine":52,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":56,"column":53,"nodeType":"610","messageId":"611","endLine":56,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":61,"column":53,"nodeType":"610","messageId":"611","endLine":61,"endColumn":79},{"ruleId":"608","severity":1,"message":"609","line":71,"column":53,"nodeType":"610","messageId":"611","endLine":71,"endColumn":79},{"ruleId":"585","severity":1,"message":"615","line":2,"column":10,"nodeType":"587","messageId":"588","endLine":2,"endColumn":14},{"ruleId":"585","severity":1,"message":"616","line":3,"column":8,"nodeType":"587","messageId":"588","endLine":3,"endColumn":12},{"ruleId":"585","severity":1,"message":"607","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":18},{"ruleId":"585","severity":1,"message":"617","line":7,"column":32,"nodeType":"587","messageId":"588","endLine":7,"endColumn":37},{"ruleId":"585","severity":1,"message":"618","line":103,"column":13,"nodeType":"587","messageId":"588","endLine":103,"endColumn":17},{"ruleId":"585","severity":1,"message":"612","line":17,"column":7,"nodeType":"587","messageId":"588","endLine":17,"endColumn":15},{"ruleId":"585","severity":1,"message":"619","line":3,"column":16,"nodeType":"587","messageId":"588","endLine":3,"endColumn":21},{"ruleId":"585","severity":1,"message":"620","line":3,"column":23,"nodeType":"587","messageId":"588","endLine":3,"endColumn":27},{"ruleId":"585","severity":1,"message":"624","line":3,"column":12,"nodeType":"587","messageId":"588","endLine":3,"endColumn":18},{"ruleId":"585","severity":1,"message":"625","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"620","line":3,"column":26,"nodeType":"587","messageId":"588","endLine":3,"endColumn":30},{"ruleId":"585","severity":1,"message":"617","line":3,"column":32,"nodeType":"587","messageId":"588","endLine":3,"endColumn":37},{"ruleId":"626","severity":1,"message":"627","line":9,"column":3,"nodeType":"628","messageId":"629","endLine":11,"endColumn":4},{"ruleId":"585","severity":1,"message":"624","line":3,"column":12,"nodeType":"587","messageId":"588","endLine":3,"endColumn":18},{"ruleId":"585","severity":1,"message":"625","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"620","line":3,"column":26,"nodeType":"587","messageId":"588","endLine":3,"endColumn":30},{"ruleId":"585","severity":1,"message":"617","line":3,"column":32,"nodeType":"587","messageId":"588","endLine":3,"endColumn":37},{"ruleId":"626","severity":1,"message":"627","line":9,"column":3,"nodeType":"628","messageId":"629","endLine":11,"endColumn":4},{"ruleId":"585","severity":1,"message":"624","line":3,"column":12,"nodeType":"587","messageId":"588","endLine":3,"endColumn":18},{"ruleId":"585","severity":1,"message":"625","line":3,"column":20,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"585","severity":1,"message":"620","line":3,"column":26,"nodeType":"587","messageId":"588","endLine":3,"endColumn":30},{"ruleId":"585","severity":1,"message":"617","line":3,"column":32,"nodeType":"587","messageId":"588","endLine":3,"endColumn":37},{"ruleId":"626","severity":1,"message":"627","line":9,"column":3,"nodeType":"628","messageId":"629","endLine":11,"endColumn":4},{"ruleId":"626","severity":1,"message":"627","line":4,"column":5,"nodeType":"628","messageId":"629","endLine":6,"endColumn":8},"no-native-reassign",["630"],"no-negated-in-lhs",["631"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'PropTypes' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Redirect' is defined but never used.","'List' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useEffect' is defined but never used.","'useState' is defined but never used.",["630"],["631"],"'background' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'urlStory' is assigned a value but never used.",["630"],["631"],"'Grid' is defined but never used.","'logo' is defined but never used.","'Input' is defined but never used.","'sort' is assigned a value but never used.","'Image' is defined but never used.","'Icon' is defined but never used.","'BrowserRouter' is defined but never used.",["630"],["631"],"'Loader' is defined but never used.","'Card' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]