{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Documents\\\\doc\\\\loisirs\\\\interplateau ludique\\\\site\\\\front\\\\src\\\\components\\\\enigma\\\\NewEditEnigma.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewEditEnigma extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      if (this.props.enigma === undefined) {\n        this.createEnigma();\n      } else {\n        this.updateEnigma();\n      }\n    };\n\n    this.createEnigma = () => {\n      const {\n        name,\n        type,\n        points,\n        money,\n        desc,\n        hints\n      } = this.state;\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/admin/enigma`,\n        headers: {\n          Token: localStorage.getItem('killerToken'),\n          'Content-Type': 'application/json'\n        },\n        data: {\n          name,\n          type,\n          points,\n          money,\n          desc,\n          hints\n        }\n      }).then(data => {\n        if (data.data.status === 201) {\n          this.setState({\n            show: false\n          });\n        }\n      });\n    };\n\n    this.updateEnigma = () => {\n      const {\n        id,\n        name,\n        type,\n        points,\n        money,\n        desc,\n        hints\n      } = this.state;\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/admin/enigma/${id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken'),\n          'Content-Type': 'application/json'\n        },\n        data: {\n          name,\n          type,\n          points,\n          money,\n          desc,\n          hints\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          this.setState({\n            show: false\n          });\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        target\n      } = event;\n      const {\n        value\n      } = target;\n      const {\n        name\n      } = target;\n      const isNotHint = Number.isNaN(parseInt(name, 10));\n\n      if (isNotHint) {\n        this.setState({\n          [name]: value\n        });\n      } else {\n        const number = parseInt(name, 10);\n        const {\n          hints\n        } = this.state;\n\n        if (name[1] === 'h') {\n          hints[number].value = value;\n        } else if (name[1] === 'p') {\n          hints[number].price = value;\n        }\n\n        this.setState({\n          hints\n        });\n      }\n    };\n\n    this.updateOrder = event => {\n      const {\n        target\n      } = event;\n      const value = parseInt(target.value, 10);\n      const name = parseInt(target.name, 10);\n      const {\n        hints\n      } = this.state;\n      hints[value].order = name;\n      hints[name].order = value;\n      const i = hints[name];\n      hints[name] = hints[value];\n      hints[value] = i;\n      this.setState({\n        hints\n      });\n    };\n\n    this.addHint = () => {\n      const {\n        hints\n      } = this.state;\n      hints.push({\n        price: 0,\n        order: hints.length,\n        value: ''\n      });\n      this.setState({\n        hints\n      });\n    };\n\n    this.deleteHint = () => {\n      const {\n        hints\n      } = this.state;\n      let i = 0;\n      hints.forEach(hint => {\n        if (hint.order !== i) {\n          hints[i].order = i;\n        }\n\n        i += 1;\n      });\n      this.setState({\n        hints\n      });\n    };\n\n    this.openForm = () => {\n      if (this.props.enigma !== undefined) {\n        const {\n          id,\n          name,\n          description,\n          type,\n          score,\n          reward,\n          hints\n        } = this.props.enigma;\n        this.setState({\n          id,\n          name,\n          desc: description,\n          type,\n          points: score,\n          money: reward,\n          hints\n        });\n      }\n\n      this.setState({\n        show: true\n      });\n    };\n\n    this.state = {\n      show: false,\n      name: '',\n      type: 'LUNDI',\n      points: 0,\n      money: 0,\n      desc: '',\n      hints: [{\n        price: 0,\n        order: 0,\n        value: ''\n      }, {\n        price: 0,\n        order: 1,\n        value: ''\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      closeIcon: true,\n      open: this.state.show,\n      trigger: this.props.create ? /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Cr\\xE9er une \\xE9nigme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this),\n      onClose: () => this.setState({\n        show: false\n      }),\n      onOpen: () => this.openForm(),\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        content: \"Cr\\xE9ation d une \\xE9nigme \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                placeholder: \"Nom\",\n                name: \"name\",\n                value: this.state.name,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              label: \"Jour\",\n              control: \"select\",\n              name: \"type\",\n              value: this.state.type,\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LUNDI\",\n                children: \"Lundi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MARDI\",\n                children: \"Mardi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MERCREDI\",\n                children: \"Mercredi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"JEUDI\",\n                children: \"Jeudi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SEMAINE\",\n                children: \"Semaine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"number\",\n                name: \"points\",\n                value: this.state.points,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Argent gagn\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"number\",\n                name: \"money\",\n                value: this.state.money,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            label: \"Description de l \\xE9nigme\",\n            control: \"textarea\",\n            name: \"desc\",\n            value: this.state.desc,\n            onChange: this.handleChange,\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Indices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Prix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), this.state.hints.map((e, key) => /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"number\",\n                min: 0,\n                value: e.price,\n                name: `${e.order}price`,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                placeholder: \"L'indice\",\n                name: `${e.order}hint`,\n                value: e.value,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              control: \"select\",\n              value: e.order,\n              name: e.order,\n              onChange: this.updateOrder,\n              children: this.state.hints.map((f, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: f.order,\n                children: f.order + 1\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              fluid: true,\n              onClick: () => this.deleteHint(e.order),\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, \"form\" + key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"green\",\n            fluid: true,\n            onClick: this.addHint,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"plus square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          onClick: () => this.handleSubmit(),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), \"Cr\\xE9er l'\\xE9nigme\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nNewEditEnigma.propTypes = {\n  enigma: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    score: PropTypes.number,\n    reward: PropTypes.number,\n    hints: PropTypes.arrayOf(String)\n  }),\n  create: PropTypes.bool.isRequired\n};\nexport default NewEditEnigma;","map":{"version":3,"sources":["C:/Users/louis/Documents/doc/loisirs/interplateau ludique/site/front/src/components/enigma/NewEditEnigma.jsx"],"names":["React","Component","Button","Header","Icon","Modal","Form","axios","PropTypes","config","NewEditEnigma","constructor","props","handleSubmit","enigma","undefined","createEnigma","updateEnigma","name","type","points","money","desc","hints","state","method","url","back_Url","headers","Token","localStorage","getItem","data","then","status","setState","show","id","handleChange","event","target","value","isNotHint","Number","isNaN","parseInt","number","price","updateOrder","order","i","addHint","push","length","deleteHint","forEach","hint","openForm","description","score","reward","render","create","map","e","key","f","propTypes","shape","string","arrayOf","String","bool","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Button, Header, Icon, Modal, Form,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport config from '../../config.json';\r\n\r\nclass NewEditEnigma extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: false,\r\n      name: '',\r\n      type: 'LUNDI',\r\n      points: 0,\r\n      money: 0,\r\n      desc: '',\r\n      hints: [\r\n        { price: 0, order: 0, value: '' },\r\n        { price: 0, order: 1, value: '' },\r\n      ],\r\n    };\r\n  }\r\n\r\n    handleSubmit = () => {\r\n      if (this.props.enigma === undefined) {\r\n        this.createEnigma();\r\n      } else {\r\n        this.updateEnigma();\r\n      }\r\n    }\r\n\r\n    createEnigma = () => {\r\n      const {\r\n        name, type, points, money, desc, hints,\r\n      } = this.state;\r\n      axios({\r\n        method: 'post',\r\n        url: `${config.back_Url}/admin/enigma`,\r\n        headers: {\r\n          Token: localStorage.getItem('killerToken'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: {\r\n          name,\r\n          type,\r\n          points,\r\n          money,\r\n          desc,\r\n          hints,\r\n        },\r\n      }).then((data) => {\r\n        if (data.data.status === 201) {\r\n          this.setState({ show: false });\r\n        }\r\n      });\r\n    }\r\n\r\n    updateEnigma = () => {\r\n      const {\r\n        id, name, type, points, money, desc, hints,\r\n      } = this.state;\r\n      axios({\r\n        method: 'put',\r\n        url: `${config.back_Url}/admin/enigma/${id}`,\r\n        headers: {\r\n          Token: localStorage.getItem('killerToken'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: {\r\n          name,\r\n          type,\r\n          points,\r\n          money,\r\n          desc,\r\n          hints,\r\n        },\r\n      }).then((data) => {\r\n        if (data.data.status === 200) {\r\n          this.setState({ show: false });\r\n        }\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      const { name } = target;\r\n      const isNotHint = Number.isNaN(parseInt(name, 10));\r\n\r\n      if (isNotHint) {\r\n        this.setState({\r\n          [name]: value,\r\n        });\r\n      } else {\r\n        const number = parseInt(name, 10);\r\n        const { hints } = this.state;\r\n        if (name[1] === 'h') {\r\n          hints[number].value = value;\r\n        } else if (name[1] === 'p') {\r\n          hints[number].price = value;\r\n        }\r\n        this.setState({\r\n          hints,\r\n        });\r\n      }\r\n    }\r\n\r\n    updateOrder = (event) => {\r\n      const { target } = event;\r\n      const value = parseInt(target.value, 10);\r\n      const name = parseInt(target.name, 10);\r\n      const { hints } = this.state;\r\n      hints[value].order = name;\r\n\r\n      hints[name].order = value;\r\n\r\n      const i = hints[name];\r\n      hints[name] = hints[value];\r\n      hints[value] = i;\r\n\r\n      this.setState({\r\n        hints,\r\n      });\r\n    }\r\n\r\n    addHint = () => {\r\n      const { hints } = this.state;\r\n      hints.push({ price: 0, order: hints.length, value: '' });\r\n\r\n      this.setState({\r\n        hints,\r\n      });\r\n    }\r\n\r\n    deleteHint = () => {\r\n      const { hints } = this.state;\r\n      let i = 0;\r\n      hints.forEach((hint) => {\r\n        if (hint.order !== i) {\r\n          hints[i].order = i;\r\n        }\r\n        i += 1;\r\n      });\r\n      this.setState({\r\n        hints,\r\n      });\r\n    }\r\n\r\n    openForm = () => {\r\n      if (this.props.enigma !== undefined) {\r\n        const {\r\n          id, name, description, type, score, reward, hints,\r\n        } = this.props.enigma;\r\n        this.setState({\r\n          id,\r\n          name,\r\n          desc: description,\r\n          type,\r\n          points: score,\r\n          money: reward,\r\n          hints,\r\n        });\r\n      }\r\n      this.setState({ show: true });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Modal\r\n          closeIcon\r\n          open={this.state.show}\r\n          trigger={this.props.create\r\n            ? <Button>Créer une énigme</Button>\r\n            : (\r\n              <Button>\r\n                <Icon name=\"edit\" />\r\n              </Button>\r\n            )}\r\n          onClose={() => this.setState({ show: false })}\r\n          onOpen={() => this.openForm()}\r\n        >\r\n          <Header content=\"Création d une énigme \" />\r\n\r\n          <Modal.Content>\r\n            <Form>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Nom</label>\r\n                  <Form.Input placeholder=\"Nom\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                </Form.Field>\r\n                <Form.Field label=\"Jour\" control=\"select\" name=\"type\" value={this.state.type} onChange={this.handleChange}>\r\n                  <option value=\"LUNDI\">Lundi</option>\r\n                  <option value=\"MARDI\">Mardi</option>\r\n                  <option value=\"MERCREDI\">Mercredi</option>\r\n                  <option value=\"JEUDI\">Jeudi</option>\r\n                  <option value=\"SEMAINE\">Semaine</option>\r\n\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Points</label>\r\n                  <Form.Input type=\"number\" name=\"points\" value={this.state.points} onChange={this.handleChange} />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Argent gagné</label>\r\n                  <Form.Input type=\"number\" name=\"money\" value={this.state.money} onChange={this.handleChange} />\r\n                </Form.Field>\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Field label=\"Description de l énigme\" control=\"textarea\" name=\"desc\" value={this.state.desc} onChange={this.handleChange} rows=\"3\" />\r\n\r\n              <h2>Indices</h2>\r\n\r\n              <label>Prix</label>\r\n              {this.state.hints.map((e, key) => (\r\n                <Form.Group widths=\"equal\" key={\"form\" + key}>\r\n                  <Form.Field>\r\n                    <Form.Input type=\"number\" min={0} value={e.price} name={`${e.order}price`} onChange={this.handleChange}/>\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Form.Input placeholder=\"L'indice\" name={`${e.order}hint`} value={e.value} onChange={this.handleChange}/>\r\n                  </Form.Field>\r\n                  <Form.Field control=\"select\" value={e.order} name={e.order} onChange={this.updateOrder}>\r\n                    {this.state.hints.map((f, i) => (\r\n                      <option value={f.order} key = {i}>\r\n                        {f.order + 1}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Field>\r\n                  <Button color=\"red\" fluid onClick={() => this.deleteHint(e.order)}>\r\n                    <Icon name=\"close\" />\r\n                  </Button>\r\n                </Form.Group>\r\n              ))}\r\n              <Button color=\"green\" fluid onClick={this.addHint}>\r\n                <Icon name=\"plus square\" />\r\n              </Button>\r\n\r\n            </Form>\r\n\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" onClick={() => this.handleSubmit()}>\r\n              <Icon name=\"checkmark\" />\r\n              Créer l&apos;énigme\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      );\r\n    }\r\n}\r\n\r\nNewEditEnigma.propTypes = {\r\n  enigma: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    type: PropTypes.string,\r\n    score: PropTypes.number,\r\n    reward: PropTypes.number,\r\n    hints: PropTypes.arrayOf(String),\r\n  }),\r\n  create: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default NewEditEnigma;\r\n"]},"metadata":{},"sourceType":"module"}