{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\components\\\\team\\\\TeamGestion.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, Divider, Form, Portal, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport ImageUploader from '../utils/ImageUploader';\nimport config from '../../config.json';\nimport nameParser from '../../utils/nameParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TeamGestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = data => {\n      if ('picture' in data.object) {\n        this.props.updatePic(data.object.picture);\n      }\n\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleSubmitForm = () => {\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          name: this.state.name,\n          faction: this.state.faction,\n          score: this.state.score,\n          money: this.state.money\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          const up = data.data;\n          this.props.updateState(up.name, up.faction, up.money, up.score);\n        }\n      });\n    };\n\n    this.handleDelete = () => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          localStorage.setItem('teamId', null);\n          window.location.assign('/');\n        } else {// erreur\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        faction: this.props.team.faction,\n        name: this.props.team.name,\n        score: this.props.team.score,\n        money: this.props.team.money\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        target\n      } = event;\n      const {\n        value\n      } = target;\n      const {\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.makeFeedback = (variant, message) => {\n      this.setState({\n        message,\n        variant,\n        open: true\n      });\n      setTimeout(() => {\n        this.setState({\n          message: '',\n          variant: 'positive',\n          open: false\n        });\n      }, 5000);\n    };\n\n    this.handleSubmitChangeTeam = () => {\n      const {\n        name,\n        leader,\n        faction,\n        picture,\n        money,\n        score\n      } = this.state;\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          name,\n          leader,\n          faction,\n          picture,\n          money,\n          score\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          this.makeFeedback('positive', 'ok');\n          const up = data.data;\n          this.props.updateState(up);\n        } else {\n          this.makeFeedback('negative', 'erreur du cul');\n        }\n      });\n    };\n\n    this.handleChangeRadio = value => {\n      this.setState({\n        faction: value\n      });\n      this.makeFeedback('positive', value);\n    };\n\n    this.state = {\n      showModal: false,\n      faction: '',\n      name: '',\n      money: 0,\n      score: 0,\n      message: '',\n      variant: 'negative',\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      team\n    } = this.props;\n    const {\n      faction,\n      score,\n      name,\n      money\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TeamGestion\",\n      children: [/*#__PURE__*/_jsxDEV(Portal, {\n        open: open,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          style: {\n            left: '20px',\n            position: 'fixed',\n            bottom: '20px',\n            zIndex: 1000\n          },\n          negative: variant === 'negative',\n          positive: variant === 'positive',\n          children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n            children: variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        type: \"button\",\n        onClick: () => this.setState({\n          showModal: true\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), \"Uploader une photo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"red\",\n        type: \"button\",\n        onClick: this.handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), \"Supprimer l'\\xE9quipe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n        uploadUrl: `/teams/${team.id}`,\n        type: \"team\",\n        open: this.state.showModal,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), this.props.admin ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmitForm,\n          className: \"spacing\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: name,\n              name: \"name\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Argent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: money,\n              name: \"money\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: score,\n              name: \"score\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            inline: true,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Faction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n              label: nameParser('OUVRIER'),\n              value: \"OUVRIER\",\n              checked: faction === 'OUVRIER',\n              onClick: () => this.handleChangeRadio('OUVRIER')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n              label: nameParser('NOBLE'),\n              value: \"NOBLE\",\n              checked: faction === 'NOBLE',\n              onClick: () => this.handleChangeRadio('NOBLE')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n              label: nameParser('AMET'),\n              value: \"AMET\",\n              checked: faction === 'AMET',\n              onClick: () => this.handleChangeRadio('AMET')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: () => this.handleSubmitChangeTeam(),\n            children: \"Modifier l'\\xE9quipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nTeamGestion.propTypes = {\n  admin: PropTypes.bool.isRequired,\n  team: PropTypes.shape({\n    id: PropTypes.number,\n    picture: PropTypes.string,\n    name: PropTypes.string,\n    faction: PropTypes.oneOf(['NOBLE', 'OUVRIER', 'AMET']),\n    score: PropTypes.number,\n    money: PropTypes.number\n  }).isRequired,\n  updatePic: PropTypes.func.isRequired,\n  updateState: PropTypes.func.isRequired\n};\nTeamGestion.defaultProp = {\n  admin: false\n};\nexport default TeamGestion;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/components/team/TeamGestion.jsx"],"names":["React","Component","PropTypes","Button","Icon","Divider","Form","Portal","Message","axios","ImageUploader","config","nameParser","TeamGestion","constructor","props","handleSubmit","data","object","updatePic","picture","setState","showModal","handleSubmitForm","method","url","back_Url","team","id","headers","Token","localStorage","getItem","name","state","faction","score","money","then","status","up","updateState","handleDelete","setItem","window","location","assign","componentDidMount","handleChange","event","target","value","makeFeedback","variant","message","open","setTimeout","handleSubmitChangeTeam","leader","handleChangeRadio","render","left","position","bottom","zIndex","admin","propTypes","bool","isRequired","shape","number","string","oneOf","func","defaultProp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button, Icon, Divider, Form, Portal, Message,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport ImageUploader from '../utils/ImageUploader';\r\nimport config from '../../config.json';\r\nimport nameParser from '../../utils/nameParser';\r\n\r\nclass TeamGestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n      faction: '',\r\n      name: '',\r\n      money: 0,\r\n      score: 0,\r\n      message: '',\r\n      variant: 'negative',\r\n      open: false,\r\n    };\r\n  }\r\n\r\n    handleSubmit = (data) => {\r\n      if ('picture' in data.object) {\r\n        this.props.updatePic(data.object.picture);\r\n      }\r\n      this.setState({ showModal: false });\r\n    }\r\n\r\n    handleSubmitForm = () => {\r\n      axios({\r\n        method: 'put',\r\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          name: this.state.name,\r\n          faction: this.state.faction,\r\n          score: this.state.score,\r\n          money: this.state.money,\r\n        },\r\n      }).then((data) => {\r\n        if (data.status === 200) {\r\n          const up = data.data;\r\n          this.props.updateState(up.name, up.faction, up.money, up.score);\r\n        }\r\n      });\r\n    }\r\n\r\n    handleDelete = () => {\r\n      axios({\r\n        method: 'delete',\r\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n      }).then((data) => {\r\n        if (data.data.status === 200) {\r\n          localStorage.setItem('teamId', null);\r\n          window.location.assign('/');\r\n        } else {\r\n          // erreur\r\n        }\r\n      });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      this.setState({\r\n        faction: this.props.team.faction,\r\n        name: this.props.team.name,\r\n        score: this.props.team.score,\r\n        money: this.props.team.money,\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      const { name } = target;\r\n\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n      this.setState({\r\n        message,\r\n        variant,\r\n        open: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          message: '',\r\n          variant: 'positive',\r\n          open: false,\r\n        });\r\n      }, 5000);\r\n    }\r\n\r\n    handleSubmitChangeTeam = () => {\r\n      const {\r\n        name, leader, faction, picture, money, score,\r\n      } = this.state;\r\n\r\n      axios({\r\n        method: 'put',\r\n        url: `${config.back_Url}/teams/${this.props.team.id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          name,\r\n          leader,\r\n          faction,\r\n          picture,\r\n          money,\r\n          score,\r\n        },\r\n      }).then((data) => {\r\n        if (data.status === 200) {\r\n          this.makeFeedback(\r\n            'positive',\r\n            'ok',\r\n          );\r\n          const up = data.data;\r\n          this.props.updateState(up);\r\n        } else {\r\n          this.makeFeedback(\r\n            'negative',\r\n            'erreur du cul',\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n      handleChangeRadio = (value) => {\r\n        this.setState({ faction: value });\r\n        this.makeFeedback('positive',value)\r\n      }\r\n\r\n      render() {\r\n        const { team } = this.props;\r\n        const {\r\n          faction, score, name, money,\r\n        } = this.state;\r\n        return (\r\n          \r\n          <div className=\"TeamGestion\">\r\n            <Portal open={open}>\r\n            <Message\r\n              style={{\r\n                left: '20px',\r\n                position: 'fixed',\r\n                bottom: '20px',\r\n                zIndex: 1000,\r\n              }}\r\n              negative={variant === 'negative'}\r\n              positive={variant === 'positive'}\r\n            >\r\n              <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n              {message}\r\n            </Message>\r\n          </Portal>\r\n            <Divider />\r\n            <h2>Gestion</h2>\r\n            <Button size=\"small\" type=\"button\" onClick={() => this.setState({ showModal: true })}>\r\n              <Icon name=\"photo\" />\r\n              Uploader une photo\r\n            </Button>\r\n            <Button size=\"small\" color=\"red\" type=\"button\" onClick={this.handleDelete}>\r\n              <Icon name=\"trash\" />\r\n              Supprimer l&apos;équipe\r\n            </Button>\r\n            <ImageUploader uploadUrl={`/teams/${team.id}`} type=\"team\" open={this.state.showModal} handleSubmit={this.handleSubmit} />\r\n            {this.props.admin ? (\r\n              <div>\r\n                <Form onSubmit={this.handleSubmitForm} className=\"spacing\">\r\n                  <Form.Field>\r\n                    <label>Nom</label>\r\n                    <input value={name} name=\"name\" onChange={this.handleChange} />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Argent</label>\r\n                    <input value={money} name=\"money\" onChange={this.handleChange} />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Score</label>\r\n                    <input value={score} name=\"score\" onChange={this.handleChange} />\r\n                  </Form.Field>\r\n                  <Form.Group inline>\r\n                    <label>Faction</label>\r\n                    <Form.Radio\r\n                      label={nameParser('OUVRIER')}\r\n                      value=\"OUVRIER\"\r\n                      checked={faction === 'OUVRIER'}\r\n                      onClick={() => this.handleChangeRadio('OUVRIER')}\r\n                    />\r\n                    <Form.Radio\r\n                      label={nameParser('NOBLE')}\r\n                      value=\"NOBLE\"\r\n                      checked={faction === 'NOBLE'}\r\n                      onClick={() => this.handleChangeRadio('NOBLE')}\r\n                    />\r\n                    <Form.Radio\r\n                      label={nameParser('AMET')}\r\n                      value=\"AMET\"\r\n                      checked={faction === 'AMET'}\r\n                      onClick={() => this.handleChangeRadio('AMET')}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button type=\"submit\" onClick={() => this.handleSubmitChangeTeam()} >Modifier l&apos;équipe</Button>\r\n                </Form>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nTeamGestion.propTypes = {\r\n  admin: PropTypes.bool.isRequired,\r\n  team: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    picture: PropTypes.string,\r\n    name: PropTypes.string,\r\n    faction: PropTypes.oneOf(['NOBLE', 'OUVRIER', 'AMET']),\r\n    score: PropTypes.number,\r\n    money: PropTypes.number,\r\n  }).isRequired,\r\n  updatePic: PropTypes.func.isRequired,\r\n  updateState: PropTypes.func.isRequired,\r\n};\r\n\r\nTeamGestion.defaultProp = {\r\n  admin: false,\r\n};\r\n\r\nexport default TeamGestion;\r\n"]},"metadata":{},"sourceType":"module"}