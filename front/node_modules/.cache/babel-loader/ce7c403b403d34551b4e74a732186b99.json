{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Documents\\\\doc\\\\loisirs\\\\interplateau ludique\\\\site\\\\front\\\\src\\\\components\\\\message\\\\messageForm.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button, Portal, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport config from '../../config.json';\nimport nameParser from '../../utils/nameParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeFeedback = (variant, message) => {\n      this.setState({\n        message,\n        variant,\n        open: true\n      });\n      setTimeout(() => {\n        this.setState({\n          message: null,\n          variant: null,\n          open: false\n        });\n      }, 5000);\n    };\n\n    this.handleSubmit = () => {\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/messages/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          titre: this.state.titre,\n          texte: this.state.texte,\n          faction: this.state.faction\n        }\n      }).then(response => {\n        if (response.status === 201) {\n          this.setState({\n            titre: '',\n            texte: '',\n            faction: ''\n          });\n          this.makeFeedback('positive', 'Le message a été envoyé');\n        } else {\n          this.makeFeedback('negative', \"Le message n'a pas été envoyé\");\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        target\n      } = event;\n      const {\n        value\n      } = target;\n      const {\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeRadio = (e, {\n      value\n    }) => this.setState({\n      faction: value\n    });\n\n    this.state = {\n      titre: '',\n      texte: '',\n      faction: '',\n      message: null,\n      variant: null,\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      titre,\n      texte,\n      faction,\n      open,\n      variant,\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Portal, {\n        open: open,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          style: {\n            left: '20px',\n            position: 'fixed',\n            bottom: '20px',\n            zIndex: 1000\n          },\n          negative: variant === 'negative',\n          positive: variant === 'positive',\n          children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n            children: variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Titre\",\n        name: \"titre\",\n        value: titre,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        label: \"Texte\",\n        name: \"texte\",\n        value: texte,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Faction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n        label: nameParser('NOBLE'),\n        value: \"NOBLE\",\n        checked: faction === 'NOBLE',\n        onChange: this.handleChangeRadio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n        label: nameParser('OUVRIER'),\n        value: \"OUVRIER\",\n        checked: faction === 'OUVRIER',\n        onChange: this.handleChangeRadio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n        label: nameParser('AMET'),\n        value: \"AMET\",\n        checked: faction === 'AMET',\n        onChange: this.handleChangeRadio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n        label: \"Toutes les factions\",\n        value: \"ALL\",\n        checked: faction === 'ALL',\n        onChange: this.handleChangeRadio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MessageForm;","map":{"version":3,"sources":["C:/Users/louis/Documents/doc/loisirs/interplateau ludique/site/front/src/components/message/messageForm.jsx"],"names":["React","Component","Form","Button","Portal","Message","axios","config","nameParser","MessageForm","constructor","props","makeFeedback","variant","message","setState","open","setTimeout","handleSubmit","method","url","back_Url","headers","Token","localStorage","getItem","data","titre","state","texte","faction","then","response","status","handleChange","event","target","value","name","handleChangeRadio","e","render","left","position","bottom","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form, Button, Portal, Message,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport config from '../../config.json';\r\nimport nameParser from '../../utils/nameParser';\r\n\r\nclass MessageForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      titre: '',\r\n      texte: '',\r\n      faction: '',\r\n      message: null,\r\n      variant: null,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n    makeFeedback = (variant, message) => {\r\n      this.setState({\r\n        message,\r\n        variant,\r\n        open: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          message: null,\r\n          variant: null,\r\n          open: false,\r\n        });\r\n      }, 5000);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n      axios({\r\n        method: 'post',\r\n        url: `${config.back_Url}/messages/`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          titre: this.state.titre,\r\n          texte: this.state.texte,\r\n          faction: this.state.faction,\r\n        },\r\n      }).then((response) => {\r\n        if (response.status === 201) {\r\n          this.setState({ titre: '', texte: '', faction: '' });\r\n          this.makeFeedback(\r\n            'positive',\r\n            'Le message a été envoyé',\r\n          );\r\n        } else {\r\n          this.makeFeedback(\r\n            'negative',\r\n            \"Le message n'a pas été envoyé\",\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      const { name } = target;\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n\r\n    handleChangeRadio = (e, { value }) => this.setState({ faction: value })\r\n\r\n    render() {\r\n      const {\r\n        titre, texte, faction, open, variant, message,\r\n      } = this.state;\r\n      return (\r\n        <Form>\r\n          <Portal open={open}>\r\n            <Message\r\n              style={{\r\n                left: '20px',\r\n                position: 'fixed',\r\n                bottom: '20px',\r\n                zIndex: 1000,\r\n              }}\r\n              negative={variant === 'negative'}\r\n              positive={variant === 'positive'}\r\n            >\r\n              <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n              {message}\r\n            </Message>\r\n          </Portal>\r\n          <Form.Input label=\"Titre\" name=\"titre\" value={titre} onChange={this.handleChange} />\r\n          <Form.TextArea label=\"Texte\" name=\"texte\" value={texte} onChange={this.handleChange} />\r\n          <div>Faction</div>\r\n          { /* Check this later */ }\r\n          <Form.Radio\r\n            label={nameParser('NOBLE')}\r\n            value=\"NOBLE\"\r\n            checked={faction === 'NOBLE'}\r\n            onChange={this.handleChangeRadio}\r\n          />\r\n          <Form.Radio\r\n            label={nameParser('OUVRIER')}\r\n            value=\"OUVRIER\"\r\n            checked={faction === 'OUVRIER'}\r\n            onChange={this.handleChangeRadio}\r\n          />\r\n          <Form.Radio\r\n            label={nameParser('AMET')}\r\n            value=\"AMET\"\r\n            checked={faction === 'AMET'}\r\n            onChange={this.handleChangeRadio}\r\n          />\r\n          <Form.Radio\r\n            label=\"Toutes les factions\"\r\n            value=\"ALL\"\r\n            checked={faction === 'ALL'}\r\n            onChange={this.handleChangeRadio}\r\n          />\r\n          <Button type=\"submit\" onClick={this.handleSubmit}>Valider</Button>\r\n        </Form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default MessageForm;\r\n"]},"metadata":{},"sourceType":"module"}