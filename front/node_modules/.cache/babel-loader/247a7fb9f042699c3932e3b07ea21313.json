{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\team.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Loader, Divider, Card, Image, Grid, List, Icon, Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport nameParser from '../utils/nameParser';\nimport CardUser from '../components/user/CardUser';\nimport TeamGestion from '../components/team/TeamGestion';\nimport config from '../config.json';\nimport SearchUser from '../components/user/SearchUser';\nimport noTeamUrl from '../img/noteam.png';\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Team extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePic = url => {\n      const {\n        team\n      } = this.state;\n      team.picture = url;\n      this.setState({\n        team\n      });\n    };\n\n    this.handleDeleteUser = username => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          if (data.data.object === true) {\n            const list = [];\n            this.state.users.forEach(user => {\n              if (user.username !== username) {\n                list.push(user);\n              }\n            });\n            this.setState({\n              users: list\n            });\n          }\n        }\n      });\n    };\n\n    this.handleAddUser = data => {\n      if (data === null) {\n        this.setState({\n          open: false\n        });\n        return;\n      }\n\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username: data.username\n        }\n      }).then(data2 => {\n        if (data2.data.status === 201) {\n          if ('id' in data2.data.object) {\n            this.setState(ps => ({\n              users: [...ps.users, data2.data.object],\n              open: false\n            }));\n          } else {\n            this.setState({\n              open: false\n            });\n          }\n        }\n      });\n    };\n\n    this.Users = () => {\n      const {\n        team\n      } = this.state;\n      const admin = team.leader === localStorage.getItem('username');\n      return underscore.map(this.state.users, user => /*#__PURE__*/_jsxDEV(CardUser, {\n        user: user,\n        TeamLeader: admin,\n        handleDelete: username => this.handleDeleteUser(username)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this));\n    };\n\n    this.state = {\n      team: null,\n      users: [],\n      open: false,\n      targets: [],\n      kills: []\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: `${config.back_Url}/teams/${this.props.match.params.id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      }\n    }).then(data => {\n      if (data.data.status === 200) {\n        this.setState({\n          team: data.data.object\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data2 => {\n          if (data2.data.status === 200) {\n            this.setState({\n              users: data2.data.object\n            });\n\n            if (localStorage.getItem('teamId') === this.props.match.params.id) {\n              axios({\n                method: 'get',\n                url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n                headers: {\n                  Token: localStorage.getItem('killerToken')\n                }\n              }).then(data3 => {\n                if (data3.data.status === 200) {\n                  this.setState({\n                    targets: data3.data.object\n                  });\n                  underscore.map(this.state.users, user => {\n                    axios({\n                      method: 'get',\n                      url: `${config.back_Url}/kills/user/${user.id}`,\n                      headers: {\n                        Token: localStorage.getItem('killerToken')\n                      }\n                    }).then(data4 => {\n                      if (data4.data.status === 200) {\n                        this.setState(ps => ({\n                          kills: [...ps.kills, ...data4.data.object.kills]\n                        }));\n                      }\n                    });\n                  });\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.team === null) {\n      return /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"Loading\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          className: \"test\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this);\n    }\n\n    const {\n      team,\n      targets\n    } = this.state;\n    const admin = team.leader === localStorage.getItem('username');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n          as: \"div\",\n          minWidth: 701,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            divided: true,\n            columns: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 6,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  size: \"medium\",\n                  src: team.picture === null ? noTeamUrl : team.picture\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 10,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: team.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  size: \"big\",\n                  children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"king chess\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.leader\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"tag\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: nameParser(team.faction)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"trophy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), team.money !== undefined ? /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"money\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.money\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n          as: \"div\",\n          maxWidth: 700,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            divided: true,\n            columns: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 16,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: team.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  size: \"big\",\n                  children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"king chess\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.leader\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"tag\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.faction\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"trophy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), team.money !== undefined ? /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"money\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: team.money\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n              centered: true,\n              children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 14,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  size: \"large\",\n                  src: team.picture === null ? noTeamUrl : team.picture\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Membres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            minWidth: 1001,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 6,\n              className: \"centered\",\n              children: [this.Users(), admin ? /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => this.setState({\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    size: \"big\",\n                    color: \"black\",\n                    fitted: true,\n                    name: \"add user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 28\n              }, this) : null, /*#__PURE__*/_jsxDEV(SearchUser, {\n                search: \"team\",\n                open: this.state.open,\n                handleSubmit: this.handleAddUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            minWidth: 501,\n            maxWidth: 701,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 3,\n              className: \"centered\",\n              children: [this.Users(), admin ? /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => this.setState({\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    size: \"big\",\n                    color: \"black\",\n                    fitted: true,\n                    name: \"add user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 28\n              }, this) : null, /*#__PURE__*/_jsxDEV(SearchUser, {\n                search: \"team\",\n                open: this.state.open,\n                handleSubmit: this.handleAddUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            minWidth: 701,\n            maxWidth: 1001,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 4,\n              className: \"centered\",\n              children: [this.Users(), admin ? /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => this.setState({\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    size: \"big\",\n                    color: \"black\",\n                    fitted: true,\n                    name: \"add user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 28\n              }, this) : null, /*#__PURE__*/_jsxDEV(SearchUser, {\n                search: \"team\",\n                open: this.state.open,\n                handleSubmit: this.handleAddUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            maxWidth: 501,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 2,\n              className: \"centered\",\n              children: [this.Users(), admin ? /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => this.setState({\n                  open: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    size: \"big\",\n                    color: \"black\",\n                    fitted: true,\n                    name: \"add user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 28\n              }, this) : null, /*#__PURE__*/_jsxDEV(SearchUser, {\n                search: \"team\",\n                open: this.state.open,\n                handleSubmit: this.handleAddUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), targets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n            doubling: true,\n            centered: true,\n            itemsPerRow: 6,\n            className: \"centered\",\n            children: underscore.map(targets, target => {\n              const {\n                user\n              } = target;\n              return /*#__PURE__*/_jsxDEV(CardUser, {\n                user: user\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 31\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this) : null, admin ? /*#__PURE__*/_jsxDEV(TeamGestion, {\n          team: team,\n          updatePic: this.updatePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 22\n        }, this) : null, this.state.kills !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meurtres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            celled: true,\n            padded: true,\n            sortable: true,\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Victime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Heure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: this.state.kills.map(kill => /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `/users/${kill.deathUser.id}`,\n                      children: kill.deathUser.pseudo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.jour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.heure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nTeam.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    }).isRequired\n  }).isRequired\n};\nexport default Team;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/team.jsx"],"names":["React","Component","PropTypes","Segment","Loader","Divider","Card","Image","Grid","List","Icon","Table","axios","underscore","nameParser","CardUser","TeamGestion","config","SearchUser","noTeamUrl","Responsive","Team","constructor","props","updatePic","url","team","state","picture","setState","handleDeleteUser","username","method","back_Url","match","params","id","headers","Token","localStorage","getItem","data","then","status","object","list","users","forEach","user","push","handleAddUser","open","data2","ps","Users","admin","leader","map","targets","kills","componentDidMount","data3","data4","render","name","faction","score","money","undefined","length","target","kill","deathUser","pseudo","description","jour","heure","propTypes","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Segment, Loader, Divider, Card, Image, Grid, List, Icon, Table,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport nameParser from '../utils/nameParser';\r\nimport CardUser from '../components/user/CardUser';\r\nimport TeamGestion from '../components/team/TeamGestion';\r\nimport config from '../config.json';\r\nimport SearchUser from '../components/user/SearchUser';\r\nimport noTeamUrl from '../img/noteam.png';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nclass Team extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      team: null,\r\n      users: [],\r\n      open: false,\r\n      targets: [],\r\n      kills: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios({\r\n      method: 'get',\r\n      url: `${config.back_Url}/teams/${this.props.match.params.id}`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n    }).then((data) => {\r\n      if (data.data.status === 200) {\r\n        this.setState({\r\n          team: data.data.object,\r\n        });\r\n        axios({\r\n          method: 'get',\r\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n        }).then((data2) => {\r\n          if (data2.data.status === 200) {\r\n            this.setState({\r\n              users: data2.data.object,\r\n            });\r\n            if (localStorage.getItem('teamId') === this.props.match.params.id) {\r\n              axios({\r\n                method: 'get',\r\n                url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                headers: { Token: localStorage.getItem('killerToken') },\r\n              }).then((data3) => {\r\n                if (data3.data.status === 200) {\r\n                  this.setState({\r\n                    targets: data3.data.object,\r\n                  });\r\n                  underscore.map(this.state.users, (user) => {\r\n                    axios({\r\n                      method: 'get',\r\n                      url: `${config.back_Url}/kills/user/${user.id}`,\r\n                      headers: { Token: localStorage.getItem('killerToken') },\r\n                    }).then((data4) => {\r\n                      if (data4.data.status === 200) {\r\n                        this.setState((ps) => ({\r\n                          kills: [...ps.kills, ...data4.data.object.kills],\r\n                        }));\r\n                      }\r\n                    });\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n    updatePic = (url) => {\r\n      const { team } = this.state;\r\n      team.picture = url;\r\n      this.setState({ team });\r\n    }\r\n\r\n      handleDeleteUser = (username) => {\r\n        axios({\r\n          method: 'delete',\r\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n          data: {\r\n            username,\r\n          },\r\n        }).then((data) => {\r\n          if (data.data.status === 200) {\r\n            if (data.data.object === true) {\r\n              const list = [];\r\n              this.state.users.forEach((user) => {\r\n                if (user.username !== username) {\r\n                  list.push(user);\r\n                }\r\n              });\r\n              this.setState({ users: list });\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      handleAddUser = (data) => {\r\n        if (data === null) {\r\n          this.setState({\r\n            open: false,\r\n          });\r\n          return;\r\n        }\r\n        axios({\r\n          method: 'post',\r\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n          data: {\r\n            username: data.username,\r\n          },\r\n        }).then((data2) => {\r\n          if (data2.data.status === 201) {\r\n            if ('id' in data2.data.object) {\r\n              this.setState((ps) => ({\r\n                users: [\r\n                  ...ps.users,\r\n                  data2.data.object,\r\n                ],\r\n                open: false,\r\n              }));\r\n            } else {\r\n              this.setState({\r\n                open: false,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n    Users = () => {\r\n      const { team } = this.state;\r\n      const admin = team.leader === localStorage.getItem('username');\r\n      return underscore.map(this.state.users, (user) => (\r\n        <CardUser\r\n          user={user}\r\n          key={user.id}\r\n          TeamLeader={admin}\r\n          handleDelete={(username) => this.handleDeleteUser(username)}\r\n        />\r\n      ));\r\n    }\r\n\r\n    render() {\r\n      if (this.state.team === null) {\r\n        return (\r\n          <Segment className=\"Loading\">\r\n            <Loader active className=\"test\">Loading</Loader>\r\n          </Segment>\r\n        );\r\n      }\r\n\r\n      const { team, targets } = this.state;\r\n      const admin = team.leader === localStorage.getItem('username');\r\n      return (\r\n        <div className=\"bodyDesktop\">\r\n          <div className=\"spacer\" />\r\n          <Segment>\r\n            <div className=\"spacer\" />\r\n            <Responsive as=\"div\" minWidth={701}>\r\n              <Grid divided columns={2}>\r\n                <Grid.Row>\r\n                  <Grid.Column width={6}>\r\n                    <Image size=\"medium\" src={team.picture === null ? noTeamUrl : team.picture} />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={10}>\r\n                    <h1>{team.name}</h1>\r\n                    <List size=\"big\">\r\n                      <List.Item>\r\n                        <List.Icon name=\"king chess\" />\r\n                        <List.Content>{team.leader}</List.Content>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <List.Icon name=\"tag\" />\r\n                        <List.Content>{nameParser(team.faction)}</List.Content>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <List.Icon name=\"trophy\" />\r\n                        <List.Content>{team.score}</List.Content>\r\n                      </List.Item>\r\n                      {team.money !== undefined ? (\r\n                        <List.Item>\r\n                          <List.Icon name=\"money\" />\r\n                          <List.Content>{team.money}</List.Content>\r\n                        </List.Item>\r\n                      ) : null}\r\n\r\n                    </List>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Responsive>\r\n            <Responsive as=\"div\" maxWidth={700}>\r\n              <Grid divided columns={2}>\r\n                <Grid.Row>\r\n                  <Grid.Column width={16}>\r\n                    <h1>{team.name}</h1>\r\n                    <List size=\"big\">\r\n                      <List.Item>\r\n                        <List.Icon name=\"king chess\" />\r\n                        <List.Content>{team.leader}</List.Content>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <List.Icon name=\"tag\" />\r\n                        <List.Content>{team.faction}</List.Content>\r\n                      </List.Item>\r\n                      <List.Item>\r\n                        <List.Icon name=\"trophy\" />\r\n                        <List.Content>{team.score}</List.Content>\r\n                      </List.Item>\r\n                      {team.money !== undefined ? (\r\n                        <List.Item>\r\n                          <List.Icon name=\"money\" />\r\n                          <List.Content>{team.money}</List.Content>\r\n                        </List.Item>\r\n                      ) : null}\r\n\r\n                    </List>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row centered>\r\n                  <Grid.Column width={14}>\r\n                    <Image size=\"large\" src={team.picture === null ? noTeamUrl : team.picture} />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Responsive>\r\n            <Divider />\r\n            <h2>Membres</h2>\r\n            <>\r\n              <Responsive as=\"div\" minWidth={1001}>\r\n                <Card.Group centered itemsPerRow={6} className=\"centered\">\r\n                  {this.Users()}\r\n                  {admin ? <Card onClick={() => this.setState({ open: true })}><Card.Content textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted name=\"add user\" /></Card.Content></Card> : null}\r\n                  <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser} />\r\n                </Card.Group>\r\n              </Responsive>\r\n              <Responsive as=\"div\" minWidth={501} maxWidth={701}>\r\n                <Card.Group centered itemsPerRow={3} className=\"centered\">\r\n                  {this.Users()}\r\n                  {admin ? <Card onClick={() => this.setState({ open: true })}><Card.Content textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted name=\"add user\" /></Card.Content></Card> : null}\r\n                  <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser} />\r\n                </Card.Group>\r\n              </Responsive>\r\n              <Responsive as=\"div\" minWidth={701} maxWidth={1001}>\r\n                <Card.Group centered itemsPerRow={4} className=\"centered\">\r\n                  {this.Users()}\r\n                  {admin ? <Card onClick={() => this.setState({ open: true })}><Card.Content textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted name=\"add user\" /></Card.Content></Card> : null}\r\n                  <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser} />\r\n                </Card.Group>\r\n              </Responsive>\r\n              <Responsive as=\"div\" maxWidth={501}>\r\n                <Card.Group centered itemsPerRow={2} className=\"centered\">\r\n                  {this.Users()}\r\n                  {admin ? <Card onClick={() => this.setState({ open: true })}><Card.Content textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted name=\"add user\" /></Card.Content></Card> : null}\r\n                  <SearchUser search=\"team\" open={this.state.open} handleSubmit={this.handleAddUser} />\r\n                </Card.Group>\r\n              </Responsive>\r\n            </>\r\n\r\n            {targets.length > 0\r\n              ? (\r\n                <div>\r\n                  <Divider />\r\n                  <h2>Cibles</h2>\r\n                  <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                    {underscore.map(targets, (target) => {\r\n                      const { user } = target;\r\n                      return (<CardUser user={user} key={user.id} />);\r\n                    })}\r\n                  </Card.Group>\r\n                </div>\r\n              ) : null}\r\n            {admin ? <TeamGestion team={team} updatePic={this.updatePic} /> : null}\r\n            {this.state.kills !== []\r\n              ? (\r\n                <div>\r\n                  <Divider />\r\n                  <h2>Meurtres</h2>\r\n                  <Table celled padded sortable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                        <Table.HeaderCell>Description</Table.HeaderCell>\r\n                        <Table.HeaderCell>Date</Table.HeaderCell>\r\n                        <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {this.state.kills.map((kill) => (\r\n                        <Table.Row>\r\n                          <Table.Cell textAlign=\"center\">\r\n                            <h5><a href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a></h5>\r\n                          </Table.Cell>\r\n                          <Table.Cell>{kill.description}</Table.Cell>\r\n                          <Table.Cell>{kill.jour}</Table.Cell>\r\n                          <Table.Cell>{kill.heure}</Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </div>\r\n              ) : null}\r\n          </Segment>\r\n          <div className=\"spacer\" />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nTeam.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.number,\r\n    }).isRequired,\r\n\r\n  }).isRequired,\r\n};\r\n\r\nexport default Team;\r\n"]},"metadata":{},"sourceType":"module"}