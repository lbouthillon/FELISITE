{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\components\\\\user\\\\UserGestion.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Header, Button, Icon, Portal, Message, List } from 'semantic-ui-react';\nimport axios from 'axios';\nimport config from '../../config.json';\nimport ImageUploader from '../utils/ImageUploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserGestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeFeedback = (variant, message) => {\n      this.setState({\n        message,\n        variant,\n        open: true\n      });\n      setTimeout(() => {\n        this.setState({\n          message: '',\n          variant: 'positive',\n          open: false\n        });\n      }, 5000);\n    };\n\n    this.handleSubmitPicture = data => {\n      if ('picture' in data.object) {\n        this.props.updatePic(data.picture);\n      }\n\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        room,\n        pseudo,\n        admin,\n        alive,\n        afk,\n        afkScore,\n        phone\n      } = this.state;\n\n      if (/(^1([A-D]([1-4]0[1-9]|[2-4](1[0-9]|2[0-4]))|[ABD]11[0-7]|C11[0-5])$)|(^2([A-C][GD]|[DD])([0-3]|[GD])([12]|[GD])(0[0-6]|[1-4][12]|)$)|(^3(([GD][0-3]|C[1-3])(0[1-9]|10)|C00[1-8])$)|(^4([ABT]|C[A-E]|[D-H])[0-9]{3}$)|(^5A[0-9]{3}$)|(^6[A-Z][A-Z][0-9][0-9][0-9]$)/.test(room) === false) {\n        this.setState({\n          roomError: true\n        });\n      }\n\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${this.props.profile.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          pseudo,\n          room,\n          admin,\n          alive,\n          afk,\n          phone,\n          afkScore\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          this.makeFeedback('positive', 'ok');\n          const up = data.data;\n          this.setState({\n            roomError: false\n          });\n          this.props.updateState(up);\n        } else {\n          this.makeFeedback('negative', 'erreur du cul');\n        }\n      });\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${this.props.profile.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          pseudo,\n          room,\n          admin,\n          alive,\n          afk,\n          phone,\n          afkScore\n        }\n      }).then(data => {\n        if (data.status === 200) {\n          this.makeFeedback('positive', 'ok');\n          const up = data.data.object;\n          this.setState({\n            roomError: false\n          });\n          this.props.updateState(up);\n        } else {\n          this.makeFeedback('negative', 'erreur du cul');\n        }\n      });\n    };\n\n    this.handleDelete = () => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/users/${this.props.profile.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          window.location.assign('/');\n        } else {\n          this.makeFeedback('negative', 'erreur du cul');\n        }\n      });\n    };\n\n    this.handleCheckbox = prop => {\n      this.setState(prevState => ({\n        [prop]: !prevState[prop]\n      }));\n    };\n\n    this.handleChange = event => {\n      const {\n        target\n      } = event;\n      const {\n        value\n      } = target;\n      const {\n        name\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDrop = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        pseudo: this.props.profile.pseudo,\n        room: this.props.profile.room,\n        admin: this.props.profile.admin,\n        alive: this.props.profile.alive,\n        afk: this.props.profile.afk,\n        afkScore: this.props.profile.afkScore,\n        teamId: this.props.profile.teamId,\n        phone: this.props.profile.phone\n      });\n      this.getMySkills();\n    };\n\n    this.handleWeapon = (buy, primary) => {\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${this.props.profile.id}/weapon/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          buy,\n          primary\n        }\n      }).then(response => {\n        if (response.data.status === 200) {\n          this.props.updateState(response.data.object);\n          this.makeFeedback('positive', \"Tout s'est bien passé\");\n        } else {\n          this.makeFeedback('negative', response.data.message);\n        }\n      });\n    };\n\n    this.handleRezUser = () => {\n      const {\n        alive\n      } = this.state;\n\n      if (!alive) {\n        axios({\n          method: 'post',\n          url: `${config.back_Url}/users/${this.props.profile.id}/rez`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(response => {\n          if (response.data.status === 200) {\n            this.props.updateState(response.data.object);\n            this.makeFeedback('positive', 'ok');\n          } else {\n            this.makeFeedback('negative', 'erreur du cul');\n          }\n        });\n      }\n    };\n\n    this.handleChangeRadio = (e, {\n      value\n    }) => this.setState({\n      admin: value\n    });\n\n    this.giveTime = () => {\n      const message = (new Date().getUTCHours() + 2).toString() + ' ' + new Date().getUTCMinutes().toString() + ' ' + new Date().getUTCSeconds().toString();\n      this.makeFeedback('positive', message);\n    };\n\n    this.getMySkills = () => {\n      axios({\n        method: 'get',\n        url: `${config.back_Url}/users/${this.props.profile.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(response => {\n        if (response.status == 200) {\n          this.makeFeedback('positive', 'tout s est déroulé comme prévu');\n          this.setState({\n            skills: response.data.object.userSkills\n          });\n        } else {\n          this.makeFeedback('negative', 'erreur de merde');\n        }\n      });\n    };\n\n    this.getAllSkills = () => {\n      return [];\n    };\n\n    this.getMyAchievements = () => {\n      return ['achievement 1', 'achievement 2'];\n    };\n\n    this.state = {\n      pseudo: '',\n      room: '',\n      admin: null,\n      alive: false,\n      afk: false,\n      afkScore: 'null',\n      roomError: false,\n      showModal: false,\n      teamId: null,\n      message: '',\n      variant: 'negative',\n      open: false,\n      phone: '',\n      skills: []\n    };\n  }\n\n  render() {\n    const {\n      pseudo,\n      room,\n      alive,\n      admin,\n      afk,\n      afkScore,\n      roomError,\n      teamId,\n      message,\n      variant,\n      open,\n      phone,\n      skills\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Portal, {\n        open: open,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          style: {\n            left: '20px',\n            position: 'fixed',\n            bottom: '20px',\n            zIndex: 1000\n          },\n          negative: variant === 'negative',\n          positive: variant === 'positive',\n          children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n            children: variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: \"Mes Comp\\xE9tences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        size: \"big\",\n        children: skills.map(skill => {\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(List.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"Voir plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), skill.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.getAllSkills(),\n        positive: true,\n        children: \"Acheter une comp\\xE9tence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: \"Mes Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        size: \"big\",\n        children: this.getMyAchievements().map(achievement => {\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(List.Content, {\n              children: achievement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 78\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 66\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: \"Gestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: () => this.setState({\n          showModal: true\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), \"Uploader une photo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleDelete,\n        negative: true,\n        children: \"Supprimer le joueur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        positive: true,\n        type: \"button\",\n        onClick: this.handleRezUser,\n        disabled: alive || teamId === null,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"ambulance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), \"R\\xE9surrectionner le joueur\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.giveTime(),\n        positive: true,\n        children: \"Donner la date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n        uploadUrl: `/users/${this.props.profile.id}`,\n        type: \"user\",\n        open: this.state.showModal,\n        handleSubmit: this.handleSubmitPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Pseudo\",\n          name: \"pseudo\",\n          value: pseudo,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Room\",\n          name: \"room\",\n          value: room,\n          onChange: this.handleChange,\n          error: roomError ? {\n            content: \"Les règles s'appliquent aussi à toi petit con\"\n          } : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"phone\",\n          name: \"phone\",\n          value: phone,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n          label: \"Alive\",\n          name: \"alive\",\n          checked: alive,\n          onChange: () => this.handleCheckbox('alive')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n          label: \"Joueur\",\n          value: \"JOUEUR\",\n          checked: admin === 'JOUEUR',\n          onChange: this.handleChangeRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n          label: \"Admin\",\n          value: \"ADMIN\",\n          checked: admin === 'ADMIN',\n          onChange: this.handleChangeRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Radio, {\n          label: \"Super Admin\",\n          value: \"SUPERADMIN\",\n          checked: admin === 'SUPERADMIN',\n          onChange: this.handleChangeRadio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n          label: \"Afk\",\n          name: \"afk\",\n          checked: afk,\n          onChange: () => this.handleCheckbox('afk')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Afk score\",\n          name: \"afkScore\",\n          type: \"number\",\n          value: afkScore,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default UserGestion;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/components/user/UserGestion.jsx"],"names":["React","Component","PropTypes","Form","Header","Button","Icon","Portal","Message","List","axios","config","ImageUploader","UserGestion","constructor","props","makeFeedback","variant","message","setState","open","setTimeout","handleSubmitPicture","data","object","updatePic","picture","showModal","handleSubmit","room","pseudo","admin","alive","afk","afkScore","phone","state","test","roomError","method","url","back_Url","profile","id","headers","Token","localStorage","getItem","then","status","up","updateState","handleDelete","window","location","assign","handleCheckbox","prop","prevState","handleChange","event","target","value","name","handleChangeDrop","e","componentDidMount","teamId","getMySkills","handleWeapon","buy","primary","response","handleRezUser","handleChangeRadio","giveTime","Date","getUTCHours","toString","getUTCMinutes","getUTCSeconds","skills","userSkills","getAllSkills","getMyAchievements","render","left","position","bottom","zIndex","map","skill","achievement","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Form, Header, Button, Icon, Portal, Message, List, \r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport config from '../../config.json';\r\nimport ImageUploader from '../utils/ImageUploader';\r\n\r\nclass UserGestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pseudo: '',\r\n            room: '',\r\n            admin: null,\r\n            alive: false,\r\n            afk: false,\r\n            afkScore: 'null',\r\n            roomError: false,\r\n            showModal: false,\r\n            teamId: null,\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n            phone: '',\r\n            skills: [],\r\n        };\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: '',\r\n                variant: 'positive',\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    handleSubmitPicture = (data) => {\r\n        if ('picture' in data.object) {\r\n            this.props.updatePic(data.picture);\r\n        }\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {\r\n            room, pseudo, admin, alive, afk, afkScore, phone,\r\n        } = this.state;\r\n        if (/(^1([A-D]([1-4]0[1-9]|[2-4](1[0-9]|2[0-4]))|[ABD]11[0-7]|C11[0-5])$)|(^2([A-C][GD]|[DD])([0-3]|[GD])([12]|[GD])(0[0-6]|[1-4][12]|)$)|(^3(([GD][0-3]|C[1-3])(0[1-9]|10)|C00[1-8])$)|(^4([ABT]|C[A-E]|[D-H])[0-9]{3}$)|(^5A[0-9]{3}$)|(^6[A-Z][A-Z][0-9][0-9][0-9]$)/.test(room) === false) {\r\n            this.setState({roomError: true});\r\n        }\r\n\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                pseudo,\r\n                room,\r\n                admin,\r\n                alive,\r\n                afk,\r\n                phone,\r\n                afkScore,\r\n            },\r\n        }).then((data) => {\r\n            if (data.status === 200) {\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    'ok',\r\n                );\r\n                const up = data.data;\r\n                this.setState({\r\n                    roomError: false,\r\n                });\r\n                this.props.updateState(up);\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    'erreur du cul',\r\n                );\r\n            }\r\n        });\r\n\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                pseudo,\r\n                room,\r\n                admin,\r\n                alive,\r\n                afk,\r\n                phone,\r\n                afkScore,\r\n            },\r\n        }).then((data) => {\r\n            if (data.status === 200) {\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    'ok',\r\n                );\r\n                const up = data.data.object;\r\n                this.setState({\r\n                    roomError: false,\r\n                });\r\n                this.props.updateState(up);\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    'erreur du cul',\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    handleDelete = () => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                window.location.assign('/');\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    'erreur du cul',\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCheckbox = (prop) => {\r\n        this.setState((prevState) => ({\r\n            [prop]: !prevState[prop],\r\n        }));\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {target} = event;\r\n        const {value} = target;\r\n        const {name} = target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleChangeDrop = (e, {name, value}) => {\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            pseudo: this.props.profile.pseudo,\r\n            room: this.props.profile.room,\r\n            admin: this.props.profile.admin,\r\n            alive: this.props.profile.alive,\r\n            afk: this.props.profile.afk,\r\n            afkScore: this.props.profile.afkScore,\r\n            teamId: this.props.profile.teamId,\r\n            phone: this.props.profile.phone,\r\n        });\r\n        this.getMySkills();\r\n    }\r\n\r\n    handleWeapon = (buy, primary) => {\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}/weapon/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                buy,\r\n                primary,\r\n            },\r\n        }).then((response) => {\r\n            if (response.data.status === 200) {\r\n                this.props.updateState(response.data.object);\r\n                this.makeFeedback(\r\n                    'positive',\r\n                    \"Tout s'est bien passé\",\r\n                );\r\n            } else {\r\n                this.makeFeedback(\r\n                    'negative',\r\n                    response.data.message,\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    handleRezUser = () => {\r\n        const {alive} = this.state;\r\n\r\n        if (!alive) {\r\n            axios({\r\n                method: 'post',\r\n                url: `${config.back_Url}/users/${this.props.profile.id}/rez`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((response) => {\r\n                if (response.data.status === 200) {\r\n                    this.props.updateState(response.data.object);\r\n                    this.makeFeedback(\r\n                        'positive',\r\n                        'ok',\r\n                    );\r\n                } else {\r\n                    this.makeFeedback(\r\n                        'negative',\r\n                        'erreur du cul',\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeRadio = (e, {value}) => this.setState({admin: value})\r\n\r\n    giveTime = () => {\r\n        const message = ((new Date()).getUTCHours() + 2).toString() + ' ' + ((new Date()).getUTCMinutes()).toString() + ' ' + ((new Date()).getUTCSeconds()).toString();\r\n        this.makeFeedback('positive', message)\r\n    }\r\n\r\n    getMySkills = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/users/${this.props.profile.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((response) => {\r\n                if (response.status == 200) {\r\n                    this.makeFeedback('positive','tout s est déroulé comme prévu');\r\n                    this.setState({skills:response.data.object.userSkills});\r\n                }\r\n                else {\r\n                    this.makeFeedback('negative','erreur de merde')\r\n                }\r\n\r\n            });\r\n        \r\n        }\r\n\r\n    getAllSkills = () => {return [];}\r\n\r\n    getMyAchievements = () => {return ['achievement 1','achievement 2'];}\r\n\r\n    render() {\r\n      const {\r\n        pseudo, room, alive, admin, afk, afkScore, roomError, teamId, message, variant, open, phone, skills\r\n      } = this.state;\r\n      return (\r\n        <div>\r\n          <Portal open={open}>\r\n            <Message\r\n              style={{\r\n                left: '20px',\r\n                position: 'fixed',\r\n                bottom: '20px',\r\n                zIndex: 1000,\r\n              }}\r\n              negative={variant === 'negative'}\r\n              positive={variant === 'positive'}\r\n            >\r\n              <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n              {message}\r\n            </Message>\r\n          </Portal>\r\n          <Header as=\"h2\">Mes Compétences</Header>\r\n          <List size='big'>\r\n            {skills.map((skill)=>{return( \r\n            <List.Item> \r\n                <List.Content>\r\n                    <Button>\r\n                        Voir plus\r\n                    </Button>\r\n                    {skill.name}\r\n                </List.Content> \r\n                \r\n            </List.Item>)})\r\n\r\n              }\r\n          </List>\r\n          <Button onClick={() => this.getAllSkills()} positive>\r\n            Acheter une compétence\r\n          </Button>\r\n          <Header as=\"h2\">Mes Achievements</Header>\r\n          <List size='big'>\r\n            {this.getMyAchievements().map((achievement)=>{return <List.Item> <List.Content>{achievement}</List.Content> </List.Item>})\r\n\r\n            }\r\n          </List>\r\n          <Header as=\"h2\">Gestion</Header>\r\n          <Button type=\"button\" onClick={() => this.setState({ showModal: true })}>\r\n            <Icon name=\"photo\" />\r\n            Uploader une photo\r\n          </Button>\r\n          <Button onClick={this.handleDelete} negative>Supprimer le joueur</Button>\r\n          <Button positive type=\"button\" onClick={this.handleRezUser} disabled={alive || teamId === null}>\r\n            <Icon name=\"ambulance\" />\r\n            Résurrectionner le joueur\r\n          </Button>\r\n          <Button onClick={() => this.giveTime()} positive>\r\n            Donner la date\r\n          </Button>\r\n          <ImageUploader uploadUrl={`/users/${this.props.profile.id}`} type=\"user\" open={this.state.showModal} handleSubmit={this.handleSubmitPicture} />\r\n          <div className=\"spacing\" />\r\n\r\n                <Form>\r\n                    <Form.Input label=\"Pseudo\" name=\"pseudo\" value={pseudo} onChange={this.handleChange}/>\r\n                    <Form.Input label=\"Room\" name=\"room\" value={room} onChange={this.handleChange}\r\n                                error={roomError ? {content: \"Les règles s'appliquent aussi à toi petit con\"} : false}/>\r\n                    <Form.Input label=\"phone\" name=\"phone\" value={phone} onChange={this.handleChange}/>\r\n                    <Form.Checkbox label=\"Alive\" name=\"alive\" checked={alive}\r\n                                   onChange={() => this.handleCheckbox('alive')}/>\r\n                    <label>status</label>\r\n                    <Form.Radio\r\n                        label=\"Joueur\"\r\n                        value=\"JOUEUR\"\r\n                        checked={admin === 'JOUEUR'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Radio\r\n                        label=\"Admin\"\r\n                        value=\"ADMIN\"\r\n                        checked={admin === 'ADMIN'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Radio\r\n                        label=\"Super Admin\"\r\n                        value=\"SUPERADMIN\"\r\n                        checked={admin === 'SUPERADMIN'}\r\n                        onChange={this.handleChangeRadio}\r\n                    />\r\n                    <Form.Checkbox label=\"Afk\" name=\"afk\" checked={afk} onChange={() => this.handleCheckbox('afk')}/>\r\n                    <Form.Input label=\"Afk score\" name=\"afkScore\" type=\"number\" value={afkScore}\r\n                                onChange={this.handleChange}/>\r\n                    <Button type=\"submit\" onClick={this.handleSubmit}>Valider</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserGestion;\r\n"]},"metadata":{},"sourceType":"module"}