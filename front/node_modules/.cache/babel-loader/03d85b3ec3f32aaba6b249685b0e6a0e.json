{"ast":null,"code":"import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js'; // Safely create a real, live array from anything iterable.\n\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}","map":{"version":3,"sources":["C:/Users/louis/Documents/doc/loisirs/interplateau ludique/FELISITE/front/node_modules/underscore/modules/toArray.js"],"names":["isArray","slice","isString","isArrayLike","map","identity","values","reStrSymbol","toArray","obj","call","match"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,kEAAlB;AACA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,EAAP;AACV,MAAIT,OAAO,CAACS,GAAD,CAAX,EAAkB,OAAOR,KAAK,CAACS,IAAN,CAAWD,GAAX,CAAP;;AAClB,MAAIP,QAAQ,CAACO,GAAD,CAAZ,EAAmB;AACjB;AACA,WAAOA,GAAG,CAACE,KAAJ,CAAUJ,WAAV,CAAP;AACD;;AACD,MAAIJ,WAAW,CAACM,GAAD,CAAf,EAAsB,OAAOL,GAAG,CAACK,GAAD,EAAMJ,QAAN,CAAV;AACtB,SAAOC,MAAM,CAACG,GAAD,CAAb;AACD","sourcesContent":["import isArray from './isArray.js';\r\nimport { slice } from './_setup.js';\r\nimport isString from './isString.js';\r\nimport isArrayLike from './_isArrayLike.js';\r\nimport map from './map.js';\r\nimport identity from './identity.js';\r\nimport values from './values.js';\r\n\r\n// Safely create a real, live array from anything iterable.\r\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\r\nexport default function toArray(obj) {\r\n  if (!obj) return [];\r\n  if (isArray(obj)) return slice.call(obj);\r\n  if (isString(obj)) {\r\n    // Keep surrogate pair characters together.\r\n    return obj.match(reStrSymbol);\r\n  }\r\n  if (isArrayLike(obj)) return map(obj, identity);\r\n  return values(obj);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}