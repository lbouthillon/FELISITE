{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @returns {{}} A shallow copy of the prop object\n */\n\nvar getUnhandledProps = function getUnhandledProps(Component, props) {\n  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`\n  var _Component$handledPro = Component.handledProps,\n      handledProps = _Component$handledPro === void 0 ? [] : _Component$handledPro;\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (prop === 'childKey') return acc;\n    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];\n    return acc;\n  }, {});\n};\n\nvar _default = getUnhandledProps;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/louis/killer/front/node_modules/semantic-ui-react/dist/commonjs/lib/getUnhandledProps.js"],"names":["exports","__esModule","default","getUnhandledProps","Component","props","_Component$handledPro","handledProps","Object","keys","reduce","acc","prop","indexOf","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCC,KAAtC,EAA6C;AACnE;AACA,MAAIC,qBAAqB,GAAGF,SAAS,CAACG,YAAtC;AAAA,MACIA,YAAY,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAD3D;AAEA,SAAOE,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAA0B,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACpD,QAAIA,IAAI,KAAK,UAAb,EAAyB,OAAOD,GAAP;AACzB,QAAIJ,YAAY,CAACM,OAAb,CAAqBD,IAArB,MAA+B,CAAC,CAApC,EAAuCD,GAAG,CAACC,IAAD,CAAH,GAAYP,KAAK,CAACO,IAAD,CAAjB;AACvC,WAAOD,GAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD,CATD;;AAWA,IAAIG,QAAQ,GAAGX,iBAAf;AACAH,OAAO,CAACE,OAAR,GAAkBY,QAAlB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @returns {{}} A shallow copy of the prop object\n */\nvar getUnhandledProps = function getUnhandledProps(Component, props) {\n  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`\n  var _Component$handledPro = Component.handledProps,\n      handledProps = _Component$handledPro === void 0 ? [] : _Component$handledPro;\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (prop === 'childKey') return acc;\n    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];\n    return acc;\n  }, {});\n};\n\nvar _default = getUnhandledProps;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}