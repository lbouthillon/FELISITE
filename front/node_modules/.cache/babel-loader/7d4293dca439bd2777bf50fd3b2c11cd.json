{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\admin\\\\user.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Loader, Card, Image, Divider, List, Grid, Table, Portal, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport CardTeam from '../../components/team/CardTeam';\nimport UserGestion from '../../components/user/UserGestion';\nimport nouser from '../../img/nouser.png';\nimport dead from '../../img/dead.png';\nimport afk from '../../img/afk.png';\nimport config from '../../config.json';\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePic = url => {\n      const {\n        profile\n      } = this.state;\n      profile.picture = url;\n      this.setState({\n        profile\n      });\n      this.makeFeedback('positive', 'Image mise a jour');\n    };\n\n    this.updateState = state => {\n      const {\n        profile\n      } = this.state;\n      Array.from(state).forEach(elem => {\n        profile[elem] = state[elem];\n      });\n      this.setState({\n        profile\n      });\n    };\n\n    this.handleClose = () => this.setState({\n      open: false\n    });\n\n    this.handleOpen = () => this.setState({\n      open: true\n    });\n\n    this.makeFeedback = (variant, message) => {\n      this.setState({\n        message,\n        variant,\n        open: true\n      });\n      setTimeout(() => {\n        this.setState({\n          message: null,\n          variant: null,\n          open: false\n        });\n      }, 5000);\n    };\n\n    this.state = {\n      profile: null,\n      team: null,\n      kill: 0,\n      death: 0,\n      score: 0,\n      kills: [],\n      deaths: [],\n      targets: null,\n      hunters: [],\n      message: '',\n      variant: 'negative',\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: `${config.back_Url}/users/${this.props.match.params.id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      }\n    }).then(data => {\n      if (data.data.status === 200) {\n        this.setState({\n          profile: data.data.object\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/kills/user/${this.props.match.params.id}`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data2 => {\n          if (data2.data.status === 200) {\n            this.setState({\n              kills: data2.data.object.kills,\n              kill: data2.data.object.kills.length,\n              deaths: data2.data.object.deaths,\n              death: data2.data.object.deaths.length,\n              score: data2.data.object.score\n            });\n\n            if (this.state.profile.teamId != null) {\n              axios({\n                method: 'get',\n                url: `${config.back_Url}/teams/${this.state.profile.teamId}`,\n                headers: {\n                  Token: localStorage.getItem('killerToken')\n                }\n              }).then(data3 => {\n                if (data3.data.status === 200) {\n                  this.setState({\n                    team: data3.data.object\n                  });\n                  axios({\n                    method: 'get',\n                    url: `${config.back_Url}/targets/user/${this.props.match.params.id}`,\n                    headers: {\n                      Token: localStorage.getItem('killerToken')\n                    }\n                  }).then(data4 => {\n                    if (data4.data.status === 200) {\n                      this.setState({\n                        targets: data4.data.object\n                      });\n                      underscore.map(this.state.targets, target => {\n                        axios({\n                          method: 'get',\n                          url: `${config.back_Url}/teams/${target.teamId}`,\n                          headers: {\n                            Token: localStorage.getItem('killerToken')\n                          }\n                        }).then(data5 => {\n                          if (data5.data.status === 200) {\n                            this.setState(ps => ({\n                              hunters: [...ps.hunters, data5.data.object]\n                            }));\n                          }\n                        });\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      profile,\n      message,\n      variant,\n      open\n    } = this.state;\n\n    if (profile == null) {\n      return /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"Loading\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          className: \"test\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Portal, {\n          open: open,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            style: {\n              left: '20px',\n              position: 'fixed',\n              bottom: '20px',\n              zIndex: 1000\n            },\n            negative: variant === 'negative',\n            positive: variant === 'positive',\n            children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n              children: variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n          as: \"div\",\n          minWidth: 700,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            divided: true,\n            columns: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 6,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: 240,\n                    height: 300\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.picture === null ? nouser : profile.picture\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.alive ? null : dead\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.afk ? afk : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 10,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: profile.pseudo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [profile.firstName, ' ', profile.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  size: \"big\",\n                  children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: profile.room\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"trophy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"crosshairs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.kill\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"times\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.death\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n          as: \"div\",\n          maxWidth: 700,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            divided: true,\n            columns: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n              children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                width: 16,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: profile.pseudo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: 240,\n                    height: 300,\n                    margin: 'auto'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.picture === null ? nouser : profile.picture\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.alive ? null : dead\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Image, {\n                    wrapped: true,\n                    src: profile.afk ? afk : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [profile.firstName, ' ', profile.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  size: \"big\",\n                  children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"home\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: profile.room\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"trophy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"crosshairs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.kill\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"times\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.state.death\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      name: \"hand paper outline\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.getWeapon(profile.weaponPrimary)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                      flipped: \"horizontally\",\n                      name: \"hand paper outline\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                      children: this.getWeapon(profile.weaponSecondary)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), this.state.team !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\xC9quipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n            doubling: true,\n            itemsPerRow: 6,\n            centered: true,\n            className: \"centered\",\n            children: /*#__PURE__*/_jsxDEV(CardTeam, {\n              team: this.state.team,\n              admin: true\n            }, this.state.profile.teamId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }, this) : null, this.state.kills !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meurtres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            celled: true,\n            padded: true,\n            sortable: true,\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Victime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Heure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: this.state.kills.map(kill => {\n                if (kill.deathUser === null) {\n                  return null;\n                }\n\n                return /*#__PURE__*/_jsxDEV(Table.Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                    textAlign: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: `/users/${kill.deathUser.id}`,\n                        children: kill.deathUser.pseudo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                    children: kill.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                    children: kill.jour\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                    children: kill.heure\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }, this) : null, this.state.deaths !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"D\\xE9c\\xE8s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            celled: true,\n            padded: true,\n            sortable: true,\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Meurtrier\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Heure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: this.state.deaths.map(kill => /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `/users/${kill.killerUser.id}`,\n                      children: kill.killerUser.pseudo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.jour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.heure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserGestion, {\n          profile: profile,\n          updateState: this.updateState,\n          updatePic: this.updatePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), this.state.hunters !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chasseurs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n            doubling: true,\n            itemsPerRow: 6,\n            centered: true,\n            className: \"centered\",\n            children: underscore.map(this.state.hunters, hunter => /*#__PURE__*/_jsxDEV(CardTeam, {\n              team: hunter\n            }, hunter.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nUser.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};\nexport default User;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/admin/user.jsx"],"names":["React","Component","PropTypes","Segment","Loader","Card","Image","Divider","List","Grid","Table","Portal","Message","axios","underscore","CardTeam","UserGestion","nouser","dead","afk","config","Responsive","User","constructor","props","updatePic","url","profile","state","picture","setState","makeFeedback","updateState","Array","from","forEach","elem","handleClose","open","handleOpen","variant","message","setTimeout","team","kill","death","score","kills","deaths","targets","hunters","componentDidMount","method","back_Url","match","params","id","headers","Token","localStorage","getItem","then","data","status","object","data2","length","teamId","data3","data4","map","target","data5","ps","render","left","position","bottom","zIndex","width","height","alive","pseudo","firstName","lastName","room","margin","getWeapon","weaponPrimary","weaponSecondary","deathUser","description","jour","heure","killerUser","hunter","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Segment, Loader, Card, Image, Divider, List, Grid, Table, Portal, Message,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport CardTeam from '../../components/team/CardTeam';\r\nimport UserGestion from '../../components/user/UserGestion';\r\nimport nouser from '../../img/nouser.png';\r\nimport dead from '../../img/dead.png';\r\nimport afk from '../../img/afk.png';\r\nimport config from '../../config.json';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            profile: null,\r\n            team: null,\r\n            kill: 0,\r\n            death: 0,\r\n            score: 0,\r\n            kills: [],\r\n            deaths: [],\r\n            targets: null,\r\n            hunters: [],\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/users/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({profile: data.data.object});\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/kills/user/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data2) => {\r\n                    if (data2.data.status === 200) {\r\n                        this.setState({\r\n                            kills: data2.data.object.kills,\r\n                            kill: data2.data.object.kills.length,\r\n                            deaths: data2.data.object.deaths,\r\n                            death: data2.data.object.deaths.length,\r\n                            score: data2.data.object.score,\r\n                        });\r\n                        if (this.state.profile.teamId != null) {\r\n                            axios({\r\n                                method: 'get',\r\n                                url: `${config.back_Url}/teams/${this.state.profile.teamId}`,\r\n                                headers: {Token: localStorage.getItem('killerToken')},\r\n                            }).then((data3) => {\r\n                                if (data3.data.status === 200) {\r\n                                    this.setState({team: data3.data.object});\r\n                                    axios({\r\n                                        method: 'get',\r\n                                        url: `${config.back_Url}/targets/user/${this.props.match.params.id}`,\r\n                                        headers: {Token: localStorage.getItem('killerToken')},\r\n                                    }).then((data4) => {\r\n                                        if (data4.data.status === 200) {\r\n                                            this.setState({targets: data4.data.object});\r\n                                            underscore.map(this.state.targets, (target) => {\r\n                                                axios({\r\n                                                    method: 'get',\r\n                                                    url: `${config.back_Url}/teams/${target.teamId}`,\r\n                                                    headers: {Token: localStorage.getItem('killerToken')},\r\n                                                }).then((data5) => {\r\n                                                    if (data5.data.status === 200) {\r\n                                                        this.setState((ps) => ({\r\n                                                            hunters: [...ps.hunters, data5.data.object],\r\n                                                        }));\r\n                                                    }\r\n                                                });\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePic = (url) => {\r\n        const {profile} = this.state;\r\n        profile.picture = url;\r\n        this.setState({profile});\r\n        this.makeFeedback(\r\n            'positive',\r\n            'Image mise a jour',\r\n        );\r\n    }\r\n\r\n    updateState = (state) => {\r\n        const {profile} = this.state;\r\n        Array.from(state).forEach(elem => {\r\n            profile[elem] = state[elem];\r\n        })\r\n\r\n        this.setState({\r\n            profile,\r\n        });\r\n    }\r\n\r\n    // getWeapon = (weapon) => {\r\n    //     switch (weapon) {\r\n    //         case '5':\r\n    //             return \"Pas d'arme\";\r\n\r\n    //         case '4':\r\n    //             return 'A5 A4';\r\n\r\n    //         case '3':\r\n    //             return 'A4 A3';\r\n\r\n    //         case '2':\r\n    //             return 'A3 A2';\r\n\r\n    //         default:\r\n    //             return null;\r\n    //     }\r\n    // }\r\n\r\n    handleClose = () => this.setState({open: false})\r\n\r\n    handleOpen = () => this.setState({open: true})\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: null,\r\n                variant: null,\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            profile, message, variant, open,\r\n        } = this.state;\r\n\r\n        if (profile == null) {\r\n            return (\r\n                <Segment className=\"Loading\">\r\n                    <Loader active className=\"test\">Loading</Loader>\r\n                </Segment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <div className=\"spacer\"/>\r\n                <Segment>\r\n                    <Portal open={open}>\r\n                        <Message\r\n                            style={{\r\n                                left: '20px',\r\n                                position: 'fixed',\r\n                                bottom: '20px',\r\n                                zIndex: 1000,\r\n                            }}\r\n                            negative={variant === 'negative'}\r\n                            positive={variant === 'positive'}\r\n                        >\r\n                            <Message.Header>{variant === 'negative' ? 'Une erreur est survenue' : \"Tout s'est déroulé comme prévu\"}</Message.Header>\r\n                            {message}\r\n                        </Message>\r\n                    </Portal>\r\n                    <Responsive as=\"div\" minWidth={700}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={6}>\r\n                                    <div style={{width: 240, height: 300}}>\r\n                                        <Image wrapped src={profile.picture === null ? nouser : profile.picture}/>\r\n                                        <Image wrapped src={profile.alive ? null : dead}/>\r\n                                        <Image wrapped src={profile.afk ? afk : null}/>\r\n                                    </div>\r\n                                </Grid.Column>\r\n                                <Grid.Column width={10}>\r\n                                    <h1>{profile.pseudo}</h1>\r\n                                    <h2>\r\n                                        {profile.firstName}\r\n                                        {' '}\r\n                                        {profile.lastName}\r\n                                    </h2>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"home\"/>\r\n                                            <List.Content>{profile.room}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{this.state.score}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"crosshairs\"/>\r\n                                            <List.Content>{this.state.kill}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"times\"/>\r\n                                            <List.Content>{this.state.death}</List.Content>\r\n                                        </List.Item>\r\n                                        {/*<List.Item>*/}\r\n                                        {/*    <List.Content>*/}\r\n                                        {/*        XP :*/}\r\n                                        {/*        {0}*/}\r\n                                        {/*        (prix de la prochaine compétence:*/}\r\n                                        {/*        {Math.min(40, 10 * (enchants.length + 1))}*/}\r\n                                        {/*        )*/}\r\n                                        {/*    </List.Content>*/}\r\n                                        {/*</List.Item>*/}\r\n                                        {/* <List.Item>\r\n                                            <List.Icon name=\"hand paper outline\"/>\r\n                                            <List.Content>{this.getWeapon(profile.weaponPrimary)}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon flipped=\"horizontally\" name=\"hand paper outline\"/>\r\n                                            <List.Content>{this.getWeapon(profile.weaponSecondary)}</List.Content>\r\n                                        </List.Item> */}\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    <Responsive as=\"div\" maxWidth={700}>\r\n                        <Grid divided columns={2}>\r\n                            <Grid.Row>\r\n                                <Grid.Column width={16}>\r\n                                    <h1>{profile.pseudo}</h1>\r\n                                    <div style={{width: 240, height: 300, margin: 'auto'}}>\r\n                                        <Image wrapped src={profile.picture === null ? nouser : profile.picture}/>\r\n                                        <Image wrapped src={profile.alive ? null : dead}/>\r\n                                        <Image wrapped src={profile.afk ? afk : null}/>\r\n                                    </div>\r\n                                    <h2>\r\n                                        {profile.firstName}\r\n                                        {' '}\r\n                                        {profile.lastName}\r\n                                    </h2>\r\n                                    <List size=\"big\">\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"home\"/>\r\n                                            <List.Content>{profile.room}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"trophy\"/>\r\n                                            <List.Content>{this.state.score}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"crosshairs\"/>\r\n                                            <List.Content>{this.state.kill}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"times\"/>\r\n                                            <List.Content>{this.state.death}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon name=\"hand paper outline\"/>\r\n                                            <List.Content>{this.getWeapon(profile.weaponPrimary)}</List.Content>\r\n                                        </List.Item>\r\n                                        <List.Item>\r\n                                            <List.Icon flipped=\"horizontally\" name=\"hand paper outline\"/>\r\n                                            <List.Content>{this.getWeapon(profile.weaponSecondary)}</List.Content>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Responsive>\r\n                    {this.state.team !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Équipe</h2>\r\n                                <Card.Group doubling itemsPerRow={6} centered className=\"centered\">\r\n                                    <CardTeam team={this.state.team} admin key={this.state.profile.teamId}/>\r\n                                </Card.Group>\r\n                            </div>\r\n                        ) : null}\r\n                    {this.state.kills !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Meurtres</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.kills.map((kill) => {\r\n                                            if (kill.deathUser === null) {\r\n                                                return null;\r\n                                            }\r\n                                            return (\r\n                                                <Table.Row>\r\n                                                    <Table.Cell textAlign=\"center\">\r\n                                                        <h5><a\r\n                                                            href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a>\r\n                                                        </h5>\r\n                                                    </Table.Cell>\r\n                                                    <Table.Cell>{kill.description}</Table.Cell>\r\n                                                    <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                    <Table.Cell>{kill.heure}</Table.Cell>\r\n                                                </Table.Row>\r\n                                            );\r\n                                        })}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n                    {this.state.deaths !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Décès</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Meurtrier</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.deaths.map((kill) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5><a\r\n                                                        href={`/users/${kill.killerUser.id}`}>{kill.killerUser.pseudo}</a>\r\n                                                    </h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{kill.description}</Table.Cell>\r\n                                                <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                <Table.Cell>{kill.heure}</Table.Cell>\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n                    <Divider/>\r\n                    <UserGestion\r\n                        profile={profile}\r\n                        updateState={this.updateState}\r\n                        updatePic={this.updatePic}\r\n                    />\r\n                    {this.state.hunters !== null\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Chasseurs</h2>\r\n                                <Card.Group\r\n                                    doubling\r\n                                    itemsPerRow={6}\r\n                                    centered\r\n                                    className=\"centered\"\r\n                                >\r\n                                    {underscore.map(this.state.hunters, (hunter) => (\r\n                                        <CardTeam team={hunter} key={hunter.id}/>))}\r\n                                </Card.Group>\r\n                            </div>\r\n                        ) : null}\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            id: PropTypes.string,\r\n        }).isRequired,\r\n\r\n    }).isRequired,\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}