{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\admin\\\\team.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Loader, Divider, Card, Image, Grid, List, Icon, Button, Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport nameParser from '../../utils/nameParser';\nimport CardUser from '../../components/user/CardUser';\nimport TeamGestion from '../../components/team/TeamGestion';\nimport config from '../../config.json';\nimport SearchUser from '../../components/user/SearchUser';\nimport noTeamUrl from '../../img/noteam.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teams extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePic = url => {\n      const {\n        team\n      } = this.state;\n      team.picture = url;\n      this.setState({\n        team\n      });\n    };\n\n    this.updateState = (name, faction, money, score) => {\n      const {\n        team\n      } = this.state;\n      team.name = name;\n      team.faction = faction;\n      team.score = score;\n      team.money = money;\n      this.setState({\n        team\n      });\n    };\n\n    this.handleDeleteUser = username => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          if (data.data.object === true) {\n            const list = [];\n            this.state.users.map(user => {\n              if (user.username !== username) {\n                list.push(user);\n              }\n\n              return null;\n            });\n            this.setState({\n              users: list\n            });\n          }\n        }\n      });\n    };\n\n    this.handleAddUser = data => {\n      if (data === null) {\n        this.setState({\n          open: false\n        });\n        return;\n      }\n\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username: data.username\n        }\n      }).then(data2 => {\n        if (data2.data.status === 201) {\n          if ('id' in data2.data.object) {\n            this.setState(ps => ({\n              users: [...ps.users, data2.data.object],\n              open: false\n            }));\n          } else {\n            this.setState({\n              open: false\n            });\n          }\n        }\n      });\n    };\n\n    this.addTargets = () => {\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 201) {\n          axios({\n            method: 'get',\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n            headers: {\n              Token: localStorage.getItem('killerToken')\n            }\n          }).then(dataTarget => {\n            if (dataTarget.data.status === 200) {\n              this.setState({\n                targets: dataTarget.data.object\n              });\n            }\n          });\n        } else {\n          window.alert(\"C'est la merde. PrÃ©viens un admin\");\n        }\n      });\n    };\n\n    this.handleDeleteTarget = username => {\n      const {\n        targets\n      } = this.state;\n      let id = 0;\n      let i = 0;\n\n      for (i = 0; i < targets.length; i += 1) {\n        if (targets[i].user.username === username) {\n          id = targets[i].id;\n          break;\n        }\n      }\n\n      if (id !== 0) {\n        axios({\n          method: 'delete',\n          url: `${config.back_Url}/targets/${id}`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data => {\n          if (data.data.status === 200) {\n            targets.splice(i, 1);\n            this.setState({\n              targets\n            });\n          }\n        });\n      }\n    };\n\n    this.deleteTargets = () => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          this.setState({\n            targets: []\n          });\n        }\n      });\n    };\n\n    this.handleHint = hint => {\n      axios({\n        method: 'PUT',\n        url: `${config.back_Url}/hints/hintTeam/${hint.hintTeams[0].id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          bought: !hint.hintTeams[0].bought\n        }\n      }).then(response => {\n        if (response.data === null) {// do erro thingy thing\n        } else if (response.data.status === 400) {// do other error thing\n        } else {\n          const {\n            team\n          } = this.state;\n          const enigmas = [];\n          this.state.enigmas.forEach(eni => {\n            const enigma = eni;\n            enigma.hints = enigma.hints.map(hi => {\n              const hin = hi;\n\n              if (hin.id === hint.id) {\n                hin.hintTeams[0].bought = !hin.hintTeams[0].bought;\n              }\n\n              return hin;\n            });\n            enigmas.push(enigma);\n          });\n          team.money += response.data.object;\n          this.setState({\n            team,\n            enigmas\n          });\n        }\n      });\n    };\n\n    this.state = {\n      team: null,\n      users: [],\n      open: false,\n      targets: [],\n      kills: [],\n      enigmas: []\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: `${config.back_Url}/teams/${this.props.match.params.id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      }\n    }).then(data => {\n      if (data.data.status === 200) {\n        this.setState({\n          team: data.data.object\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data2 => {\n          if (data2.data.status === 200) {\n            this.setState({\n              users: data2.data.object\n            });\n            axios({\n              method: 'get',\n              url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n              headers: {\n                Token: localStorage.getItem('killerToken')\n              }\n            }).then(data3 => {\n              if (data3.data.status === 200) {\n                this.setState({\n                  targets: data3.data.object\n                });\n                underscore.map(this.state.users, user => {\n                  axios({\n                    method: 'get',\n                    url: `${config.back_Url}/kills/user/${user.id}`,\n                    headers: {\n                      Token: localStorage.getItem('killerToken')\n                    }\n                  }).then(data4 => {\n                    if (data4.data.status === 200) {\n                      this.setState(ps => ({\n                        kills: [...ps.kills, ...data4.data.object.kills]\n                      }));\n                    }\n                  });\n                });\n              }\n            });\n          }\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/enigmas/admin/team/${this.props.match.params.id}`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data5 => {\n          if (data5.data.status === 200) {\n            this.setState({\n              enigmas: data5.data.object\n            });\n          }\n        });\n      }\n    });\n  }\n\n  handleEnigma(enigma) {\n    axios({\n      method: 'put',\n      url: `${config.back_Url}/enigmas/enigmaTeam/${enigma.enigmaTeams[0].id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      },\n      data: {\n        resolved: !enigma.enigmaTeams[0].resolved\n      }\n    }).then(response => {\n      if (response.data === null) {// do erro thingy thing\n      } else if (response.data.status === 400) {// do other error thing\n      } else {\n        const {\n          team\n        } = this.state;\n        const enigmas = [];\n        this.state.enigmas.forEach(eni => {\n          const enig = eni;\n\n          if (enig.id === enigma.id) {\n            enig.enigmaTeams[0].resolved = !enig.enigmaTeams[0].resolved;\n          }\n\n          enigmas.push(enig);\n        });\n        team.money += response.data.object;\n        this.setState({\n          team,\n          enigmas\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      enigmas\n    } = this.state;\n\n    if (this.state.team === null) {\n      return /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"Loading\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          className: \"test\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this);\n    }\n\n    const {\n      team,\n      targets,\n      users\n    } = this.state;\n    const admin = true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          divided: true,\n          columns: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 4,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                size: \"medium\",\n                src: team.picture === null ? noTeamUrl : team.picture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 8,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: team.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                size: \"big\",\n                children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"king chess\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.leader\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"tag\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: nameParser(team.faction)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"trophy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.score\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"money\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.money\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Membres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: [underscore.map(users, user => /*#__PURE__*/_jsxDEV(CardUser, {\n            user: user,\n            admin: admin,\n            handleDelete: username => this.handleDeleteUser(username)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)), admin ? /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => this.setState({\n              open: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                size: \"big\",\n                color: \"black\",\n                fitted: true,\n                name: \"add user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 109\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 24\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchUser, {\n          search: \"team\",\n          open: this.state.open,\n          handleSubmit: this.handleAddUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), admin ? /*#__PURE__*/_jsxDEV(TeamGestion, {\n          team: team,\n          updatePic: this.updatePic,\n          updateState: this.updateState,\n          admin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: underscore.map(targets, target => {\n            const {\n              user\n            } = target;\n            return /*#__PURE__*/_jsxDEV(CardUser, {\n              user: user,\n              admin: admin,\n              handleDelete: username => this.handleDeleteTarget(username)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.addTargets,\n          disabled: targets.length >= 5,\n          children: \"Ajouter les cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.deleteTargets,\n          negative: true,\n          disabled: targets.length <= 0,\n          children: \"Retirer les cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), this.state.kills !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meurtres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            celled: true,\n            padded: true,\n            sortable: true,\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Victime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Heure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: this.state.kills.map(kill => /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `/users/${kill.deathUser.id}`,\n                      children: kill.deathUser.pseudo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.jour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.heure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xC9nigme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 2,\n          className: \"centered\",\n          children: enigmas.map(enigma => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              header: enigma.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: enigma.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spacing\",\n                children: enigma.enigmaTeams[0].resolved ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"red\",\n                    onClick: () => this.handleEnigma(enigma),\n                    children: \"Refuser\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"green\",\n                    onClick: () => this.handleEnigma(enigma),\n                    children: \"Accepter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this), enigma.hints.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                header: \"Indices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 23\n              }, this), enigma.hints.map(hint => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.handleHint(hint),\n                  color: hint.hintTeams[0].bought ? 'red' : 'green',\n                  children: hint.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 27\n                }, this), hint.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 21\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nTeams.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    }).isRequired\n  }).isRequired\n};\nexport default Teams;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/admin/team.jsx"],"names":["React","Component","PropTypes","Segment","Loader","Divider","Card","Image","Grid","List","Icon","Button","Table","axios","underscore","nameParser","CardUser","TeamGestion","config","SearchUser","noTeamUrl","Teams","constructor","props","updatePic","url","team","state","picture","setState","updateState","name","faction","money","score","handleDeleteUser","username","method","back_Url","match","params","id","headers","Token","localStorage","getItem","data","then","status","object","list","users","map","user","push","handleAddUser","open","data2","ps","addTargets","dataTarget","targets","window","alert","handleDeleteTarget","i","length","splice","deleteTargets","handleHint","hint","hintTeams","bought","response","enigmas","forEach","eni","enigma","hints","hi","hin","kills","componentDidMount","data3","data4","data5","handleEnigma","enigmaTeams","resolved","enig","render","admin","leader","target","kill","deathUser","pseudo","description","jour","heure","price","value","propTypes","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Segment, Loader, Divider, Card, Image, Grid, List, Icon, Button, Table,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport nameParser from '../../utils/nameParser';\r\nimport CardUser from '../../components/user/CardUser';\r\nimport TeamGestion from '../../components/team/TeamGestion';\r\nimport config from '../../config.json';\r\nimport SearchUser from '../../components/user/SearchUser';\r\nimport noTeamUrl from '../../img/noteam.png';\r\n\r\nclass Teams extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      team: null,\r\n      users: [],\r\n      open: false,\r\n      targets: [],\r\n      kills: [],\r\n      enigmas: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios({\r\n      method: 'get',\r\n      url: `${config.back_Url}/teams/${this.props.match.params.id}`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n    }).then((data) => {\r\n      if (data.data.status === 200) {\r\n        this.setState({\r\n          team: data.data.object,\r\n        });\r\n        axios({\r\n          method: 'get',\r\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n        }).then((data2) => {\r\n          if (data2.data.status === 200) {\r\n            this.setState({\r\n              users: data2.data.object,\r\n            });\r\n            axios({\r\n              method: 'get',\r\n              url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n              headers: { Token: localStorage.getItem('killerToken') },\r\n            }).then((data3) => {\r\n              if (data3.data.status === 200) {\r\n                this.setState({\r\n                  targets: data3.data.object,\r\n                });\r\n                underscore.map(this.state.users, (user) => {\r\n                  axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/kills/user/${user.id}`,\r\n                    headers: { Token: localStorage.getItem('killerToken') },\r\n                  }).then((data4) => {\r\n                    if (data4.data.status === 200) {\r\n                      this.setState((ps) => ({\r\n                        kills: [...ps.kills, ...data4.data.object.kills],\r\n                      }));\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n        axios({\r\n          method: 'get',\r\n          url: `${config.back_Url}/enigmas/admin/team/${this.props.match.params.id}`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n        }).then((data5) => {\r\n          if (data5.data.status === 200) {\r\n            this.setState({ enigmas: data5.data.object });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n    updatePic = (url) => {\r\n      const { team } = this.state;\r\n      team.picture = url;\r\n      this.setState({ team });\r\n    }\r\n\r\n    updateState = (name, faction, money, score) => {\r\n      const { team } = this.state;\r\n      team.name = name;\r\n      team.faction = faction;\r\n      team.score = score;\r\n      team.money = money;\r\n      this.setState({\r\n        team,\r\n      });\r\n    }\r\n\r\n    handleDeleteUser = (username) => {\r\n      axios({\r\n        method: 'delete',\r\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          username,\r\n        },\r\n      }).then((data) => {\r\n        if (data.data.status === 200) {\r\n          if (data.data.object === true) {\r\n            const list = [];\r\n            this.state.users.map((user) => {\r\n              if (user.username !== username) {\r\n                list.push(user);\r\n              }\r\n              return null;\r\n            });\r\n            this.setState({ users: list });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    handleAddUser = (data) => {\r\n      if (data === null) {\r\n        this.setState({\r\n          open: false,\r\n        });\r\n        return;\r\n      }\r\n      axios({\r\n        method: 'post',\r\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          username: data.username,\r\n        },\r\n      }).then((data2) => {\r\n        if (data2.data.status === 201) {\r\n          if ('id' in data2.data.object) {\r\n            this.setState((ps) => ({\r\n              users: [\r\n                ...ps.users,\r\n                data2.data.object,\r\n              ],\r\n              open: false,\r\n            }));\r\n          } else {\r\n            this.setState({\r\n              open: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    addTargets = () => {\r\n      axios({\r\n        method: 'post',\r\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n      }).then((data) => {\r\n        if (data.data.status === 201) {\r\n          axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n            headers: { Token: localStorage.getItem('killerToken') },\r\n          }).then((dataTarget) => {\r\n            if (dataTarget.data.status === 200) {\r\n              this.setState({\r\n                targets: dataTarget.data.object,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          window.alert(\"C'est la merde. PrÃ©viens un admin\");\r\n        }\r\n      });\r\n    }\r\n\r\n    handleDeleteTarget = (username) => {\r\n      const { targets } = this.state;\r\n\r\n      let id = 0;\r\n      let i = 0;\r\n      for (i = 0; i < targets.length; i += 1) {\r\n        if (targets[i].user.username === username) {\r\n          id = targets[i].id;\r\n          break;\r\n        }\r\n      }\r\n      if (id !== 0) {\r\n        axios({\r\n          method: 'delete',\r\n          url: `${config.back_Url}/targets/${id}`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n        }).then((data) => {\r\n          if (data.data.status === 200) {\r\n            targets.splice(i, 1);\r\n            this.setState({ targets });\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    deleteTargets = () => {\r\n      axios({\r\n        method: 'delete',\r\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n      }).then((data) => {\r\n        if (data.data.status === 200) {\r\n          this.setState({ targets: [] });\r\n        }\r\n      });\r\n    }\r\n\r\n    handleHint = (hint) => {\r\n      axios({\r\n        method: 'PUT',\r\n        url: `${config.back_Url}/hints/hintTeam/${hint.hintTeams[0].id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          bought: !hint.hintTeams[0].bought,\r\n        },\r\n      }).then((response) => {\r\n        if (response.data === null) {\r\n          // do erro thingy thing\r\n        } else if (response.data.status === 400) {\r\n          // do other error thing\r\n        } else {\r\n          const { team } = this.state;\r\n          const enigmas = [];\r\n          this.state.enigmas.forEach((eni) => {\r\n            const enigma = eni;\r\n            enigma.hints = enigma.hints.map((hi) => {\r\n              const hin = hi;\r\n              if (hin.id === hint.id) {\r\n                hin.hintTeams[0].bought = !hin.hintTeams[0].bought;\r\n              }\r\n              return hin;\r\n            });\r\n\r\n            enigmas.push(enigma);\r\n          });\r\n          team.money += response.data.object;\r\n          this.setState({\r\n            team,\r\n            enigmas,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    handleEnigma(enigma) {\r\n      axios({\r\n        method: 'put',\r\n        url: `${config.back_Url}/enigmas/enigmaTeam/${enigma.enigmaTeams[0].id}`,\r\n        headers: { Token: localStorage.getItem('killerToken') },\r\n        data: {\r\n          resolved: !enigma.enigmaTeams[0].resolved,\r\n        },\r\n      }).then((response) => {\r\n        if (response.data === null) {\r\n          // do erro thingy thing\r\n        } else if (response.data.status === 400) {\r\n          // do other error thing\r\n        } else {\r\n          const { team } = this.state;\r\n          const enigmas = [];\r\n          this.state.enigmas.forEach((eni) => {\r\n            const enig = eni;\r\n            if (enig.id === enigma.id) {\r\n              enig.enigmaTeams[0].resolved = !enig.enigmaTeams[0].resolved;\r\n            }\r\n            enigmas.push(enig);\r\n          });\r\n          team.money += response.data.object;\r\n          this.setState({\r\n            team,\r\n            enigmas,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { enigmas } = this.state;\r\n      if (this.state.team === null) {\r\n        return (\r\n          <Segment className=\"Loading\">\r\n            <Loader active className=\"test\">Loading</Loader>\r\n          </Segment>\r\n        );\r\n      }\r\n\r\n      const { team, targets, users } = this.state;\r\n      const admin = true;\r\n      return (\r\n        <div className=\"bodyDesktop\">\r\n          <div className=\"spacer\" />\r\n          <Segment>\r\n            <div className=\"spacer\" />\r\n            <Grid divided columns={2}>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Image size=\"medium\" src={team.picture === null ? noTeamUrl : team.picture} />\r\n                </Grid.Column>\r\n                <Grid.Column width={8}>\r\n                  <h1>{team.name}</h1>\r\n                  <List size=\"big\">\r\n                    <List.Item>\r\n                      <List.Icon name=\"king chess\" />\r\n                      <List.Content>{team.leader}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"tag\" />\r\n                      <List.Content>{nameParser(team.faction)}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"trophy\" />\r\n                      <List.Content>{team.score}</List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"money\" />\r\n                      <List.Content>{team.money}</List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n            <Divider />\r\n            <h2>Membres</h2>\r\n            <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n              {underscore.map(users, (user) => (\r\n                <CardUser\r\n                  user={user}\r\n                  key={user.id}\r\n                  admin={admin}\r\n                  handleDelete={(username) => this.handleDeleteUser(username)}\r\n                />\r\n              ))}\r\n              {admin ? <Card onClick={() => this.setState({ open: true })}><Card.Content textAlign=\"center\"><Icon size=\"big\" color=\"black\" fitted name=\"add user\" /></Card.Content></Card> : null}\r\n            </Card.Group>\r\n            <SearchUser\r\n              search=\"team\"\r\n              open={this.state.open}\r\n              handleSubmit={this.handleAddUser}\r\n            />\r\n            {admin ? (\r\n              <TeamGestion\r\n                team={team}\r\n                updatePic={this.updatePic}\r\n                updateState={this.updateState}\r\n                admin\r\n              />\r\n            ) : null}\r\n\r\n            <Divider />\r\n            <h2>Cibles</h2>\r\n            <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n              {underscore.map(targets, (target) => {\r\n                const { user } = target;\r\n                return (\r\n                  <CardUser\r\n                    user={user}\r\n                    key={user.id}\r\n                    admin={admin}\r\n                    handleDelete={(username) => this.handleDeleteTarget(username)}\r\n                  />\r\n                );\r\n              })}\r\n            </Card.Group>\r\n            <div className=\"spacing\" />\r\n            <Button\r\n              onClick={this.addTargets}\r\n              disabled={targets.length >= 5}\r\n            >\r\n              Ajouter les cibles\r\n            </Button>\r\n            <Button\r\n              onClick={this.deleteTargets}\r\n              negative\r\n              disabled={targets.length <= 0}\r\n            >\r\n              Retirer les cibles\r\n            </Button>\r\n            {this.state.kills !== []\r\n              ? (\r\n                <div>\r\n                  <Divider />\r\n                  <h2>Meurtres</h2>\r\n                  <Table celled padded sortable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                        <Table.HeaderCell>Description</Table.HeaderCell>\r\n                        <Table.HeaderCell>Date</Table.HeaderCell>\r\n                        <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {this.state.kills.map((kill) => (\r\n                        <Table.Row>\r\n                          <Table.Cell textAlign=\"center\">\r\n                            <h5><a href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a></h5>\r\n                          </Table.Cell>\r\n                          <Table.Cell>{kill.description}</Table.Cell>\r\n                          <Table.Cell>{kill.jour}</Table.Cell>\r\n                          <Table.Cell>{kill.heure}</Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </div>\r\n              ) : null}\r\n\r\n            <Divider />\r\n            <h2>Ãnigme</h2>\r\n            <Card.Group doubling centered itemsPerRow={2} className=\"centered\">\r\n              {enigmas.map((enigma) => (\r\n                <Card>\r\n                  <Card.Content header={enigma.name} />\r\n                  <Card.Content>\r\n                    <div>{enigma.description}</div>\r\n                    <div className=\"spacing\">\r\n                      {enigma.enigmaTeams[0].resolved\r\n                        ? <div><Button color=\"red\" onClick={() => this.handleEnigma(enigma)}>Refuser</Button></div>\r\n                        : <div><Button color=\"green\" onClick={() => this.handleEnigma(enigma)}>Accepter</Button></div>}\r\n                    </div>\r\n                  </Card.Content>\r\n                  {enigma.hints.length > 0 ? (\r\n                    <Card.Content>\r\n                      <Card.Content header=\"Indices\" />\r\n                      {enigma.hints.map((hint) => (\r\n                        <div>\r\n                          <Button onClick={() => this.handleHint(hint)} color={hint.hintTeams[0].bought ? 'red' : 'green'}>{hint.price}</Button>\r\n                          {hint.value}\r\n                        </div>\r\n                      ))}\r\n                    </Card.Content>\r\n                  ) : null}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n\r\n          </Segment>\r\n          <div className=\"spacer\" />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nTeams.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.number,\r\n    }).isRequired,\r\n\r\n  }).isRequired,\r\n};\r\n\r\nexport default Teams;\r\n"]},"metadata":{},"sourceType":"module"}