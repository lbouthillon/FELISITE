{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\killFeed.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Table, Card, Icon, Image } from 'semantic-ui-react';\nimport axios from 'axios';\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\nimport config from '../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = offset => {\n      axios({\n        method: 'get',\n        url: `${config.back_Url}/kills`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        params: {\n          offset\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          if (data.data.object.length === 10) {\n            this.setState(ps => ({\n              kills: [...ps.kills, ...data.data.object]\n            }));\n            this.fetchData(offset + 10);\n          } else {\n            this.setState(ps => ({\n              kills: [...ps.kills, ...data.data.object]\n            }));\n          }\n        }\n      });\n    };\n\n    this.fetchKillStreak = () => {\n      axios({\n        method: 'get',\n        url: `${config.back_Url}/kills/KillStreak`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          this.setState({\n            killStreak: data.data.object\n          });\n        }\n      });\n    };\n\n    this.fetchBestKiller = () => {\n      axios({\n        method: 'get',\n        url: `${config.back_Url}/kills/bestkiller`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          this.setState({\n            killer: data.data.object\n          });\n        }\n      });\n    };\n\n    this.Cards = () => {\n      const {\n        killer,\n        killStreak\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [killer !== null ? /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: killer.user.picture,\n            wrapped: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: killer.user.pseudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: `${killer.user.lastName} ${killer.user.firstName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"crosshairs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), killer.kills]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: \"Meilleur meurtrier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this) : null, killStreak !== null ? /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: killStreak.user.picture,\n            wrapped: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: killStreak.user.pseudo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: `${killStreak.user.lastName} ${killStreak.user.firstName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"crosshairs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), killStreak.kills]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: \"Meilleur meurtrier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true);\n    };\n\n    this.state = {\n      kills: [],\n      killer: null,\n      killStreak: null\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData(0);\n    this.fetchBestKiller();\n    this.fetchKillStreak();\n  }\n\n  render() {\n    const {\n      kills\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Meurtres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            ...Responsive.onlyComputer,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 6,\n              className: \"centered\",\n              children: this.Cards()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            ...Responsive.onlyTablet,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 4,\n              className: \"centered\",\n              children: this.Cards()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Responsive, {\n            as: \"div\",\n            ...Responsive.onlyMobile,\n            children: /*#__PURE__*/_jsxDEV(Card.Group, {\n              centered: true,\n              itemsPerRow: 2,\n              className: \"centered\",\n              children: this.Cards()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Table, {\n          celled: true,\n          padded: true,\n          sortable: true,\n          children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Victime\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Meurtrier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Heure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n            children: kills.map(kill => /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/users/${kill.deathUser.id}`,\n                    children: kill.deathUser.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/users/${kill.killerUser.id}`,\n                    children: kill.killerUser.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: kill.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: kill.jour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: kill.heure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/killFeed.jsx"],"names":["React","Component","Segment","Table","Card","Icon","Image","axios","Responsive","config","Users","constructor","props","fetchData","offset","method","url","back_Url","headers","Token","localStorage","getItem","params","then","data","status","object","length","setState","ps","kills","fetchKillStreak","killStreak","fetchBestKiller","killer","Cards","state","user","picture","pseudo","lastName","firstName","bind","componentDidMount","render","onlyComputer","onlyTablet","onlyMobile","map","kill","deathUser","id","killerUser","description","jour","heure"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Segment, Table, Card, Icon, Image,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport Responsive from \"semantic-ui-react/dist/commonjs/addons/Responsive\";\r\n\r\nimport config from '../config.json';\r\n\r\nexport default class Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kills: [],\r\n            killer: null,\r\n            killStreak: null,\r\n        };\r\n\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(0);\r\n        this.fetchBestKiller();\r\n        this.fetchKillStreak();\r\n    }\r\n\r\n    fetchData = (offset) => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/kills`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            params: {\r\n                offset,\r\n            },\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                if (data.data.object.length === 10) {\r\n                    this.setState((ps) => ({\r\n                        kills: [\r\n                            ...ps.kills,\r\n                            ...data.data.object,\r\n                        ],\r\n                    }));\r\n                    this.fetchData(offset + 10);\r\n                } else {\r\n                    this.setState((ps) => ({\r\n                        kills: [\r\n                            ...ps.kills,\r\n                            ...data.data.object,\r\n                        ],\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchKillStreak = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/kills/KillStreak`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({killStreak: data.data.object});\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchBestKiller = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/kills/bestkiller`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({killer: data.data.object});\r\n            }\r\n        });\r\n    }\r\n\r\n    Cards = () => {\r\n        const {killer, killStreak} = this.state;\r\n        return (\r\n            <>\r\n                {killer !== null\r\n                    ? (\r\n                        <Card>\r\n                            <Image src={killer.user.picture} wrapped/>\r\n                            <Card.Content>\r\n                                <Card.Header>{killer.user.pseudo}</Card.Header>\r\n                                <Card.Meta>{`${killer.user.lastName} ${killer.user.firstName}`}</Card.Meta>\r\n                                <Card.Description>\r\n                                    <Icon name=\"crosshairs\"/>\r\n                                    {killer.kills}\r\n                                </Card.Description>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                                <Card.Description>Meilleur meurtrier</Card.Description>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ) : null}\r\n                {killStreak !== null\r\n                    ? (\r\n                        <Card>\r\n                            <Image src={killStreak.user.picture} wrapped/>\r\n                            <Card.Content>\r\n                                <Card.Header>{killStreak.user.pseudo}</Card.Header>\r\n                                <Card.Meta>{`${killStreak.user.lastName} ${killStreak.user.firstName}`}</Card.Meta>\r\n                                <Card.Description>\r\n                                    <Icon name=\"crosshairs\"/>\r\n                                    {killStreak.kills}\r\n                                </Card.Description>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                                <Card.Description>Meilleur meurtrier</Card.Description>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ) : null}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {kills} = this.state;\r\n\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <Segment>\r\n                    <h2>Meurtres</h2>\r\n\r\n                    <>\r\n                        <Responsive as=\"div\" {...Responsive.onlyComputer}>\r\n                            <Card.Group centered itemsPerRow={6} className=\"centered\">\r\n                                {this.Cards()}\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                        <Responsive as=\"div\" {...Responsive.onlyTablet}>\r\n                            <Card.Group centered itemsPerRow={4} className=\"centered\">\r\n                                {this.Cards()}\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                        <Responsive as=\"div\" {...Responsive.onlyMobile}>\r\n                            <Card.Group centered itemsPerRow={2} className=\"centered\">\r\n                                {this.Cards()}\r\n                            </Card.Group>\r\n                        </Responsive>\r\n                    </>\r\n                    <Table celled padded sortable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                <Table.HeaderCell>Meurtrier</Table.HeaderCell>\r\n                                <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {kills.map((kill) => (\r\n                                <Table.Row>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5><a href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a></h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell textAlign=\"center\">\r\n                                        <h5><a href={`/users/${kill.killerUser.id}`}>{kill.killerUser.pseudo}</a></h5>\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>{kill.description}</Table.Cell>\r\n                                    <Table.Cell>{kill.jour}</Table.Cell>\r\n                                    <Table.Cell>{kill.heure}</Table.Cell>\r\n                                </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}