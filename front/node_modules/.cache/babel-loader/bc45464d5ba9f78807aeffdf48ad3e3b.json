{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\admin\\\\team.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Loader, Divider, Card, Image, Grid, List, Icon, Button, Table } from 'semantic-ui-react';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport nameParser from '../../utils/nameParser';\nimport CardUser from '../../components/user/CardUser';\nimport TeamGestion from '../../components/team/TeamGestion';\nimport config from '../../config.json';\nimport SearchUser from '../../components/user/SearchUser';\nimport noTeamUrl from '../../img/noteam.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teams extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeFeedback = (variant, message) => {\n      this.setState({\n        message,\n        variant,\n        open: true\n      });\n      setTimeout(() => {\n        this.setState({\n          message: '',\n          variant: 'positive',\n          open: false\n        });\n      }, 5000);\n    };\n\n    this.updatePic = url => {\n      const {\n        team\n      } = this.state;\n      team.picture = url;\n      this.setState({\n        team\n      });\n    };\n\n    this.updateState = state => {\n      const {\n        team\n      } = this.state;\n      if (state !== undefined) for (const [key, value] of Object.entries(state)) {\n        team[key] = value;\n      }\n      this.setState({\n        team: team\n      });\n    };\n\n    this.handleDeleteUser = username => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          if (data.data.object === true) {\n            const list = [];\n            this.state.users.map(user => {\n              if (user.username !== username) {\n                list.push(user);\n              }\n\n              return null;\n            });\n            this.setState({\n              users: list\n            });\n          }\n        }\n      });\n    };\n\n    this.handleAddUser = data => {\n      if (data === null) {\n        this.setState({\n          modalOpened: false\n        });\n        return;\n      }\n\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          username: data.username\n        }\n      }).then(data2 => {\n        if (data2.data.status === 201) {\n          if ('id' in data2.data.object) {\n            this.setState(ps => ({\n              users: [...ps.users, data2.data.object],\n              modalOpened: false\n            }));\n          } else {\n            this.setState({\n              modalOpened: false\n            });\n          }\n        } else {\n          this.setState({\n            modalOpened: false\n          });\n          this.makeFeedback(\"negative\", data2.data.message);\n        }\n      });\n    };\n\n    this.addTargets = () => {\n      axios({\n        method: 'post',\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 201) {\n          axios({\n            method: 'get',\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n            headers: {\n              Token: localStorage.getItem('killerToken')\n            }\n          }).then(dataTarget => {\n            if (dataTarget.data.status === 200) {\n              this.setState({\n                targets: dataTarget.data.object\n              });\n            }\n          });\n        } else {\n          window.alert(\"C'est la merde. PrÃ©viens un admin\");\n        }\n      });\n    };\n\n    this.handleDeleteTarget = username => {\n      const {\n        targets\n      } = this.state;\n      let id = 0;\n      let i = 0;\n\n      for (i = 0; i < targets.length; i += 1) {\n        if (targets[i].user.username === username) {\n          id = targets[i].id;\n          break;\n        }\n      }\n\n      if (id !== 0) {\n        axios({\n          method: 'delete',\n          url: `${config.back_Url}/targets/${id}`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data => {\n          if (data.data.status === 200) {\n            targets.splice(i, 1);\n            this.setState({\n              targets\n            });\n          }\n        });\n      }\n    };\n\n    this.deleteTargets = () => {\n      axios({\n        method: 'delete',\n        url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          this.setState({\n            targets: []\n          });\n        }\n      });\n    };\n\n    this.handleHint = hint => {\n      axios({\n        method: 'PUT',\n        url: `${config.back_Url}/hints/hintTeam/${hint.hintTeams[0].id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          bought: !hint.hintTeams[0].bought\n        }\n      }).then(response => {\n        if (response.data === null) {// do erro thingy thing\n        } else if (response.data.status === 400) {// do other error thing\n        } else {\n          const {\n            team\n          } = this.state;\n          const enigmas = [];\n          this.state.enigmas.forEach(eni => {\n            const enigma = eni;\n            enigma.hints = enigma.hints.map(hi => {\n              const hin = hi;\n\n              if (hin.id === hint.id) {\n                hin.hintTeams[0].bought = !hin.hintTeams[0].bought;\n              }\n\n              return hin;\n            });\n            enigmas.push(enigma);\n          });\n          team.money += response.data.object;\n          this.setState({\n            team,\n            enigmas\n          });\n        }\n      });\n    };\n\n    this.state = {\n      team: null,\n      users: [],\n      modalOpened: false,\n      targets: [],\n      kills: [],\n      enigmas: [],\n      message: '',\n      variant: 'negative',\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: `${config.back_Url}/teams/${this.props.match.params.id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      }\n    }).then(data => {\n      if (data.data.status === 200) {\n        this.setState({\n          team: data.data.object\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data2 => {\n          if (data2.data.status === 200) {\n            this.setState({\n              users: data2.data.object\n            });\n            axios({\n              method: 'get',\n              url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\n              headers: {\n                Token: localStorage.getItem('killerToken')\n              }\n            }).then(data3 => {\n              if (data3.data.status === 200) {\n                this.setState({\n                  targets: data3.data.object\n                });\n                underscore.map(this.state.users, user => {\n                  axios({\n                    method: 'get',\n                    url: `${config.back_Url}/kills/user/${user.id}`,\n                    headers: {\n                      Token: localStorage.getItem('killerToken')\n                    }\n                  }).then(data4 => {\n                    if (data4.data.status === 200) {\n                      this.setState(ps => ({\n                        kills: [...ps.kills, ...data4.data.object.kills]\n                      }));\n                    }\n                  });\n                });\n              }\n            });\n          }\n        });\n        axios({\n          method: 'get',\n          url: `${config.back_Url}/enigmas/admin/team/${this.props.match.params.id}`,\n          headers: {\n            Token: localStorage.getItem('killerToken')\n          }\n        }).then(data5 => {\n          if (data5.data.status === 200) {\n            this.setState({\n              enigmas: data5.data.object\n            });\n          }\n        });\n      }\n    });\n  }\n\n  handleEnigma(enigma) {\n    axios({\n      method: 'put',\n      url: `${config.back_Url}/enigmas/enigmaTeam/${enigma.enigmaTeams[0].id}`,\n      headers: {\n        Token: localStorage.getItem('killerToken')\n      },\n      data: {\n        resolved: !enigma.enigmaTeams[0].resolved\n      }\n    }).then(response => {\n      if (response.data === null) {// do erro thingy thing\n      } else if (response.data.status === 400) {// do other error thing\n      } else {\n        const {\n          team\n        } = this.state;\n        const enigmas = [];\n        this.state.enigmas.forEach(eni => {\n          const enig = eni;\n\n          if (enig.id === enigma.id) {\n            enig.enigmaTeams[0].resolved = !enig.enigmaTeams[0].resolved;\n          }\n\n          enigmas.push(enig);\n        });\n        team.money += response.data.object;\n        this.setState({\n          team,\n          enigmas\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      enigmas\n    } = this.state;\n\n    if (this.state.team === null) {\n      return /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"Loading\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          className: \"test\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this);\n    }\n\n    const {\n      team,\n      targets,\n      users\n    } = this.state;\n    const admin = true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          divided: true,\n          columns: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 4,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                size: \"medium\",\n                src: team.picture === null ? noTeamUrl : team.picture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 8,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: team.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                size: \"big\",\n                children: [/*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"king chess\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.leader\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"tag\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: nameParser(team.faction)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"trophy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.score\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n                    name: \"money\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                    children: team.money\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Membres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: [underscore.map(users, user => /*#__PURE__*/_jsxDEV(CardUser, {\n            user: user,\n            admin: admin,\n            handleDelete: username => this.handleDeleteUser(username)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this)), admin && users.length < 8 ? /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => this.setState({\n              modalOpened: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                size: \"big\",\n                color: \"black\",\n                fitted: true,\n                name: \"add user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 86\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchUser, {\n          search: \"team\",\n          open: this.state.modalOpened,\n          handleSubmit: this.handleAddUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), admin ? /*#__PURE__*/_jsxDEV(TeamGestion, {\n          team: team,\n          updatePic: this.updatePic,\n          updateState: this.updateState,\n          users: users,\n          admin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: underscore.map(targets, target => {\n            const {\n              user\n            } = target;\n            return /*#__PURE__*/_jsxDEV(CardUser, {\n              user: user,\n              admin: admin,\n              handleDelete: username => this.handleDeleteTarget(username),\n              wanted: target.prime\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.addTargets,\n          disabled: targets.length >= 5,\n          children: \"Ajouter les cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.deleteTargets,\n          negative: true,\n          disabled: targets.length <= 0,\n          children: \"Retirer les cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), this.state.kills !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Meurtres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            celled: true,\n            padded: true,\n            sortable: true,\n            children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n              children: /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Victime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                  children: \"Heure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n              children: this.state.kills.map(kill => /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `/users/${kill.deathUser.id}`,\n                      children: kill.deathUser.pseudo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.jour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: kill.heure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\xC9nigme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 2,\n          className: \"centered\",\n          children: enigmas.map(enigma => /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              header: enigma.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: enigma.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spacing\",\n                children: enigma.enigmaTeams[0].resolved ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"red\",\n                    onClick: () => this.handleEnigma(enigma),\n                    children: \"Refuser\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 47\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"green\",\n                    onClick: () => this.handleEnigma(enigma),\n                    children: \"Accepter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this), enigma.hints.length > 0 ? /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n                header: \"Indices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 41\n              }, this), enigma.hints.map(hint => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => this.handleHint(hint),\n                  color: hint.hintTeams[0].bought ? 'red' : 'green',\n                  children: hint.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 49\n                }, this), hint.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Teams;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/admin/team.jsx"],"names":["React","Component","PropTypes","Segment","Loader","Divider","Card","Image","Grid","List","Icon","Button","Table","axios","underscore","nameParser","CardUser","TeamGestion","config","SearchUser","noTeamUrl","Teams","constructor","props","makeFeedback","variant","message","setState","open","setTimeout","updatePic","url","team","state","picture","updateState","undefined","key","value","Object","entries","handleDeleteUser","username","method","back_Url","match","params","id","headers","Token","localStorage","getItem","data","then","status","object","list","users","map","user","push","handleAddUser","modalOpened","data2","ps","addTargets","dataTarget","targets","window","alert","handleDeleteTarget","i","length","splice","deleteTargets","handleHint","hint","hintTeams","bought","response","enigmas","forEach","eni","enigma","hints","hi","hin","money","kills","componentDidMount","data3","data4","data5","handleEnigma","enigmaTeams","resolved","enig","render","admin","name","leader","faction","score","target","prime","kill","deathUser","pseudo","description","jour","heure","price"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,OADJ,EACaC,MADb,EACqBC,OADrB,EAC8BC,IAD9B,EACoCC,KADpC,EAC2CC,IAD3C,EACiDC,IADjD,EACuDC,IADvD,EAC6DC,MAD7D,EACqEC,KADrE,QAEO,mBAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,MAAMC,KAAN,SAAoBpB,SAApB,CAA8B;AAC1BqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyEnBC,YAzEmB,GAyEJ,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACjC,WAAKC,QAAL,CAAc;AACVD,QAAAA,OADU;AAEVD,QAAAA,OAFU;AAGVG,QAAAA,IAAI,EAAE;AAHI,OAAd;AAKAC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKF,QAAL,CAAc;AACVD,UAAAA,OAAO,EAAE,EADC;AAEVD,UAAAA,OAAO,EAAE,UAFC;AAGVG,UAAAA,IAAI,EAAE;AAHI,SAAd;AAKH,OANS,EAMP,IANO,CAAV;AAOH,KAtFkB;;AAAA,SAwFnBE,SAxFmB,GAwFNC,GAAD,IAAS;AACjB,YAAM;AAACC,QAAAA;AAAD,UAAS,KAAKC,KAApB;AACAD,MAAAA,IAAI,CAACE,OAAL,GAAeH,GAAf;AACA,WAAKJ,QAAL,CAAc;AAACK,QAAAA;AAAD,OAAd;AACH,KA5FkB;;AAAA,SA8FnBG,WA9FmB,GA8FJF,KAAD,IAAW;AACrB,YAAM;AAACD,QAAAA;AAAD,UAAS,KAAKC,KAApB;AAEA,UAAIA,KAAK,KAAKG,SAAd,EAAyB,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeP,KAAf,CAA3B,EAAkD;AACvED,QAAAA,IAAI,CAACK,GAAD,CAAJ,GAAYC,KAAZ;AACH;AAED,WAAKX,QAAL,CAAc;AACVK,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGH,KAxGkB;;AAAA,SA0GnBS,gBA1GmB,GA0GCC,QAAD,IAAc;AAC7B7B,MAAAA,KAAK,CAAC;AACF8B,QAAAA,MAAM,EAAE,QADN;AAEFZ,QAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,UAAS,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,QAF1D;AAGFC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR,SAHP;AAIFC,QAAAA,IAAI,EAAE;AACFV,UAAAA;AADE;AAJJ,OAAD,CAAL,CAOGW,IAPH,CAOSD,IAAD,IAAU;AACd,YAAIA,IAAI,CAACA,IAAL,CAAUE,MAAV,KAAqB,GAAzB,EAA8B;AAC1B,cAAIF,IAAI,CAACA,IAAL,CAAUG,MAAV,KAAqB,IAAzB,EAA+B;AAC3B,kBAAMC,IAAI,GAAG,EAAb;AACA,iBAAKvB,KAAL,CAAWwB,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC3B,kBAAIA,IAAI,CAACjB,QAAL,KAAkBA,QAAtB,EAAgC;AAC5Bc,gBAAAA,IAAI,CAACI,IAAL,CAAUD,IAAV;AACH;;AACD,qBAAO,IAAP;AACH,aALD;AAMA,iBAAKhC,QAAL,CAAc;AAAC8B,cAAAA,KAAK,EAAED;AAAR,aAAd;AACH;AACJ;AACJ,OApBD;AAqBH,KAhIkB;;AAAA,SAkInBK,aAlImB,GAkIFT,IAAD,IAAU;AACtB,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,aAAKzB,QAAL,CAAc;AACVmC,UAAAA,WAAW,EAAE;AADH,SAAd;AAGA;AACH;;AACDjD,MAAAA,KAAK,CAAC;AACF8B,QAAAA,MAAM,EAAE,MADN;AAEFZ,QAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,UAAS,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,QAF1D;AAGFC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR,SAHP;AAIFC,QAAAA,IAAI,EAAE;AACFV,UAAAA,QAAQ,EAAEU,IAAI,CAACV;AADb;AAJJ,OAAD,CAAL,CAOGW,IAPH,CAOSU,KAAD,IAAW;AACf,YAAIA,KAAK,CAACX,IAAN,CAAWE,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,cAAI,QAAQS,KAAK,CAACX,IAAN,CAAWG,MAAvB,EAA+B;AAC3B,iBAAK5B,QAAL,CAAeqC,EAAD,KAAS;AACnBP,cAAAA,KAAK,EAAE,CACH,GAAGO,EAAE,CAACP,KADH,EAEHM,KAAK,CAACX,IAAN,CAAWG,MAFR,CADY;AAKnBO,cAAAA,WAAW,EAAE;AALM,aAAT,CAAd;AAOH,WARD,MAQO;AACH,iBAAKnC,QAAL,CAAc;AACVmC,cAAAA,WAAW,EAAE;AADH,aAAd;AAGH;AACJ,SAdD,MAcO;AACH,eAAKnC,QAAL,CAAc;AACVmC,YAAAA,WAAW,EAAE;AADH,WAAd;AAGA,eAAKtC,YAAL,CAAkB,UAAlB,EAA8BuC,KAAK,CAACX,IAAN,CAAW1B,OAAzC;AACH;AACJ,OA5BD;AA6BH,KAtKkB;;AAAA,SAwKnBuC,UAxKmB,GAwKN,MAAM;AACfpD,MAAAA,KAAK,CAAC;AACF8B,QAAAA,MAAM,EAAE,MADN;AAEFZ,QAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,iBAAgB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAFjE;AAGFC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,OAAD,CAAL,CAIGE,IAJH,CAISD,IAAD,IAAU;AACd,YAAIA,IAAI,CAACA,IAAL,CAAUE,MAAV,KAAqB,GAAzB,EAA8B;AAC1BzC,UAAAA,KAAK,CAAC;AACF8B,YAAAA,MAAM,EAAE,KADN;AAEFZ,YAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,iBAAgB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAFjE;AAGFC,YAAAA,OAAO,EAAE;AAACC,cAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,WAAD,CAAL,CAIGE,IAJH,CAISa,UAAD,IAAgB;AACpB,gBAAIA,UAAU,CAACd,IAAX,CAAgBE,MAAhB,KAA2B,GAA/B,EAAoC;AAChC,mBAAK3B,QAAL,CAAc;AACVwC,gBAAAA,OAAO,EAAED,UAAU,CAACd,IAAX,CAAgBG;AADf,eAAd;AAGH;AACJ,WAVD;AAWH,SAZD,MAYO;AACHa,UAAAA,MAAM,CAACC,KAAP,CAAa,mCAAb;AACH;AACJ,OApBD;AAqBH,KA9LkB;;AAAA,SAgMnBC,kBAhMmB,GAgMG5B,QAAD,IAAc;AAC/B,YAAM;AAACyB,QAAAA;AAAD,UAAY,KAAKlC,KAAvB;AAEA,UAAIc,EAAE,GAAG,CAAT;AACA,UAAIwB,CAAC,GAAG,CAAR;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,OAAO,CAACK,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EAAwC;AACpC,YAAIJ,OAAO,CAACI,CAAD,CAAP,CAAWZ,IAAX,CAAgBjB,QAAhB,KAA6BA,QAAjC,EAA2C;AACvCK,UAAAA,EAAE,GAAGoB,OAAO,CAACI,CAAD,CAAP,CAAWxB,EAAhB;AACA;AACH;AACJ;;AACD,UAAIA,EAAE,KAAK,CAAX,EAAc;AACVlC,QAAAA,KAAK,CAAC;AACF8B,UAAAA,MAAM,EAAE,QADN;AAEFZ,UAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,YAAWG,EAAG,EAFpC;AAGFC,UAAAA,OAAO,EAAE;AAACC,YAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,SAAD,CAAL,CAIGE,IAJH,CAISD,IAAD,IAAU;AACd,cAAIA,IAAI,CAACA,IAAL,CAAUE,MAAV,KAAqB,GAAzB,EAA8B;AAC1Ba,YAAAA,OAAO,CAACM,MAAR,CAAeF,CAAf,EAAkB,CAAlB;AACA,iBAAK5C,QAAL,CAAc;AAACwC,cAAAA;AAAD,aAAd;AACH;AACJ,SATD;AAUH;AACJ,KAvNkB;;AAAA,SAyNnBO,aAzNmB,GAyNH,MAAM;AAClB7D,MAAAA,KAAK,CAAC;AACF8B,QAAAA,MAAM,EAAE,QADN;AAEFZ,QAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,iBAAgB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAFjE;AAGFC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,OAAD,CAAL,CAIGE,IAJH,CAISD,IAAD,IAAU;AACd,YAAIA,IAAI,CAACA,IAAL,CAAUE,MAAV,KAAqB,GAAzB,EAA8B;AAC1B,eAAK3B,QAAL,CAAc;AAACwC,YAAAA,OAAO,EAAE;AAAV,WAAd;AACH;AACJ,OARD;AASH,KAnOkB;;AAAA,SAqOnBQ,UArOmB,GAqOLC,IAAD,IAAU;AACnB/D,MAAAA,KAAK,CAAC;AACF8B,QAAAA,MAAM,EAAE,KADN;AAEFZ,QAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,mBAAkBgC,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB9B,EAAG,EAF7D;AAGFC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR,SAHP;AAIFC,QAAAA,IAAI,EAAE;AACF0B,UAAAA,MAAM,EAAE,CAACF,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkBC;AADzB;AAJJ,OAAD,CAAL,CAOGzB,IAPH,CAOS0B,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAAC3B,IAAT,KAAkB,IAAtB,EAA4B,CACxB;AACH,SAFD,MAEO,IAAI2B,QAAQ,CAAC3B,IAAT,CAAcE,MAAd,KAAyB,GAA7B,EAAkC,CACrC;AACH,SAFM,MAEA;AACH,gBAAM;AAACtB,YAAAA;AAAD,cAAS,KAAKC,KAApB;AACA,gBAAM+C,OAAO,GAAG,EAAhB;AACA,eAAK/C,KAAL,CAAW+C,OAAX,CAAmBC,OAAnB,CAA4BC,GAAD,IAAS;AAChC,kBAAMC,MAAM,GAAGD,GAAf;AACAC,YAAAA,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACC,KAAP,CAAa1B,GAAb,CAAkB2B,EAAD,IAAQ;AACpC,oBAAMC,GAAG,GAAGD,EAAZ;;AACA,kBAAIC,GAAG,CAACvC,EAAJ,KAAW6B,IAAI,CAAC7B,EAApB,EAAwB;AACpBuC,gBAAAA,GAAG,CAACT,SAAJ,CAAc,CAAd,EAAiBC,MAAjB,GAA0B,CAACQ,GAAG,CAACT,SAAJ,CAAc,CAAd,EAAiBC,MAA5C;AACH;;AACD,qBAAOQ,GAAP;AACH,aANc,CAAf;AAQAN,YAAAA,OAAO,CAACpB,IAAR,CAAauB,MAAb;AACH,WAXD;AAYAnD,UAAAA,IAAI,CAACuD,KAAL,IAAcR,QAAQ,CAAC3B,IAAT,CAAcG,MAA5B;AACA,eAAK5B,QAAL,CAAc;AACVK,YAAAA,IADU;AAEVgD,YAAAA;AAFU,WAAd;AAIH;AACJ,OAjCD;AAkCH,KAxQkB;;AAEf,SAAK/C,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,IADG;AAETyB,MAAAA,KAAK,EAAE,EAFE;AAGTK,MAAAA,WAAW,EAAE,KAHJ;AAITK,MAAAA,OAAO,EAAE,EAJA;AAKTqB,MAAAA,KAAK,EAAE,EALE;AAMTR,MAAAA,OAAO,EAAE,EANA;AAOTtD,MAAAA,OAAO,EAAE,EAPA;AAQTD,MAAAA,OAAO,EAAE,UARA;AASTG,MAAAA,IAAI,EAAE;AATG,KAAb;AAWH;;AAED6D,EAAAA,iBAAiB,GAAG;AAChB5E,IAAAA,KAAK,CAAC;AACF8B,MAAAA,MAAM,EAAE,KADN;AAEFZ,MAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,UAAS,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAF1D;AAGFC,MAAAA,OAAO,EAAE;AAACC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,KAAD,CAAL,CAIGE,IAJH,CAISD,IAAD,IAAU;AACd,UAAIA,IAAI,CAACA,IAAL,CAAUE,MAAV,KAAqB,GAAzB,EAA8B;AAC1B,aAAK3B,QAAL,CAAc;AACVK,UAAAA,IAAI,EAAEoB,IAAI,CAACA,IAAL,CAAUG;AADN,SAAd;AAGA1C,QAAAA,KAAK,CAAC;AACF8B,UAAAA,MAAM,EAAE,KADN;AAEFZ,UAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,UAAS,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,SAF1D;AAGFC,UAAAA,OAAO,EAAE;AAACC,YAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,SAAD,CAAL,CAIGE,IAJH,CAISU,KAAD,IAAW;AACf,cAAIA,KAAK,CAACX,IAAN,CAAWE,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,iBAAK3B,QAAL,CAAc;AACV8B,cAAAA,KAAK,EAAEM,KAAK,CAACX,IAAN,CAAWG;AADR,aAAd;AAGA1C,YAAAA,KAAK,CAAC;AACF8B,cAAAA,MAAM,EAAE,KADN;AAEFZ,cAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,iBAAgB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAFjE;AAGFC,cAAAA,OAAO,EAAE;AAACC,gBAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,aAAD,CAAL,CAIGE,IAJH,CAISqC,KAAD,IAAW;AACf,kBAAIA,KAAK,CAACtC,IAAN,CAAWE,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,qBAAK3B,QAAL,CAAc;AACVwC,kBAAAA,OAAO,EAAEuB,KAAK,CAACtC,IAAN,CAAWG;AADV,iBAAd;AAGAzC,gBAAAA,UAAU,CAAC4C,GAAX,CAAe,KAAKzB,KAAL,CAAWwB,KAA1B,EAAkCE,IAAD,IAAU;AACvC9C,kBAAAA,KAAK,CAAC;AACF8B,oBAAAA,MAAM,EAAE,KADN;AAEFZ,oBAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,eAAce,IAAI,CAACZ,EAAG,EAF5C;AAGFC,oBAAAA,OAAO,EAAE;AAACC,sBAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,mBAAD,CAAL,CAIGE,IAJH,CAISsC,KAAD,IAAW;AACf,wBAAIA,KAAK,CAACvC,IAAN,CAAWE,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,2BAAK3B,QAAL,CAAeqC,EAAD,KAAS;AACnBwB,wBAAAA,KAAK,EAAE,CAAC,GAAGxB,EAAE,CAACwB,KAAP,EAAc,GAAGG,KAAK,CAACvC,IAAN,CAAWG,MAAX,CAAkBiC,KAAnC;AADY,uBAAT,CAAd;AAGH;AACJ,mBAVD;AAWH,iBAZD;AAaH;AACJ,aAvBD;AAwBH;AACJ,SAlCD;AAmCA3E,QAAAA,KAAK,CAAC;AACF8B,UAAAA,MAAM,EAAE,KADN;AAEFZ,UAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,uBAAsB,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAFvE;AAGFC,UAAAA,OAAO,EAAE;AAACC,YAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR;AAHP,SAAD,CAAL,CAIGE,IAJH,CAISuC,KAAD,IAAW;AACf,cAAIA,KAAK,CAACxC,IAAN,CAAWE,MAAX,KAAsB,GAA1B,EAA+B;AAC3B,iBAAK3B,QAAL,CAAc;AAACqD,cAAAA,OAAO,EAAEY,KAAK,CAACxC,IAAN,CAAWG;AAArB,aAAd;AACH;AACJ,SARD;AASH;AACJ,KAtDD;AAuDH;;AAmMDsC,EAAAA,YAAY,CAACV,MAAD,EAAS;AACjBtE,IAAAA,KAAK,CAAC;AACF8B,MAAAA,MAAM,EAAE,KADN;AAEFZ,MAAAA,GAAG,EAAG,GAAEb,MAAM,CAAC0B,QAAS,uBAAsBuC,MAAM,CAACW,WAAP,CAAmB,CAAnB,EAAsB/C,EAAG,EAFrE;AAGFC,MAAAA,OAAO,EAAE;AAACC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAR,OAHP;AAIFC,MAAAA,IAAI,EAAE;AACF2C,QAAAA,QAAQ,EAAE,CAACZ,MAAM,CAACW,WAAP,CAAmB,CAAnB,EAAsBC;AAD/B;AAJJ,KAAD,CAAL,CAOG1C,IAPH,CAOS0B,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAAC3B,IAAT,KAAkB,IAAtB,EAA4B,CACxB;AACH,OAFD,MAEO,IAAI2B,QAAQ,CAAC3B,IAAT,CAAcE,MAAd,KAAyB,GAA7B,EAAkC,CACrC;AACH,OAFM,MAEA;AACH,cAAM;AAACtB,UAAAA;AAAD,YAAS,KAAKC,KAApB;AACA,cAAM+C,OAAO,GAAG,EAAhB;AACA,aAAK/C,KAAL,CAAW+C,OAAX,CAAmBC,OAAnB,CAA4BC,GAAD,IAAS;AAChC,gBAAMc,IAAI,GAAGd,GAAb;;AACA,cAAIc,IAAI,CAACjD,EAAL,KAAYoC,MAAM,CAACpC,EAAvB,EAA2B;AACvBiD,YAAAA,IAAI,CAACF,WAAL,CAAiB,CAAjB,EAAoBC,QAApB,GAA+B,CAACC,IAAI,CAACF,WAAL,CAAiB,CAAjB,EAAoBC,QAApD;AACH;;AACDf,UAAAA,OAAO,CAACpB,IAAR,CAAaoC,IAAb;AACH,SAND;AAOAhE,QAAAA,IAAI,CAACuD,KAAL,IAAcR,QAAQ,CAAC3B,IAAT,CAAcG,MAA5B;AACA,aAAK5B,QAAL,CAAc;AACVK,UAAAA,IADU;AAEVgD,UAAAA;AAFU,SAAd;AAIH;AACJ,KA5BD;AA6BH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACjB,MAAAA;AAAD,QAAY,KAAK/C,KAAvB;;AACA,QAAI,KAAKA,KAAL,CAAWD,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,0BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,UAAM;AAACA,MAAAA,IAAD;AAAOmC,MAAAA,OAAP;AAAgBV,MAAAA;AAAhB,QAAyB,KAAKxB,KAApC;AACA,UAAMiE,KAAK,GAAG,IAAd;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,OAAO,MAAb;AAAc,UAAA,OAAO,EAAE,CAAvB;AAAA,iCACI,QAAC,IAAD,CAAM,GAAN;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,GAAG,EAAElE,IAAI,CAACE,OAAL,KAAiB,IAAjB,GAAwBd,SAAxB,GAAoCY,IAAI,CAACE;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,sCACI;AAAA,0BAAKF,IAAI,CAACmE;AAAV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,KAAX;AAAA,wCACI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,8BAAenE,IAAI,CAACoE;AAApB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,8BAAerF,UAAU,CAACiB,IAAI,CAACqE,OAAN;AAAzB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,8BAAerE,IAAI,CAACsE;AAApB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,8BAAetE,IAAI,CAACuD;AAApB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eA8BI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA9BJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,QAAQ,MAApB;AAAqB,UAAA,QAAQ,MAA7B;AAA8B,UAAA,WAAW,EAAE,CAA3C;AAA8C,UAAA,SAAS,EAAC,UAAxD;AAAA,qBACKzE,UAAU,CAAC4C,GAAX,CAAeD,KAAf,EAAuBE,IAAD,iBACnB,QAAC,QAAD;AACI,YAAA,IAAI,EAAEA,IADV;AAGI,YAAA,KAAK,EAAEuC,KAHX;AAII,YAAA,YAAY,EAAGxD,QAAD,IAAc,KAAKD,gBAAL,CAAsBC,QAAtB;AAJhC,aAESiB,IAAI,CAACZ,EAFd;AAAA;AAAA;AAAA;AAAA,kBADH,CADL,EASKmD,KAAK,IAAIzC,KAAK,CAACe,MAAN,GAAe,CAAxB,gBACG,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAM,KAAK7C,QAAL,CAAc;AAACmC,cAAAA,WAAW,EAAE;AAAd,aAAd,CAArB;AAAA,mCAAyD,QAAC,IAAD,CAAM,OAAN;AACrD,cAAA,SAAS,EAAC,QAD2C;AAAA,qCAClC,QAAC,IAAD;AACnB,gBAAA,IAAI,EAAC,KADc;AACR,gBAAA,KAAK,EAAC,OADE;AACM,gBAAA,MAAM,MADZ;AACa,gBAAA,IAAI,EAAC;AADlB;AAAA;AAAA;AAAA;AAAA;AADkC;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADH,GAGiF,IAZtF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eA8CI,QAAC,UAAD;AACI,UAAA,MAAM,EAAC,MADX;AAEI,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAW6B,WAFrB;AAGI,UAAA,YAAY,EAAE,KAAKD;AAHvB;AAAA;AAAA;AAAA;AAAA,gBA9CJ,EAmDKqC,KAAK,gBACF,QAAC,WAAD;AACI,UAAA,IAAI,EAAElE,IADV;AAEI,UAAA,SAAS,EAAE,KAAKF,SAFpB;AAGI,UAAA,WAAW,EAAE,KAAKK,WAHtB;AAII,UAAA,KAAK,EAAEsB,KAJX;AAKI,UAAA,KAAK;AALT;AAAA;AAAA;AAAA;AAAA,gBADE,GAQF,IA3DR,eA6DI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA7DJ,eA8DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9DJ,eA+DI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,QAAQ,MAApB;AAAqB,UAAA,QAAQ,MAA7B;AAA8B,UAAA,WAAW,EAAE,CAA3C;AAA8C,UAAA,SAAS,EAAC,UAAxD;AAAA,oBACK3C,UAAU,CAAC4C,GAAX,CAAeS,OAAf,EAAyBoC,MAAD,IAAY;AACjC,kBAAM;AAAC5C,cAAAA;AAAD,gBAAS4C,MAAf;AACA,gCACI,QAAC,QAAD;AACI,cAAA,IAAI,EAAE5C,IADV;AAGI,cAAA,KAAK,EAAEuC,KAHX;AAII,cAAA,YAAY,EAAGxD,QAAD,IAAc,KAAK4B,kBAAL,CAAwB5B,QAAxB,CAJhC;AAKI,cAAA,MAAM,EAAE6D,MAAM,CAACC;AALnB,eAES7C,IAAI,CAACZ,EAFd;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAXA;AADL;AAAA;AAAA;AAAA;AAAA,gBA/DJ,eA6EI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBA7EJ,eA8EI,QAAC,MAAD;AACI,UAAA,OAAO,EAAE,KAAKkB,UADlB;AAEI,UAAA,QAAQ,EAAEE,OAAO,CAACK,MAAR,IAAkB,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9EJ,eAoFI,QAAC,MAAD;AACI,UAAA,OAAO,EAAE,KAAKE,aADlB;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,QAAQ,EAAEP,OAAO,CAACK,MAAR,IAAkB,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApFJ,EA2FK,KAAKvC,KAAL,CAAWuD,KAAX,KAAqB,EAArB,gBAEO;AAAA,kCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,KAAD;AAAO,YAAA,MAAM,MAAb;AAAc,YAAA,MAAM,MAApB;AAAqB,YAAA,QAAQ,MAA7B;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAA,qCACI,QAAC,KAAD,CAAO,GAAP;AAAA,wCACI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,KAAD,CAAO,IAAP;AAAA,wBACK,KAAKvD,KAAL,CAAWuD,KAAX,CAAiB9B,GAAjB,CAAsB+C,IAAD,iBAClB,QAAC,KAAD,CAAO,GAAP;AAAA,wCACI,QAAC,KAAD,CAAO,IAAP;AAAY,kBAAA,SAAS,EAAC,QAAtB;AAAA,yCACI;AAAA,2CAAI;AACA,sBAAA,IAAI,EAAG,UAASA,IAAI,CAACC,SAAL,CAAe3D,EAAG,EADlC;AAAA,gCACsC0D,IAAI,CAACC,SAAL,CAAeC;AADrD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,KAAD,CAAO,IAAP;AAAA,4BAAaF,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI,QAAC,KAAD,CAAO,IAAP;AAAA,4BAAaH,IAAI,CAACI;AAAlB;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI,QAAC,KAAD,CAAO,IAAP;AAAA,4BAAaJ,IAAI,CAACK;AAAlB;AAAA;AAAA;AAAA;AAAA,wBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFP,GA8BO,IAzHZ,eA2HI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA3HJ,eA4HI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5HJ,eA6HI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,QAAQ,MAApB;AAAqB,UAAA,QAAQ,MAA7B;AAA8B,UAAA,WAAW,EAAE,CAA3C;AAA8C,UAAA,SAAS,EAAC,UAAxD;AAAA,oBACK9B,OAAO,CAACtB,GAAR,CAAayB,MAAD,iBACT,QAAC,IAAD;AAAA,oCACI,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,MAAM,EAAEA,MAAM,CAACgB;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAA,sCACI;AAAA,0BAAMhB,MAAM,CAACyB;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BACKzB,MAAM,CAACW,WAAP,CAAmB,CAAnB,EAAsBC,QAAtB,gBACK;AAAA,yCAAK,QAAC,MAAD;AAAQ,oBAAA,KAAK,EAAC,KAAd;AACQ,oBAAA,OAAO,EAAE,MAAM,KAAKF,YAAL,CAAkBV,MAAlB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,wBADL,gBAIK;AAAA,yCAAK,QAAC,MAAD;AAAQ,oBAAA,KAAK,EAAC,OAAd;AACQ,oBAAA,OAAO,EAAE,MAAM,KAAKU,YAAL,CAAkBV,MAAlB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAcKA,MAAM,CAACC,KAAP,CAAaZ,MAAb,GAAsB,CAAtB,gBACG,QAAC,IAAD,CAAM,OAAN;AAAA,sCACI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,MAAM,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKW,MAAM,CAACC,KAAP,CAAa1B,GAAb,CAAkBkB,IAAD,iBACd;AAAA,wCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAAvB;AACQ,kBAAA,KAAK,EAAEA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkBC,MAAlB,GAA2B,KAA3B,GAAmC,OADlD;AAAA,4BAC4DF,IAAI,CAACmC;AADjE;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGKnC,IAAI,CAACtC,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,GAWG,IAzBR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBA7HJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAgKI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAhKJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoKH;;AA3dyB;;AA8d9B,eAAejB,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Segment, Loader, Divider, Card, Image, Grid, List, Icon, Button, Table,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\nimport nameParser from '../../utils/nameParser';\r\nimport CardUser from '../../components/user/CardUser';\r\nimport TeamGestion from '../../components/team/TeamGestion';\r\nimport config from '../../config.json';\r\nimport SearchUser from '../../components/user/SearchUser';\r\nimport noTeamUrl from '../../img/noteam.png';\r\n\r\nclass Teams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            team: null,\r\n            users: [],\r\n            modalOpened: false,\r\n            targets: [],\r\n            kills: [],\r\n            enigmas: [],\r\n            message: '',\r\n            variant: 'negative',\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({\r\n                    team: data.data.object,\r\n                });\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/teams/${this.props.match.params.id}/users/`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data2) => {\r\n                    if (data2.data.status === 200) {\r\n                        this.setState({\r\n                            users: data2.data.object,\r\n                        });\r\n                        axios({\r\n                            method: 'get',\r\n                            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                            headers: {Token: localStorage.getItem('killerToken')},\r\n                        }).then((data3) => {\r\n                            if (data3.data.status === 200) {\r\n                                this.setState({\r\n                                    targets: data3.data.object,\r\n                                });\r\n                                underscore.map(this.state.users, (user) => {\r\n                                    axios({\r\n                                        method: 'get',\r\n                                        url: `${config.back_Url}/kills/user/${user.id}`,\r\n                                        headers: {Token: localStorage.getItem('killerToken')},\r\n                                    }).then((data4) => {\r\n                                        if (data4.data.status === 200) {\r\n                                            this.setState((ps) => ({\r\n                                                kills: [...ps.kills, ...data4.data.object.kills],\r\n                                            }));\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/enigmas/admin/team/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((data5) => {\r\n                    if (data5.data.status === 200) {\r\n                        this.setState({enigmas: data5.data.object});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeFeedback = (variant, message) => {\r\n        this.setState({\r\n            message,\r\n            variant,\r\n            open: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                message: '',\r\n                variant: 'positive',\r\n                open: false,\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    updatePic = (url) => {\r\n        const {team} = this.state;\r\n        team.picture = url;\r\n        this.setState({team});\r\n    }\r\n\r\n    updateState = (state) => {\r\n        const {team} = this.state;\r\n\r\n        if (state !== undefined) for (const [key, value] of Object.entries(state)) {\r\n            team[key] = value\r\n        }\r\n\r\n        this.setState({\r\n            team: team\r\n        });\r\n    }\r\n\r\n    handleDeleteUser = (username) => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username,\r\n            },\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                if (data.data.object === true) {\r\n                    const list = [];\r\n                    this.state.users.map((user) => {\r\n                        if (user.username !== username) {\r\n                            list.push(user);\r\n                        }\r\n                        return null;\r\n                    });\r\n                    this.setState({users: list});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAddUser = (data) => {\r\n        if (data === null) {\r\n            this.setState({\r\n                modalOpened: false,\r\n            });\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: `${config.back_Url}/teams/${this.props.match.params.id}/user/`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                username: data.username,\r\n            },\r\n        }).then((data2) => {\r\n            if (data2.data.status === 201) {\r\n                if ('id' in data2.data.object) {\r\n                    this.setState((ps) => ({\r\n                        users: [\r\n                            ...ps.users,\r\n                            data2.data.object,\r\n                        ],\r\n                        modalOpened: false,\r\n                    }));\r\n                } else {\r\n                    this.setState({\r\n                        modalOpened: false,\r\n                    });\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    modalOpened: false,\r\n                });\r\n                this.makeFeedback(\"negative\", data2.data.message)\r\n            }\r\n        });\r\n    }\r\n\r\n    addTargets = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 201) {\r\n                axios({\r\n                    method: 'get',\r\n                    url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n                    headers: {Token: localStorage.getItem('killerToken')},\r\n                }).then((dataTarget) => {\r\n                    if (dataTarget.data.status === 200) {\r\n                        this.setState({\r\n                            targets: dataTarget.data.object,\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                window.alert(\"C'est la merde. PrÃ©viens un admin\");\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDeleteTarget = (username) => {\r\n        const {targets} = this.state;\r\n\r\n        let id = 0;\r\n        let i = 0;\r\n        for (i = 0; i < targets.length; i += 1) {\r\n            if (targets[i].user.username === username) {\r\n                id = targets[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (id !== 0) {\r\n            axios({\r\n                method: 'delete',\r\n                url: `${config.back_Url}/targets/${id}`,\r\n                headers: {Token: localStorage.getItem('killerToken')},\r\n            }).then((data) => {\r\n                if (data.data.status === 200) {\r\n                    targets.splice(i, 1);\r\n                    this.setState({targets});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteTargets = () => {\r\n        axios({\r\n            method: 'delete',\r\n            url: `${config.back_Url}/targets/team/${this.props.match.params.id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n        }).then((data) => {\r\n            if (data.data.status === 200) {\r\n                this.setState({targets: []});\r\n            }\r\n        });\r\n    }\r\n\r\n    handleHint = (hint) => {\r\n        axios({\r\n            method: 'PUT',\r\n            url: `${config.back_Url}/hints/hintTeam/${hint.hintTeams[0].id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                bought: !hint.hintTeams[0].bought,\r\n            },\r\n        }).then((response) => {\r\n            if (response.data === null) {\r\n                // do erro thingy thing\r\n            } else if (response.data.status === 400) {\r\n                // do other error thing\r\n            } else {\r\n                const {team} = this.state;\r\n                const enigmas = [];\r\n                this.state.enigmas.forEach((eni) => {\r\n                    const enigma = eni;\r\n                    enigma.hints = enigma.hints.map((hi) => {\r\n                        const hin = hi;\r\n                        if (hin.id === hint.id) {\r\n                            hin.hintTeams[0].bought = !hin.hintTeams[0].bought;\r\n                        }\r\n                        return hin;\r\n                    });\r\n\r\n                    enigmas.push(enigma);\r\n                });\r\n                team.money += response.data.object;\r\n                this.setState({\r\n                    team,\r\n                    enigmas,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEnigma(enigma) {\r\n        axios({\r\n            method: 'put',\r\n            url: `${config.back_Url}/enigmas/enigmaTeam/${enigma.enigmaTeams[0].id}`,\r\n            headers: {Token: localStorage.getItem('killerToken')},\r\n            data: {\r\n                resolved: !enigma.enigmaTeams[0].resolved,\r\n            },\r\n        }).then((response) => {\r\n            if (response.data === null) {\r\n                // do erro thingy thing\r\n            } else if (response.data.status === 400) {\r\n                // do other error thing\r\n            } else {\r\n                const {team} = this.state;\r\n                const enigmas = [];\r\n                this.state.enigmas.forEach((eni) => {\r\n                    const enig = eni;\r\n                    if (enig.id === enigma.id) {\r\n                        enig.enigmaTeams[0].resolved = !enig.enigmaTeams[0].resolved;\r\n                    }\r\n                    enigmas.push(enig);\r\n                });\r\n                team.money += response.data.object;\r\n                this.setState({\r\n                    team,\r\n                    enigmas,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {enigmas} = this.state;\r\n        if (this.state.team === null) {\r\n            return (\r\n                <Segment className=\"Loading\">\r\n                    <Loader active className=\"test\">Loading</Loader>\r\n                </Segment>\r\n            );\r\n        }\r\n\r\n        const {team, targets, users} = this.state;\r\n        const admin = true;\r\n        return (\r\n            <div className=\"bodyDesktop\">\r\n                <div className=\"spacer\"/>\r\n                <Segment>\r\n                    <div className=\"spacer\"/>\r\n                    <Grid divided columns={2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={4}>\r\n                                <Image size=\"medium\" src={team.picture === null ? noTeamUrl : team.picture}/>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={8}>\r\n                                <h1>{team.name}</h1>\r\n                                <List size=\"big\">\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"king chess\"/>\r\n                                        <List.Content>{team.leader}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"tag\"/>\r\n                                        <List.Content>{nameParser(team.faction)}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"trophy\"/>\r\n                                        <List.Content>{team.score}</List.Content>\r\n                                    </List.Item>\r\n                                    <List.Item>\r\n                                        <List.Icon name=\"money\"/>\r\n                                        <List.Content>{team.money}</List.Content>\r\n                                    </List.Item>\r\n                                </List>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <h2>Membres</h2>\r\n                    <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                        {underscore.map(users, (user) => (\r\n                            <CardUser\r\n                                user={user}\r\n                                key={user.id}\r\n                                admin={admin}\r\n                                handleDelete={(username) => this.handleDeleteUser(username)}\r\n                            />\r\n                        ))}\r\n                        {admin && users.length < 8 ?\r\n                            <Card onClick={() => this.setState({modalOpened: true})}><Card.Content\r\n                                textAlign=\"center\"><Icon\r\n                                size=\"big\" color=\"black\" fitted name=\"add user\"/></Card.Content></Card> : null}\r\n                    </Card.Group>\r\n                    <SearchUser\r\n                        search=\"team\"\r\n                        open={this.state.modalOpened}\r\n                        handleSubmit={this.handleAddUser}\r\n                    />\r\n                    {admin ? (\r\n                        <TeamGestion\r\n                            team={team}\r\n                            updatePic={this.updatePic}\r\n                            updateState={this.updateState}\r\n                            users={users}\r\n                            admin\r\n                        />\r\n                    ) : null}\r\n\r\n                    <Divider/>\r\n                    <h2>Cibles</h2>\r\n                    <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n                        {underscore.map(targets, (target) => {\r\n                            const {user} = target;\r\n                            return (\r\n                                <CardUser\r\n                                    user={user}\r\n                                    key={user.id}\r\n                                    admin={admin}\r\n                                    handleDelete={(username) => this.handleDeleteTarget(username)}\r\n                                    wanted={target.prime}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Card.Group>\r\n                    <div className=\"spacing\"/>\r\n                    <Button\r\n                        onClick={this.addTargets}\r\n                        disabled={targets.length >= 5}\r\n                    >\r\n                        Ajouter les cibles\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.deleteTargets}\r\n                        negative\r\n                        disabled={targets.length <= 0}\r\n                    >\r\n                        Retirer les cibles\r\n                    </Button>\r\n                    {this.state.kills !== []\r\n                        ? (\r\n                            <div>\r\n                                <Divider/>\r\n                                <h2>Meurtres</h2>\r\n                                <Table celled padded sortable>\r\n                                    <Table.Header>\r\n                                        <Table.Row>\r\n                                            <Table.HeaderCell>Victime</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Description</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Date</Table.HeaderCell>\r\n                                            <Table.HeaderCell>Heure</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                    <Table.Body>\r\n                                        {this.state.kills.map((kill) => (\r\n                                            <Table.Row>\r\n                                                <Table.Cell textAlign=\"center\">\r\n                                                    <h5><a\r\n                                                        href={`/users/${kill.deathUser.id}`}>{kill.deathUser.pseudo}</a>\r\n                                                    </h5>\r\n                                                </Table.Cell>\r\n                                                <Table.Cell>{kill.description}</Table.Cell>\r\n                                                <Table.Cell>{kill.jour}</Table.Cell>\r\n                                                <Table.Cell>{kill.heure}</Table.Cell>\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Body>\r\n                                </Table>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    <Divider/>\r\n                    <h2>Ãnigme</h2>\r\n                    <Card.Group doubling centered itemsPerRow={2} className=\"centered\">\r\n                        {enigmas.map((enigma) => (\r\n                            <Card>\r\n                                <Card.Content header={enigma.name}/>\r\n                                <Card.Content>\r\n                                    <div>{enigma.description}</div>\r\n                                    <div className=\"spacing\">\r\n                                        {enigma.enigmaTeams[0].resolved\r\n                                            ? <div><Button color=\"red\"\r\n                                                           onClick={() => this.handleEnigma(enigma)}>Refuser</Button>\r\n                                            </div>\r\n                                            : <div><Button color=\"green\"\r\n                                                           onClick={() => this.handleEnigma(enigma)}>Accepter</Button>\r\n                                            </div>}\r\n                                    </div>\r\n                                </Card.Content>\r\n                                {enigma.hints.length > 0 ? (\r\n                                    <Card.Content>\r\n                                        <Card.Content header=\"Indices\"/>\r\n                                        {enigma.hints.map((hint) => (\r\n                                            <div>\r\n                                                <Button onClick={() => this.handleHint(hint)}\r\n                                                        color={hint.hintTeams[0].bought ? 'red' : 'green'}>{hint.price}</Button>\r\n                                                {hint.value}\r\n                                            </div>\r\n                                        ))}\r\n                                    </Card.Content>\r\n                                ) : null}\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n\r\n                </Segment>\r\n                <div className=\"spacer\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teams;\r\n"]},"metadata":{},"sourceType":"module"}