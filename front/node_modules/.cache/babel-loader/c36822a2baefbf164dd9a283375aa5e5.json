{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\components\\\\user\\\\CardUser.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport nouser from '../../img/nouser.png';\nimport dead from '../../img/dead.png';\nimport afk from '../../img/afk.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst defaultF = () => {};\n\nclass CardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = uri => {\n      this.setState({\n        redirect: uri\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect != null && !this.state.del) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      }\n\n      return null;\n    };\n\n    this.state = {\n      redirect: null,\n      del: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const actionFct = this.props.action === defaultF ? undefined : this.props.action;\n    const clickable = actionFct !== undefined;\n    const uri = this.props.admin ? '/admin/users/' : '/users/';\n    return /*#__PURE__*/_jsxDEV(Card, {\n      onClick: clickable ? () => actionFct(user) : () => this.setRedirect(uri + user.id),\n      children: [this.renderRedirect(), (this.props.admin || this.props.TeamLeader) && this.props.handleDelete !== undefined ? /*#__PURE__*/_jsxDEV(Image, {\n        wrapped: true,\n        src: user.picture === null ? nouser : user.picture,\n        label: {\n          corner: 'right',\n          icon: 'trash',\n          onClick: () => {\n            this.setState({\n              del: true\n            });\n            this.props.handleDelete(user.username);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Image, {\n        wrapped: true,\n        src: user.picture === null ? nouser : user.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        wrapped: true,\n        src: user.alive ? null : dead,\n        style: {\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        wrapped: true,\n        src: user.afk ? afk : null,\n        style: {\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: user.pseudo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: `${user.lastName} ${user.firstName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"trophy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), ' ', user.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"crosshairs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), user.nbKill, ' ', \"/\", /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), user.nbDeath]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nCardUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    pseudo: PropTypes.string,\n    room: PropTypes.string,\n    admin: PropTypes.oneOf(['JOUEUR', 'ADMIN', 'SUPERADMIN']),\n    alive: PropTypes.bool,\n    afk: PropTypes.bool,\n    afkScore: PropTypes.number,\n    teamId: PropTypes.number,\n    phone: PropTypes.string,\n    picture: PropTypes.string,\n    username: PropTypes.string,\n    lastName: PropTypes.string,\n    firstName: PropTypes.string,\n    nbKill: PropTypes.number,\n    nbDeath: PropTypes.number,\n    score: PropTypes.number\n  }).isRequired,\n  action: PropTypes.func,\n  admin: PropTypes.bool,\n  handleDelete: PropTypes.func,\n  TeamLeader: PropTypes.bool\n};\nCardUser.defaultProps = {\n  admin: false,\n  action: defaultF\n};\nexport default CardUser;","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/components/user/CardUser.jsx"],"names":["React","Component","Redirect","Card","Image","Icon","PropTypes","nouser","dead","afk","defaultF","CardUser","constructor","props","setRedirect","uri","setState","redirect","renderRedirect","state","del","componentDidMount","render","user","actionFct","action","undefined","clickable","admin","id","TeamLeader","handleDelete","picture","corner","icon","onClick","username","alive","position","pseudo","lastName","firstName","score","nbKill","nbDeath","propTypes","shape","number","string","room","oneOf","bool","afkScore","teamId","phone","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card, Image, Icon } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport nouser from '../../img/nouser.png';\r\nimport dead from '../../img/dead.png';\r\nimport afk from '../../img/afk.png';\r\n\r\nconst defaultF = () => {};\r\n\r\nclass CardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: null, del: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n    setRedirect = (uri) => {\r\n      this.setState({\r\n        redirect: uri,\r\n      });\r\n    }\r\n\r\n    renderRedirect = () => {\r\n      if (this.state.redirect != null && !this.state.del) {\r\n        return <Redirect to={this.state.redirect} />;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    render() {\r\n      const { user } = this.props;\r\n      const actionFct = this.props.action === defaultF ? undefined : this.props.action;\r\n      const clickable = actionFct !== undefined;\r\n\r\n      const uri = this.props.admin ? '/admin/users/' : '/users/';\r\n\r\n      return (\r\n        <Card onClick={clickable ? () => actionFct(user) : () => this.setRedirect(uri + user.id)}>\r\n          {this.renderRedirect()}\r\n          {(this.props.admin || this.props.TeamLeader) && this.props.handleDelete !== undefined\r\n            ? <Image wrapped src={user.picture === null ? nouser : user.picture} label={{ corner: 'right', icon: 'trash', onClick: () => { this.setState({ del: true }); this.props.handleDelete(user.username); } }} />\r\n            : <Image wrapped src={user.picture === null ? nouser : user.picture} />}\r\n          <Image wrapped src={user.alive ? null : dead} style={{ position: 'absolute' }} />\r\n          <Image wrapped src={user.afk ? afk : null} style={{ position: 'absolute' }} />\r\n          <Card.Content>\r\n            <Card.Header>{user.pseudo}</Card.Header>\r\n            <Card.Meta>{`${user.lastName} ${user.firstName}`}</Card.Meta>\r\n            <Card.Description>\r\n              <Icon name=\"trophy\" />\r\n              {' '}\r\n              {user.score}\r\n            </Card.Description>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n            <Card.Description>\r\n              <Icon name=\"crosshairs\" />\r\n              {user.nbKill}\r\n              {' '}\r\n              /\r\n              <Icon name=\"times\" />\r\n              {user.nbDeath}\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      );\r\n    }\r\n}\r\n\r\nCardUser.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    pseudo: PropTypes.string,\r\n    room: PropTypes.string,\r\n    admin: PropTypes.oneOf(['JOUEUR', 'ADMIN', 'SUPERADMIN']),\r\n    alive: PropTypes.bool,\r\n    afk: PropTypes.bool,\r\n    afkScore: PropTypes.number,\r\n    teamId: PropTypes.number,\r\n    phone: PropTypes.string,\r\n    picture: PropTypes.string,\r\n    username: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    nbKill: PropTypes.number,\r\n    nbDeath: PropTypes.number,\r\n    score: PropTypes.number,\r\n  }).isRequired,\r\n  action: PropTypes.func,\r\n  admin: PropTypes.bool,\r\n  handleDelete: PropTypes.func,\r\n  TeamLeader: PropTypes.bool,\r\n};\r\n\r\nCardUser.defaultProps = {\r\n  admin: false,\r\n  action: defaultF,\r\n};\r\n\r\nexport default CardUser;\r\n"]},"metadata":{},"sourceType":"module"}