{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inRange2 = _interopRequireDefault(require(\"lodash/inRange\"));\n\nvar _first3 = _interopRequireDefault(require(\"lodash/first\"));\n\nvar _invoke2 = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _some2 = _interopRequireDefault(require(\"lodash/some\"));\n/**\n * Determines if a click's coordinates are within the bounds of a node.\n *\n * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384\n *\n * @param {object} node - A DOM node.\n * @param {object} e - A SyntheticEvent or DOM Event.\n * @returns {boolean}\n */\n\n\nvar doesNodeContainClick = function doesNodeContainClick(node, e) {\n  if ((0, _some2.default)([e, node], _isNil2.default)) return false; // if there is an e.target and it is in the document, use a simple node.contains() check\n\n  if (e.target) {\n    (0, _invoke2.default)(e.target, 'setAttribute', 'data-suir-click-target', true);\n\n    if (document.querySelector('[data-suir-click-target=true]')) {\n      (0, _invoke2.default)(e.target, 'removeAttribute', 'data-suir-click-target');\n      return node.contains(e.target);\n    }\n  } // Below logic handles cases where the e.target is no longer in the document.\n  // The result of the click likely has removed the e.target node.\n  // Instead of node.contains(), we'll identify the click by X/Y position.\n  // return early if the event properties aren't available\n  // prevent measuring the node and repainting if we don't need to\n\n\n  var clientX = e.clientX,\n      clientY = e.clientY;\n  if ((0, _some2.default)([clientX, clientY], _isNil2.default)) return false; // false if the node is not visible\n\n  var clientRects = node.getClientRects(); // Heads Up!\n  // getClientRects returns a DOMRectList, not an array nor a plain object\n  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes\n\n  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false; // false if the node doesn't have a valid bounding rect\n\n  var _first2 = (0, _first3.default)(clientRects),\n      top = _first2.top,\n      bottom = _first2.bottom,\n      left = _first2.left,\n      right = _first2.right;\n\n  if ((0, _some2.default)([top, bottom, left, right], _isNil2.default)) return false; // we add a small decimal to the upper bound just to make it inclusive\n  // don't add an whole pixel (1) as the event/node values may be decimal sensitive\n\n  return (0, _inRange2.default)(clientY, top, bottom + 0.001) && (0, _inRange2.default)(clientX, left, right + 0.001);\n};\n\nvar _default = doesNodeContainClick;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/louis/killer/front/node_modules/semantic-ui-react/dist/commonjs/lib/doesNodeContainClick.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_inRange2","_first3","_invoke2","_isNil2","_some2","doesNodeContainClick","node","e","target","document","querySelector","contains","clientX","clientY","clientRects","getClientRects","offsetWidth","offsetHeight","length","_first2","top","bottom","left","right","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGL,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAtC;;AAEA,IAAIK,OAAO,GAAGN,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIM,QAAQ,GAAGP,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAArC;;AAEA,IAAIO,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIQ,MAAM,GAAGT,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,IAA9B,EAAoCC,CAApC,EAAuC;AAChE,MAAI,CAAC,GAAGH,MAAM,CAACL,OAAX,EAAoB,CAACQ,CAAD,EAAID,IAAJ,CAApB,EAA+BH,OAAO,CAACJ,OAAvC,CAAJ,EAAqD,OAAO,KAAP,CADW,CACG;;AAEnE,MAAIQ,CAAC,CAACC,MAAN,EAAc;AACZ,KAAC,GAAGN,QAAQ,CAACH,OAAb,EAAsBQ,CAAC,CAACC,MAAxB,EAAgC,cAAhC,EAAgD,wBAAhD,EAA0E,IAA1E;;AAEA,QAAIC,QAAQ,CAACC,aAAT,CAAuB,+BAAvB,CAAJ,EAA6D;AAC3D,OAAC,GAAGR,QAAQ,CAACH,OAAb,EAAsBQ,CAAC,CAACC,MAAxB,EAAgC,iBAAhC,EAAmD,wBAAnD;AACA,aAAOF,IAAI,CAACK,QAAL,CAAcJ,CAAC,CAACC,MAAhB,CAAP;AACD;AACF,GAV+D,CAU9D;AACF;AACA;AACA;AACA;;;AAGA,MAAII,OAAO,GAAGL,CAAC,CAACK,OAAhB;AAAA,MACIC,OAAO,GAAGN,CAAC,CAACM,OADhB;AAEA,MAAI,CAAC,GAAGT,MAAM,CAACL,OAAX,EAAoB,CAACa,OAAD,EAAUC,OAAV,CAApB,EAAwCV,OAAO,CAACJ,OAAhD,CAAJ,EAA8D,OAAO,KAAP,CAnBE,CAmBY;;AAE5E,MAAIe,WAAW,GAAGR,IAAI,CAACS,cAAL,EAAlB,CArBgE,CAqBvB;AACzC;AACA;;AAEA,MAAI,CAACT,IAAI,CAACU,WAAN,IAAqB,CAACV,IAAI,CAACW,YAA3B,IAA2C,CAACH,WAA5C,IAA2D,CAACA,WAAW,CAACI,MAA5E,EAAoF,OAAO,KAAP,CAzBpB,CAyBkC;;AAElG,MAAIC,OAAO,GAAG,CAAC,GAAGlB,OAAO,CAACF,OAAZ,EAAqBe,WAArB,CAAd;AAAA,MACIM,GAAG,GAAGD,OAAO,CAACC,GADlB;AAAA,MAEIC,MAAM,GAAGF,OAAO,CAACE,MAFrB;AAAA,MAGIC,IAAI,GAAGH,OAAO,CAACG,IAHnB;AAAA,MAIIC,KAAK,GAAGJ,OAAO,CAACI,KAJpB;;AAMA,MAAI,CAAC,GAAGnB,MAAM,CAACL,OAAX,EAAoB,CAACqB,GAAD,EAAMC,MAAN,EAAcC,IAAd,EAAoBC,KAApB,CAApB,EAAgDpB,OAAO,CAACJ,OAAxD,CAAJ,EAAsE,OAAO,KAAP,CAjCN,CAiCoB;AACpF;;AAEA,SAAO,CAAC,GAAGC,SAAS,CAACD,OAAd,EAAuBc,OAAvB,EAAgCO,GAAhC,EAAqCC,MAAM,GAAG,KAA9C,KAAwD,CAAC,GAAGrB,SAAS,CAACD,OAAd,EAAuBa,OAAvB,EAAgCU,IAAhC,EAAsCC,KAAK,GAAG,KAA9C,CAA/D;AACD,CArCD;;AAuCA,IAAIC,QAAQ,GAAGnB,oBAAf;AACAR,OAAO,CAACE,OAAR,GAAkByB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inRange2 = _interopRequireDefault(require(\"lodash/inRange\"));\n\nvar _first3 = _interopRequireDefault(require(\"lodash/first\"));\n\nvar _invoke2 = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _some2 = _interopRequireDefault(require(\"lodash/some\"));\n\n/**\n * Determines if a click's coordinates are within the bounds of a node.\n *\n * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384\n *\n * @param {object} node - A DOM node.\n * @param {object} e - A SyntheticEvent or DOM Event.\n * @returns {boolean}\n */\nvar doesNodeContainClick = function doesNodeContainClick(node, e) {\n  if ((0, _some2.default)([e, node], _isNil2.default)) return false; // if there is an e.target and it is in the document, use a simple node.contains() check\n\n  if (e.target) {\n    (0, _invoke2.default)(e.target, 'setAttribute', 'data-suir-click-target', true);\n\n    if (document.querySelector('[data-suir-click-target=true]')) {\n      (0, _invoke2.default)(e.target, 'removeAttribute', 'data-suir-click-target');\n      return node.contains(e.target);\n    }\n  } // Below logic handles cases where the e.target is no longer in the document.\n  // The result of the click likely has removed the e.target node.\n  // Instead of node.contains(), we'll identify the click by X/Y position.\n  // return early if the event properties aren't available\n  // prevent measuring the node and repainting if we don't need to\n\n\n  var clientX = e.clientX,\n      clientY = e.clientY;\n  if ((0, _some2.default)([clientX, clientY], _isNil2.default)) return false; // false if the node is not visible\n\n  var clientRects = node.getClientRects(); // Heads Up!\n  // getClientRects returns a DOMRectList, not an array nor a plain object\n  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes\n\n  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false; // false if the node doesn't have a valid bounding rect\n\n  var _first2 = (0, _first3.default)(clientRects),\n      top = _first2.top,\n      bottom = _first2.bottom,\n      left = _first2.left,\n      right = _first2.right;\n\n  if ((0, _some2.default)([top, bottom, left, right], _isNil2.default)) return false; // we add a small decimal to the upper bound just to make it inclusive\n  // don't add an whole pixel (1) as the event/node values may be decimal sensitive\n\n  return (0, _inRange2.default)(clientY, top, bottom + 0.001) && (0, _inRange2.default)(clientX, left, right + 0.001);\n};\n\nvar _default = doesNodeContainClick;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}