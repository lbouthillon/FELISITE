{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\killer\\\\front\\\\src\\\\pages\\\\admin\\\\afk.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Loader, Card, Icon, Image, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport nouser from '../../img/nouser.png';\nimport config from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class afk extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = offset => {\n      axios({\n        method: 'get',\n        url: `${config.back_Url}/users?afk=true`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        params: {\n          offset\n        }\n      }).then(data => {\n        if (data.data.status === 200) {\n          if (data.data.object.length === 10) {\n            this.setState(prevState => ({\n              loading: true,\n              users: [...prevState.users, ...data.data.object]\n            }));\n            this.fetchData(offset + 10);\n          } else {\n            this.setState(prevState => ({\n              loading: false,\n              users: [...prevState.users, ...data.data.object]\n            }));\n          }\n        }\n      });\n    };\n\n    this.makeAfk = id => {\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          afk: true,\n          afkScore: -1020\n        }\n      }).then(response => {\n        if (response.data.status === 200) {\n          const users = [];\n          let afkUser = null;\n          this.state.users.forEach(user => {\n            if (user.id === id) {\n              afkUser = user;\n              afkUser.afk = true;\n              afkUser.afkScore = -1020;\n            }\n\n            users.push(user);\n          });\n          this.setState({\n            users\n          });\n          axios({\n            method: 'delete',\n            url: `${config.back_Url}/targets/user/${id}`,\n            headers: {\n              Token: localStorage.getItem('killerToken')\n            },\n            params: {\n              remake: true\n            }\n          });\n        }\n      });\n    };\n\n    this.noMoreAfk = id => {\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          afk: false,\n          afkScore: 650\n        }\n      }).then(response => {\n        if (response.data.status === 200) {\n          const users = [];\n          let afkUser = null;\n          this.state.users.forEach(user => {\n            if (user.id === id) {\n              afkUser = user;\n              afkUser.afk = false;\n              afkUser.afkScore = 650;\n            }\n\n            users.push(user);\n          });\n          this.setState({\n            users\n          });\n        }\n      });\n    };\n\n    this.seen = (id, score) => {\n      axios({\n        method: 'put',\n        url: `${config.back_Url}/users/${id}`,\n        headers: {\n          Token: localStorage.getItem('killerToken')\n        },\n        data: {\n          afkScore: score + 250 > 1020 ? 1020 : score + 250\n        }\n      }).then(response => {\n        if (response.data.status === 200) {\n          const users = [];\n          let afkUser = null;\n          this.state.users.forEach(user => {\n            if (user.id === id) {\n              afkUser = user;\n              afkUser.afkScore = score + 250 > 1020 ? 1020 : score + 250;\n            }\n\n            users.push(user);\n          });\n          this.setState({\n            users\n          });\n        }\n      });\n    };\n\n    this.state = {\n      users: [],\n      loading: true\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData(0);\n  }\n\n  render() {\n    if (this.state.users == null) {\n      return /*#__PURE__*/_jsxDEV(Segment, {\n        className: \"Loading\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          active: true,\n          className: \"test\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyDesktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Joueurs en jeu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: underscore.map(this.state.users, (user, key) => {\n            if (user.afk) {\n              return null;\n            }\n\n            return /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                wrapped: true,\n                src: user.picture === null ? nouser : user.picture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: user.pseudo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                  children: `${user.lastName} ${user.firstName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"trophy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this), ' ', user.afkScore]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                extra: true,\n                children: /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    icon: true,\n                    negative: true,\n                    onClick: () => this.makeAfk(user.id),\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 83\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    icon: true,\n                    onClick: () => this.seen(user.id, user.afkScore),\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"eye\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 86\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, key + \"afkPlayer\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Joueurs AFK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n          doubling: true,\n          centered: true,\n          itemsPerRow: 6,\n          className: \"centered\",\n          children: underscore.map(this.state.users, user => {\n            if (!user.afk) {\n              return null;\n            }\n\n            return /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                wrapped: true,\n                src: user.picture === null ? nouser : user.picture\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: user.pseudo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                  children: `${user.lastName} ${user.firstName}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"trophy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), ' ', user.afkScore]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                extra: true,\n                children: /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    icon: true,\n                    positive: true,\n                    onClick: () => this.noMoreAfk(user.id),\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SmallLoading\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            size: \"large\",\n            loading: true,\n            name: \"redo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/louis/killer/front/src/pages/admin/afk.jsx"],"names":["React","Component","Segment","Loader","Card","Icon","Image","Button","axios","underscore","nouser","config","afk","constructor","props","fetchData","offset","method","url","back_Url","headers","Token","localStorage","getItem","params","then","data","status","object","length","setState","prevState","loading","users","makeAfk","id","afkScore","response","afkUser","state","forEach","user","push","remake","noMoreAfk","seen","score","bind","componentDidMount","render","map","key","picture","pseudo","lastName","firstName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Segment, Loader, Card, Icon, Image, Button,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport underscore from 'underscore';\r\n\r\nimport nouser from '../../img/nouser.png';\r\n\r\nimport config from '../../config.json';\r\n\r\nexport default class afk extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      loading: true,\r\n\r\n    };\r\n\r\n    this.fetchData = this.fetchData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData(0);\r\n  }\r\n\r\n  fetchData = (offset) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `${config.back_Url}/users?afk=true`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n      params: {\r\n        offset,\r\n      },\r\n    }).then((data) => {\r\n      if (data.data.status === 200) {\r\n        if (data.data.object.length === 10) {\r\n          this.setState((prevState) => ({\r\n            loading: true,\r\n            users: [\r\n              ...prevState.users,\r\n              ...data.data.object,\r\n            ],\r\n          }));\r\n          this.fetchData(offset + 10);\r\n        } else {\r\n          this.setState((prevState) => ({\r\n            loading: false,\r\n            users: [\r\n              ...prevState.users,\r\n              ...data.data.object,\r\n            ],\r\n          }));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  makeAfk = (id) => {\r\n    axios({\r\n      method: 'put',\r\n      url: `${config.back_Url}/users/${id}`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n      data: {\r\n        afk: true,\r\n        afkScore: -1020,\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.status === 200) {\r\n        const users = [];\r\n        let afkUser = null;\r\n        this.state.users.forEach((user) => {\r\n          if (user.id === id) {\r\n            afkUser = user;\r\n            afkUser.afk = true;\r\n            afkUser.afkScore = -1020;\r\n          }\r\n          users.push(user);\r\n        });\r\n        this.setState({ users });\r\n        axios({\r\n          method: 'delete',\r\n          url: `${config.back_Url}/targets/user/${id}`,\r\n          headers: { Token: localStorage.getItem('killerToken') },\r\n          params: {\r\n            remake: true,\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  noMoreAfk = (id) => {\r\n    axios({\r\n      method: 'put',\r\n      url: `${config.back_Url}/users/${id}`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n      data: {\r\n        afk: false,\r\n        afkScore: 650,\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.status === 200) {\r\n        const users = [];\r\n        let afkUser = null;\r\n        this.state.users.forEach((user) => {\r\n          if (user.id === id) {\r\n            afkUser = user;\r\n            afkUser.afk = false;\r\n            afkUser.afkScore = 650;\r\n          }\r\n          users.push(user);\r\n        });\r\n        this.setState({ users });\r\n      }\r\n    });\r\n  }\r\n\r\n  seen = (id, score) => {\r\n    axios({\r\n      method: 'put',\r\n      url: `${config.back_Url}/users/${id}`,\r\n      headers: { Token: localStorage.getItem('killerToken') },\r\n      data: {\r\n        afkScore: score + 250 > 1020 ? 1020 : score + 250,\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.status === 200) {\r\n        const users = [];\r\n        let afkUser = null;\r\n        this.state.users.forEach((user) => {\r\n          if (user.id === id) {\r\n            afkUser = user;\r\n            afkUser.afkScore = score + 250 > 1020 ? 1020 : score + 250;\r\n          }\r\n          users.push(user);\r\n        });\r\n        this.setState({ users });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.users == null) {\r\n      return (\r\n        <Segment className=\"Loading\">\r\n          <Loader active className=\"test\">Loading</Loader>\r\n        </Segment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"bodyDesktop\">\r\n        <div className=\"spacer\" />\r\n        <Segment>\r\n          <h2>Joueurs en jeu</h2>\r\n          <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n            {underscore.map(this.state.users, (user, key) => {\r\n              if (user.afk) {\r\n                return null;\r\n              }\r\n              return (\r\n                <Card key={key + \"afkPlayer\"}>\r\n                  <Image wrapped src={user.picture === null ? nouser : user.picture} />\r\n\r\n                  <Card.Content>\r\n                    <Card.Header>{user.pseudo}</Card.Header>\r\n                    <Card.Meta>{`${user.lastName} ${user.firstName}`}</Card.Meta>\r\n                    <Card.Description>\r\n                      <Icon name=\"trophy\" />\r\n                      {' '}\r\n                      {user.afkScore}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Card.Description>\r\n                      <Button icon negative onClick={() => this.makeAfk(user.id)}><Icon name=\"delete\" /></Button>\r\n                      <Button icon onClick={() => this.seen(user.id, user.afkScore)}><Icon name=\"eye\" /></Button>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Card.Group>\r\n          <h2>Joueurs AFK</h2>\r\n          <Card.Group doubling centered itemsPerRow={6} className=\"centered\">\r\n            {underscore.map(this.state.users, (user) => {\r\n              if (!user.afk) {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <Card>\r\n                  <Image wrapped src={user.picture === null ? nouser : user.picture} />\r\n\r\n                  <Card.Content>\r\n                    <Card.Header>{user.pseudo}</Card.Header>\r\n                    <Card.Meta>{`${user.lastName} ${user.firstName}`}</Card.Meta>\r\n                    <Card.Description>\r\n                      <Icon name=\"trophy\" />\r\n                      {' '}\r\n                      {user.afkScore}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Card.Description>\r\n                      <Button icon positive onClick={() => this.noMoreAfk(user.id)}><Icon name=\"plus\" /></Button>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Card.Group>\r\n          {this.state.loading\r\n            ? (\r\n              <div className=\"SmallLoading\">\r\n                <Icon size=\"large\" loading name=\"redo\" />\r\n                <p>Loading...</p>\r\n              </div>\r\n            )\r\n            : null}\r\n        </Segment>\r\n        <div className=\"spacer\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}